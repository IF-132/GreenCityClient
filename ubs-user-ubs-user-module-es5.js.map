{"version":3,"sources":["webpack:///src/app/ubs-user/services/client-profile.service.ts","webpack:///src/app/ubs-user/services/user-orders.service.ts","webpack:///src/app/ubs-user/ubs-user-bonuses/services/bonuses.service.ts","webpack:///src/app/ubs-user/ubs-user-bonuses/ubs-user-bonuses.component.ts","webpack:///src/app/ubs-user/ubs-user-bonuses/ubs-user-bonuses.component.html","webpack:///src/app/ubs-user/ubs-user-messages/notification-body/notification-body.component.ts","webpack:///src/app/ubs-user/ubs-user-messages/notification-body/notification-body.component.html","webpack:///src/app/ubs-user/ubs-user-messages/ubs-user-messages.component.ts","webpack:///src/app/ubs-user/ubs-user-messages/ubs-user-messages.component.html","webpack:///src/app/ubs-user/ubs-user-order-details/ubs-user-order-details.component.ts","webpack:///src/app/ubs-user/ubs-user-order-details/ubs-user-order-details.component.html","webpack:///src/app/ubs-user/ubs-user-orders-list/ubs-user-orders-list.component.ts","webpack:///src/app/ubs-user/ubs-user-orders-list/ubs-user-orders-list.component.html","webpack:///src/app/ubs-user/ubs-user-orders/ubs-user-orders.component.ts","webpack:///src/app/ubs-user/ubs-user-orders/ubs-user-orders.component.html","webpack:///src/app/ubs-user/ubs-user-profile-page/ubs-profile-change-password-pop-up/ubs-profile-change-password-pop-up.component.ts","webpack:///src/app/ubs-user/ubs-user-profile-page/ubs-profile-change-password-pop-up/ubs-profile-change-password-pop-up.component.html","webpack:///src/app/ubs-user/ubs-user-profile-page/ubs-profile-delete-pop-up/ubs-profile-delete-pop-up.component.ts","webpack:///src/app/ubs-user/ubs-user-profile-page/ubs-profile-delete-pop-up/ubs-profile-delete-pop-up.component.html","webpack:///src/app/ubs-user/ubs-user-profile-page/ubs-user-profile-page.component.ts","webpack:///src/app/ubs-user/ubs-user-profile-page/ubs-user-profile-page.component.html","webpack:///src/app/ubs-user/ubs-user-routing.module.ts","webpack:///src/app/ubs-user/ubs-user-sidebar/ubs-user-sidebar.component.ts","webpack:///src/app/ubs-user/ubs-user-sidebar/ubs-user-sidebar.component.html","webpack:///src/app/ubs-user/ubs-user.component.ts","webpack:///src/app/ubs-user/ubs-user.component.html","webpack:///src/app/ubs-user/ubs-user.module.ts"],"names":["ClientProfileService","http","get","user","post","providedIn","UserOrdersService","url","lang","localStorage","getItem","orderId","BonusesService","backendUbsLink","UbsUserBonusesComponent","snackBar","bonusesService","displayedColumns","dataSource","isLoading","destroy","getBonusesData","sort","getUserBonuses","pipe","subscribe","res","bonusesList","ubsUserBonuses","data","totalBonuses","userBonuses","error","openSnackBar","slice","active","direction","a","b","isAsc","compare","Date","dateOfEnrollment","getDate","next","unsubscribe","selector","templateUrl","styleUrls","NotificationBodyComponent","userMessagesService","router","elementRef","navigate","nativeElement","querySelector","addEventListener","redirectToPayment","bind","encapsulation","None","UbsUserMessagesComponent","localStorageService","route","isAnyMessages","panelOpenState","page","count","pageSize","destroyed$","localization","title","id","themeMessages","time","params","val","snapshot","paramMap","subscribeToLangChange","languageBehaviourSubject","fetchNotification","isLoadBar","getNotification","response","notifications","totalElements","length","isLoadSpinner","console","log","notificationId","isRead","isGetNotificationBody","notificationItem","find","item","body","read","countOfNoReadeMessages","forEach","isLoadSmallSpinner","setReadNotification","findNotification","isOpen","event","UbsUserOrderDetailsComponent","UbsUserOrdersListComponent","userOrdersService","dialog","order","generalOrderInfo","orderStatus","orders","extend","deleteOrder","i","splice","UbsUserOrdersComponent","loading","getAllUserOrders","err","currentOrders","filter","orderHistory","UbsProfileChangePasswordPopUpComponent","fb","passRegexp","initForm","formConfig","group","password","required","pattern","currentPassword","confirmPassword","validators","checkConfirmPassword","checkNewPassword","value","notSame","same","UbsProfileDeletePopUpComponent","UbsUserProfilePageComponent","clientProfileService","defaultAddress","actual","city","coordinates","latitude","longitude","district","entranceNumber","houseCorpus","houseNumber","street","googleIcon","picGoogle","isEditing","isFetching","phoneMask","regexp","regexpEmail","regexpWithDigits","getUserData","recipientPhone","getDataClientProfile","userProfile","composeFormData","addressDto","userInit","userForm","address","maxLength","recipientName","recipientSurname","recipientEmail","minLength","valid","submitData","postDataClientProfile","open","hasBackdrop","routes","path","component","canActivate","children","UbsUserRoutingModule","forChild","imports","exports","UbsUserSidebarComponent","service","breakpointObserver","jwtService","listElementsUser","link","name","routerLink","UbsUserComponent","translate","setDefaultLang","complete","UbsUserModule","loader","provide","useFactory","createTranslateLoaderUbsUser","deps","isolate","declarations","entryComponents"],"mappings":"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","file":"ubs-user-ubs-user-module-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { mainUbsLink } from 'src/app/main/links';\r\nimport { UserProfile } from '../../ubs-admin/models/ubs-admin.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientProfileService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getDataClientProfile() {\r\n    return this.http.get(`${mainUbsLink}/ubs/userProfile/user/getUserProfile`);\r\n  }\r\n\r\n  postDataClientProfile(user: UserProfile) {\r\n    return this.http.post(`${mainUbsLink}/ubs/userProfile/user/update`, user);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserOrdersService {\r\n  private url = 'https://greencity-ubs.azurewebsites.net/ubs/client';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllUserOrders(): Observable<any> {\r\n    const lang = localStorage.getItem('language') === 'ua' ? 1 : 2;\r\n    return this.http.get<any[]>(`${this.url}/get-all-orders-data/${lang}`);\r\n  }\r\n\r\n  public deleteOrder(orderId: number): Observable<object> {\r\n    return this.http.delete<object>(`${this.url}/delete-order/${orderId}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '@environment/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BonusesModel } from '../models/BonusesModel';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BonusesService {\r\n  private url: string = environment.backendUbsLink;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUserBonuses(): Observable<BonusesModel> {\r\n    return this.http.get<BonusesModel>(`${this.url}/ubs/client/users-pointsToUse`);\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BonusesModel } from './models/BonusesModel';\r\nimport { BonuseModel } from './models/BonuseModel';\r\nimport { BonusesService } from './services/bonuses.service';\r\nimport { Subject, throwError } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { MatSnackBarComponent } from '@global-errors/mat-snack-bar/mat-snack-bar.component';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-bonuses',\r\n  templateUrl: './ubs-user-bonuses.component.html',\r\n  styleUrls: ['./ubs-user-bonuses.component.scss']\r\n})\r\nexport class UbsUserBonusesComponent implements OnInit, OnDestroy {\r\n  displayedColumns: string[] = ['dateOfEnrollment', 'amount', 'reason'];\r\n  dataSource = new MatTableDataSource<BonuseModel>();\r\n  totalBonuses: number;\r\n  isLoading = true;\r\n  bonusesList: BonuseModel[];\r\n  destroy: Subject<boolean> = new Subject<boolean>();\r\n\r\n  constructor(private snackBar: MatSnackBarComponent, private bonusesService: BonusesService) {}\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngOnInit() {\r\n    this.getBonusesData();\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getBonusesData() {\r\n    this.isLoading = true;\r\n    this.bonusesService\r\n      .getUserBonuses()\r\n      .pipe(takeUntil(this.destroy))\r\n      .subscribe(\r\n        (res: BonusesModel) => {\r\n          this.bonusesList = res.ubsUserBonuses;\r\n          this.dataSource.data = res.ubsUserBonuses;\r\n          this.totalBonuses = res.userBonuses;\r\n          this.isLoading = false;\r\n        },\r\n        (error) => {\r\n          this.isLoading = false;\r\n          this.snackBar.openSnackBar('Oops, something went wrong. Please reload page or try again later.');\r\n          return throwError(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.bonusesList.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      return;\r\n    }\r\n\r\n    this.dataSource.data = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      return this.compare(new Date(a.dateOfEnrollment).getDate(), new Date(b.dateOfEnrollment).getDate(), isAsc);\r\n    });\r\n  }\r\n\r\n  compare(a: number | string, b: number | string, isAsc: boolean) {\r\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n    this.destroy.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"bonuses-container\">\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <div class=\"no-bonuses-wrapper\" *ngIf=\"!totalBonuses\">\r\n      <span class=\"no-bonuses-text\">{{ 'bonuses.no-bonuses' | translate }}</span>\r\n      <a href=\"#\" class=\"more-about-bonuses-link\">{{ 'bonuses.get-bonuses' | translate }}</a>\r\n    </div>\r\n    <div class=\"bonuses-exist-wrapper\" *ngIf=\"totalBonuses\">\r\n      <div class=\"total-bonuses-number\">\r\n        <p class=\"total-bonuses-number__header\">{{ 'bonuses.title' | translate }}</p>\r\n        <p class=\"total-bonuses-number__amount\">{{ totalBonuses }}</p>\r\n      </div>\r\n      <a href=\"\" class=\"more-about-bonuses-link link-center\">{{ 'bonuses.about-bonuses-system' | translate }}</a>\r\n      <div class=\"bonuses-table-wrapper\">\r\n        <table\r\n          mat-table\r\n          [dataSource]=\"dataSource\"\r\n          class=\"table\"\r\n          matSort\r\n          (matSortChange)=\"sortData($event)\"\r\n          aria-label=\"user's bonuses table\"\r\n        >\r\n          <ng-container matColumnDef=\"dateOfEnrollment\">\r\n            <th mat-header-cell *matHeaderCellDef class=\"table-header\" mat-sort-header scope=\"col\">\r\n              {{ 'bonuses.enrollment-date' | translate }}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">{{ element.dateOfEnrollment | date: 'd.MM.yyyy' }}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"amount\">\r\n            <th mat-header-cell *matHeaderCellDef scope=\"col\">{{ 'bonuses.amount' | translate }}</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{ element.amount }}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"reason\">\r\n            <th mat-header-cell *matHeaderCellDef scope=\"col\">{{ 'bonuses.reason' | translate }}</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{ 'bonuses.order' | translate }} №{{ element.numberOfOrder }}</td>\r\n          </ng-container>\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <app-ubs-spinner *ngIf=\"isLoading\"></app-ubs-spinner>\r\n</div>\r\n","import { AfterViewInit, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\r\nimport { UserMessagesService } from '../../services/user-messages.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-notification-body',\r\n  templateUrl: './notification-body.component.html',\r\n  styleUrls: ['./notification-body.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NotificationBodyComponent implements AfterViewInit {\r\n  @Input() body: string;\r\n  @Input() orderId: number;\r\n  buttonRedirect: any;\r\n\r\n  constructor(public userMessagesService: UserMessagesService, public router: Router, private elementRef: ElementRef) {}\r\n\r\n  redirectToPayment() {\r\n    this.router.navigate(['ubs/notification/confirm/' + this.orderId]);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.elementRef.nativeElement.querySelector('.button-pay')) {\r\n      this.elementRef.nativeElement.querySelector('.button-pay').addEventListener('click', this.redirectToPayment.bind(this));\r\n    }\r\n  }\r\n}\r\n","<div [innerHTML]=\"this.body | translate\"></div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { UserMessagesService } from '../services/user-messages.service';\r\nimport { LocalStorageService } from '@global-service/localstorage/local-storage.service';\r\nimport { NotificationBody } from '../../ubs-admin/models/ubs-user.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ReplaySubject, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-messages',\r\n  templateUrl: './ubs-user-messages.component.html',\r\n  styleUrls: ['./ubs-user-messages.component.scss']\r\n})\r\nexport class UbsUserMessagesComponent implements OnInit, OnDestroy {\r\n  isAnyMessages = true;\r\n  notifications: NotificationBody[];\r\n  panelOpenState = false;\r\n  page = 1;\r\n  count = 0;\r\n  pageSize = 10;\r\n  isLoadSpinner: boolean;\r\n  isLoadSmallSpinner: boolean;\r\n  isLoadBar: boolean;\r\n  public countOfMessages: number;\r\n  private destroyed$: ReplaySubject<any> = new ReplaySubject<any>(1);\r\n  destroy: Subject<boolean> = new Subject<boolean>();\r\n  localization = {\r\n    title: 'ubs-user-notification.title',\r\n    id: 'ubs-user-notification.title-table.number',\r\n    themeMessages: 'ubs-user-notification.title-table.theme-messages',\r\n    time: 'ubs-user-notification.title-table.time'\r\n  };\r\n\r\n  constructor(\r\n    private userMessagesService: UserMessagesService,\r\n    private localStorageService: LocalStorageService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe((val) => {\r\n      this.page = +this.route.snapshot.paramMap.get('pageId');\r\n      this.subscribeToLangChange();\r\n    });\r\n  }\r\n\r\n  private subscribeToLangChange() {\r\n    this.localStorageService.languageBehaviourSubject.pipe(takeUntil(this.destroyed$)).subscribe(() => this.fetchNotification());\r\n  }\r\n\r\n  fetchNotification(): void {\r\n    this.isLoadBar = true;\r\n    this.userMessagesService\r\n      .getNotification(this.page - 1, this.pageSize)\r\n      .pipe(takeUntil(this.destroy))\r\n      .subscribe(\r\n        (response) => {\r\n          this.notifications = response.page;\r\n          this.count = response.totalElements;\r\n          this.isAnyMessages = this.notifications.length > 0;\r\n          this.isLoadSpinner = this.isLoadBar = false;\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  setRead(notificationId: number, isRead: boolean) {\r\n    let isGetNotificationBody = true;\r\n    let notificationItem: NotificationBody;\r\n    notificationItem = this.notifications.find((item) => item.id === notificationId);\r\n    if (notificationItem.body) {\r\n      isGetNotificationBody = false;\r\n    }\r\n    if (!notificationItem.read) {\r\n      this.userMessagesService.countOfNoReadeMessages--;\r\n    }\r\n    if (isGetNotificationBody) {\r\n      this.notifications.forEach((item) => {\r\n        if (item.id === notificationId) {\r\n          item.read = true;\r\n        }\r\n      });\r\n      this.isLoadSmallSpinner = true;\r\n      this.userMessagesService\r\n        .setReadNotification(notificationId)\r\n        .pipe(takeUntil(this.destroy))\r\n        .subscribe((response) => {\r\n          const findNotification = this.notifications.find((item) => item.id === notificationId);\r\n          findNotification.body = response.body;\r\n          findNotification.isOpen = true;\r\n          this.isLoadSmallSpinner = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  onTableDataChange(event) {\r\n    this.router.navigate(['/ubs-user/messages/' + event]);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n    this.destroy.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <div class=\"content\">\r\n    <div class=\"main_header\">{{ localization.title | translate }}</div>\r\n    <div class=\"header-list\">\r\n      <div class=\"col-2 id\">{{ localization.id | translate }}</div>\r\n      <div class=\"col-5\">{{ localization.themeMessages | translate }}</div>\r\n      <div class=\"col-5 time\">{{ localization.time | translate }}</div>\r\n    </div>\r\n    <div class=\"under-line\"></div>\r\n    <div class=\"load-spinner\" *ngIf=\"isLoadSpinner\">\r\n      <mat-spinner class=\"custom-spinner\"></mat-spinner>\r\n    </div>\r\n    <div class=\"load-bar\" *ngIf=\"isLoadBar\">\r\n      <mat-progress-bar class=\"custom-bar\" mode=\"indeterminate\"></mat-progress-bar>\r\n    </div>\r\n    <div *ngIf=\"!isAnyMessages\" class=\"if-empty\">У вас ще немає повідомлень</div>\r\n    <div *ngIf=\"isAnyMessages\">\r\n      <mat-accordion multi=\"false\">\r\n        <mat-expansion-panel\r\n          *ngFor=\"\r\n            let notification of notifications\r\n              | paginate\r\n                : {\r\n                    id: 'pag',\r\n                    itemsPerPage: pageSize,\r\n                    currentPage: page,\r\n                    totalItems: count\r\n                  }\r\n          \"\r\n          (click)=\"setRead(notification.id, notification.read)\"\r\n          (opened)=\"panelOpenState = true\"\r\n          (closed)=\"panelOpenState = false\"\r\n        >\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title [ngClass]=\"{ textColorTitle: !notification.read }\">\r\n              <div class=\"col-2\">{{ notification.id }}</div>\r\n            </mat-panel-title>\r\n            <mat-panel-description [ngClass]=\"{ textColorTitle: !notification.read }\" class=\"title\">\r\n              {{ notification.title }}\r\n            </mat-panel-description>\r\n            <mat-panel-description class=\"date\" [ngClass]=\"{ textColorTitle: !notification.read }\">\r\n              {{ notification.notificationTime | date: 'HH:mm dd.MM.yyyy' }}\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n          <div class=\"load-spinner small\" *ngIf=\"isLoadSmallSpinner && !notification.isOpen\">\r\n            <mat-spinner class=\"custom-spinner\" diameter=\"60\"></mat-spinner>\r\n          </div>\r\n          <div class=\"description\" *ngIf=\"!isLoadSmallSpinner\">\r\n            <app-notification-body [body]=\"notification.body\" [orderId]=\"notification.orderId\"></app-notification-body>\r\n          </div>\r\n          <div *ngIf=\"notification.img\" class=\"description title-img\">Фотографії порушення</div>\r\n          <div *ngIf=\"notification.img\" class=\"description img\"><img [src]=\"notification.img\" alt=\"\" /></div>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n      <div class=\"d-flex justify-content-center\">\r\n        <pagination-controls\r\n          autoHide=\"true\"\r\n          id=\"pag\"\r\n          class=\"my-pagination\"\r\n          previousLabel=\"\"\r\n          nextLabel=\"\"\r\n          directionLinks=\"true\"\r\n          maxSize=\"5\"\r\n          (pageChange)=\"onTableDataChange($event)\"\r\n        >\r\n        </pagination-controls>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-order-details',\r\n  templateUrl: './ubs-user-order-details.component.html',\r\n  styleUrls: ['./ubs-user-order-details.component.scss']\r\n})\r\nexport class UbsUserOrderDetailsComponent {\r\n  @Input()\r\n  order: any;\r\n}\r\n","<div class=\"full_card\">\r\n  <div class=\"header_details\">{{ 'user-orders.details.title' | translate }}</div>\r\n  <table class=\"table_of_details\" aria-label=\"orderDetailsTable\">\r\n    <tr class=\"header_table\">\r\n      <th scope=\"row\">{{ 'user-orders.details.services' | translate }}</th>\r\n      <th scope=\"row\">{{ 'user-orders.details.volume' | translate }}</th>\r\n      <th scope=\"row\">{{ 'user-orders.details.cost' | translate }}</th>\r\n      <th scope=\"row\">{{ 'user-orders.details.bags-amount' | translate }}</th>\r\n      <th scope=\"row\">{{ 'user-orders.details.sum' | translate }}</th>\r\n    </tr>\r\n    <tr *ngFor=\"let bag of order.bags\" class=\"data_table\">\r\n      <td>{{ bag.name }}</td>\r\n      <td>{{ bag.capacity }} {{ 'user-orders.details.litr' | translate }}</td>\r\n      <td>{{ bag.price | currency | localizedCurrency }}</td>\r\n      <td>{{ order.amountOfBagsOrdered[bag.id] }} {{ 'user-orders.details.pieces' | translate }}</td>\r\n      <td>{{ order.amountOfBagsOrdered[bag.id] * bag.price | currency | localizedCurrency }}</td>\r\n    </tr>\r\n    <tr>\r\n      <td></td>\r\n    </tr>\r\n    <tr class=\"sum_of_order\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.order-sum' | translate }}</td>\r\n      <td>{{ order.orderFullPrice | currency | localizedCurrency }}</td>\r\n    </tr>\r\n    <tr *ngIf=\"order.orderCertificateTotalDiscount !== 0\" class=\"optional_row\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.certificate' | translate }}</td>\r\n      <td>-{{ order.orderCertificateTotalDiscount }} {{ 'user-orders.details.currency' | translate }}</td>\r\n    </tr>\r\n    <tr *ngIf=\"order.orderBonusDiscount !== 0\" class=\"optional_row\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.bonuses' | translate }}</td>\r\n      <td>-{{ order.orderBonusDiscount | currency | localizedCurrency }}</td>\r\n    </tr>\r\n    <tr *ngIf=\"order.orderStatus === 'DONE_UNPAID'\" class=\"optional_row\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.services-amount' | translate }}</td>\r\n      <td>{{ order.orderExportedPrice | currency | localizedCurrency }}</td>\r\n    </tr>\r\n    <tr class=\"sum_to_pay\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.amount-due' | translate }}</td>\r\n      <td>{{ order.orderDiscountedPrice | currency | localizedCurrency }}</td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n<div class=\"order_details\">\r\n  <ol *ngIf=\"order.numbersFromShop[0] !== ''\">\r\n    <li class=\"bold_text\">{{ 'user-orders.details.delivery' | translate }}</li>\r\n    <li>\r\n      {{ 'user-orders.details.order-number' | translate }}\r\n      <span class=\"bold_text\"> {{ order.numbersFromShop.join(', ') }}</span>\r\n    </li>\r\n  </ol>\r\n  <ol class=\"recipient\">\r\n    <li class=\"bold_text\">{{ 'user-orders.details.recipient' | translate }}</li>\r\n    <li>\r\n      <span>{{ order.userInfoDto.recipientName }} </span><span>{{ order.userInfoDto.recipientSurname }}</span>\r\n    </li>\r\n    <li>{{ order.userInfoDto.recipientPhoneNumber }}</li>\r\n    <li>{{ order.userInfoDto.recipientEmail }}</li>\r\n  </ol>\r\n  <ol>\r\n    <li class=\"bold_text\">{{ 'user-orders.details.export-address' | translate }}</li>\r\n    <li>{{ order.addressExportDetailsDto.addressCity }}</li>\r\n    <li>{{ order.addressExportDetailsDto.addressStreet }}</li>\r\n    <li>{{ order.addressExportDetailsDto.addressDistrict }}</li>\r\n    <li *ngIf=\"order.addressComment === !null\">{{ 'user-orders.details.comment' | translate }} {{ order.addressComment }}</li>\r\n  </ol>\r\n</div>\r\n<div class=\"download\">\r\n  <div class=\"arrow\"><mat-icon [ngStyle]=\"{ fontSize: '16px' }\">arrow_downward</mat-icon></div>\r\n  <div class=\"maximize\"><mat-icon [ngStyle]=\"{ fontSize: '16px' }\">maximize</mat-icon></div>\r\n  <div class=\"text\">{{ 'user-orders.details.receipt' | translate }}</div>\r\n</div>\r\n<ng-template #spinner>\r\n  <app-ubs-spinner class=\"mx-auto\"></app-ubs-spinner>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\nimport { UserOrdersService } from '../services/user-orders.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-orders-list',\r\n  templateUrl: './ubs-user-orders-list.component.html',\r\n  styleUrls: ['./ubs-user-orders-list.component.scss']\r\n})\r\nexport class UbsUserOrdersListComponent {\r\n  @Input() orders: any[];\r\n\r\n  constructor(private userOrdersService: UserOrdersService, public dialog: MatDialog) {}\r\n\r\n  isOrderFormed(order: any) {\r\n    return order.generalOrderInfo.orderStatus === 'FORMED';\r\n  }\r\n\r\n  isOrderUnpaid(order: any) {\r\n    return order.generalOrderInfo.orderStatus === 'DONE_UNPAID' || order.generalOrderInfo.orderStatus === 'FORMED';\r\n  }\r\n\r\n  isOrderDone(order: any) {\r\n    return (\r\n      order.generalOrderInfo.orderStatus === 'ON_THE_ROUTE' ||\r\n      order.generalOrderInfo.orderStatus === 'CONFIRMED' ||\r\n      order.generalOrderInfo.orderStatus === 'DONE'\r\n    );\r\n  }\r\n\r\n  changeCard(id: number) {\r\n    this.orders.forEach((order) => {\r\n      if (order.generalOrderInfo.id === id) {\r\n        order.extend = !order.extend;\r\n      } else {\r\n        order.extend = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteCard(orderId: number) {\r\n    this.userOrdersService.deleteOrder(orderId).subscribe();\r\n    for (let i = 0; i < this.orders.length; i++) {\r\n      if (this.orders[i].generalOrderInfo.id === orderId) {\r\n        this.orders.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"orders.length !== 0\" class=\"header_list\">\r\n  <div class=\"header_list-num\">{{ 'user-orders.order-number' | translate }}</div>\r\n  <div class=\"header_list-date\">{{ 'user-orders.order-date' | translate }}</div>\r\n  <div class=\"header_list-status\">{{ 'user-orders.order-status' | translate }}</div>\r\n  <div class=\"header_list-paymentStatus\">{{ 'user-orders.order-payment-status' | translate }}</div>\r\n  <div class=\"header_list-paymentAmount\">{{ 'user-orders.payment-amount' | translate }}</div>\r\n  <div class=\"empty-div\"></div>\r\n</div>\r\n<mat-accordion multi=\"false\">\r\n  <mat-expansion-panel *ngFor=\"let order of orders\" (click)=\"changeCard(order.generalOrderInfo.id)\">\r\n    <mat-expansion-panel-header>\r\n      <div class=\"mat-content-wrapper\">\r\n        <mat-panel-title class=\"order_list-num\">\r\n          {{ order.generalOrderInfo.id }}\r\n        </mat-panel-title>\r\n        <mat-panel-description class=\"order_list-date\">\r\n          {{ order.generalOrderInfo.dateFormed | date: 'dd.MM.y' }}\r\n        </mat-panel-description>\r\n        <mat-panel-description class=\"order_list-status\">\r\n          {{ order.generalOrderInfo.orderStatusName }}\r\n        </mat-panel-description>\r\n        <mat-panel-description class=\"order_list-paymentStatus\">\r\n          {{ order.generalOrderInfo.orderPaymentStatusName }}\r\n        </mat-panel-description>\r\n        <mat-panel-description class=\"order_list-paymentAmount\">\r\n          {{ order.orderDiscountedPrice | currency | localizedCurrency }}\r\n        </mat-panel-description>\r\n      </div>\r\n      <div class=\"btns_group\">\r\n        <div *ngIf=\"isOrderFormed(order)\" class=\"btn_grid_cancel\">\r\n          <button class=\"btn_cancel\" (click)=\"deleteCard(order.generalOrderInfo.id)\">{{ 'user-orders.btn.cancel' | translate }}</button>\r\n        </div>\r\n        <div *ngIf=\"isOrderUnpaid(order)\" class=\"btn_grid_pay\">\r\n          <button class=\"btn_pay\">{{ 'user-orders.btn.pay' | translate }}</button>\r\n        </div>\r\n        <div *ngIf=\"isOrderDone(order)\" class=\"btn_grid_order\">\r\n          <button class=\"btn_order\">{{ 'user-orders.btn.order-again' | translate }}</button>\r\n        </div>\r\n      </div>\r\n    </mat-expansion-panel-header>\r\n    <div class=\"description\" *ngIf=\"order.extend\">\r\n      <app-ubs-user-order-details [order]=\"order\"></app-ubs-user-order-details>\r\n    </div>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { catchError, takeUntil } from 'rxjs/operators';\r\nimport { Subject, throwError } from 'rxjs';\r\nimport { MatSnackBarComponent } from '@global-errors/mat-snack-bar/mat-snack-bar.component';\r\nimport { UserOrdersService } from '../services/user-orders.service';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-orders',\r\n  templateUrl: './ubs-user-orders.component.html',\r\n  styleUrls: ['./ubs-user-orders.component.scss']\r\n})\r\nexport class UbsUserOrdersComponent implements OnInit, OnDestroy {\r\n  destroy: Subject<boolean> = new Subject<boolean>();\r\n  orders: any[];\r\n  currentOrders: any[];\r\n  orderHistory: any[];\r\n  loading = false;\r\n  constructor(private snackBar: MatSnackBarComponent, private userOrdersService: UserOrdersService) {}\r\n\r\n  ngOnInit() {\r\n    this.userOrdersService\r\n      .getAllUserOrders()\r\n      .pipe(\r\n        takeUntil(this.destroy),\r\n        catchError((err) => {\r\n          this.snackBar.openSnackBar('Oops, something went wrong. Please reload page or try again later.');\r\n          return throwError(err);\r\n        })\r\n      )\r\n      .subscribe((item) => {\r\n        this.orders = item;\r\n        this.loading = true;\r\n        this.currentOrders = this.orders.filter((order) => order.orderStatus !== 'DONE' && order.orderStatus !== 'CANCELLED');\r\n        this.orderHistory = this.orders.filter((order) => order.orderStatus === 'DONE' || order.orderStatus === 'CANCELLED');\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n    this.destroy.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <div class=\"main_header\">{{ 'user-orders.order-title' | translate }}</div>\r\n  <div *ngIf=\"loading; else spinner\">\r\n    <div *ngIf=\"!orders || orders.length === 0\" class=\"if_empty\">\r\n      <span>{{ 'user-orders.no-orders' | translate }}</span\r\n      ><a href=\"#\">{{ 'user-orders.make-order' | translate }}</a>\r\n    </div>\r\n    <div *ngIf=\"orders && orders.length !== 0\" class=\"cards\">\r\n      <mat-tab-group animationDuration=\"0ms\">\r\n        <mat-tab label=\"{{ 'user-orders.current-orders' | translate }}\">\r\n          <app-ubs-user-orders-list [orders]=\"currentOrders\"></app-ubs-user-orders-list>\r\n        </mat-tab>\r\n        <mat-tab label=\"{{ 'user-orders.order-history' | translate }}\">\r\n          <app-ubs-user-orders-list [orders]=\"orderHistory\"></app-ubs-user-orders-list>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n      <div class=\"empty\"></div>\r\n    </div>\r\n  </div>\r\n  <ng-template #spinner>\r\n    <app-ubs-spinner class=\"mx-auto\"></app-ubs-spinner>\r\n  </ng-template>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-ubs-profile-change-password-pop-up',\r\n  templateUrl: './ubs-profile-change-password-pop-up.component.html',\r\n  styleUrls: ['./ubs-profile-change-password-pop-up.component.scss']\r\n})\r\nexport class UbsProfileChangePasswordPopUpComponent implements OnInit {\r\n  public formConfig: FormGroup;\r\n  private readonly passRegexp = /^(?=.*[A-Za-z]+)(?=.*\\d+)(?=.*[~`!@#$%^&*()+=_\\-{}|:;”’?\\/<>,.\\]\\[]+).{8,}$/;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  private initForm(): void {\r\n    this.formConfig = this.fb.group(\r\n      {\r\n        password: ['', [Validators.required, Validators.pattern(this.passRegexp)]],\r\n        currentPassword: ['', [Validators.required]],\r\n        confirmPassword: ['', [Validators.required]]\r\n      },\r\n      { validators: [this.checkConfirmPassword, this.checkNewPassword] }\r\n    );\r\n  }\r\n\r\n  checkConfirmPassword(group: FormGroup) {\r\n    const password = group.get('password').value;\r\n    const confirmPassword = group.get('confirmPassword').value;\r\n    return password === confirmPassword ? null : { notSame: true };\r\n  }\r\n\r\n  checkNewPassword(group: FormGroup) {\r\n    const password = group.get('password').value;\r\n    const currentPassword = group.get('currentPassword').value;\r\n    return password !== currentPassword ? null : { same: true };\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <h2 mat-dialog-title>{{ 'ubs-client-profile.change-password' | translate }}</h2>\r\n  <form [formGroup]=\"formConfig\">\r\n    <div class=\"input\">\r\n      <mat-form-field class=\"forms-inputs\">\r\n        <mat-label>{{ 'ubs-client-profile.old-password' | translate }}</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"currentPassword\" />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"input\">\r\n      <mat-form-field class=\"forms-inputs\">\r\n        <mat-label>{{ 'ubs-client-profile.new-password' | translate }}</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"password\" />\r\n      </mat-form-field>\r\n      <mat-error *ngIf=\"formConfig.errors?.same && formConfig.value.password\">\r\n        {{ 'ubs-client-profile.password-error-new' | translate }}\r\n      </mat-error>\r\n    </div>\r\n\r\n    <div class=\"input\">\r\n      <mat-form-field class=\"forms-inputs\">\r\n        <mat-label>{{ 'ubs-client-profile.repeat-password' | translate }}</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"confirmPassword\" />\r\n      </mat-form-field>\r\n      <mat-error *ngIf=\"formConfig.errors?.notSame\">\r\n        {{ 'ubs-client-profile.password-error-confirm' | translate }}\r\n      </mat-error>\r\n    </div>\r\n  </form>\r\n  <div class=\"action-btns\">\r\n    <mat-dialog-actions align=\"end\">\r\n      <button class=\"btn btn-ubs-outline-success\" mat-dialog-close>\r\n        {{ 'ubs-client-profile.btn.change-password-cancel' | translate }}\r\n      </button>\r\n      <button class=\"btn btn-ubs\" mat-dialog-close [disabled]=\"formConfig.invalid\" cdkFocusInitial>\r\n        {{ 'ubs-client-profile.btn.change-password' | translate }}\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ubs-profile-delete-pop-up',\r\n  templateUrl: './ubs-profile-delete-pop-up.component.html',\r\n  styleUrls: ['./ubs-profile-delete-pop-up.component.scss']\r\n})\r\nexport class UbsProfileDeletePopUpComponent {}\r\n","<div class=\"dialog-container\">\r\n  <h3 mat-dialog-title>{{ 'ubs-client-profile.delete-title' | translate }}</h3>\r\n  <mat-dialog-content>\r\n    <p>{{ 'ubs-client-profile.delete-message' | translate }}</p>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button class=\"btn btn-ubs-outline-success\" mat-dialog-close>{{ 'ubs-client-profile.btn.delete-profile-cancel' | translate }}</button>\r\n    <button class=\"btn btn-success btn-ubs\" [mat-dialog-close]=\"true\" cdkFocusInitial>\r\n      {{ 'ubs-client-profile.btn.delete-profile-save' | translate }}\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SignInIcons } from 'src/app/main/image-pathes/sign-in-icons';\r\nimport { MatSnackBarComponent } from '@global-errors/mat-snack-bar/mat-snack-bar.component';\r\nimport { Address, UserProfile } from 'src/app/ubs-admin/models/ubs-admin.interface';\r\nimport { ClientProfileService } from 'src/app/ubs-user/services/client-profile.service';\r\nimport { UbsProfileDeletePopUpComponent } from './ubs-profile-delete-pop-up/ubs-profile-delete-pop-up.component';\r\nimport { UbsProfileChangePasswordPopUpComponent } from './ubs-profile-change-password-pop-up/ubs-profile-change-password-pop-up.component';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-profile-page',\r\n  templateUrl: './ubs-user-profile-page.component.html',\r\n  styleUrls: ['./ubs-user-profile-page.component.scss']\r\n})\r\nexport class UbsUserProfilePageComponent implements OnInit {\r\n  userForm: FormGroup;\r\n  userProfile: UserProfile;\r\n  defaultAddress: Address = {\r\n    actual: true,\r\n    city: '',\r\n    coordinates: {\r\n      latitude: 1,\r\n      longitude: 1\r\n    },\r\n    district: '',\r\n    entranceNumber: '',\r\n    houseCorpus: '',\r\n    houseNumber: '',\r\n    id: null,\r\n    street: ''\r\n  };\r\n\r\n  googleIcon = SignInIcons.picGoogle;\r\n  isEditing = false;\r\n  isFetching = false;\r\n  phoneMask = '+{38} 000 000 00 00';\r\n  private readonly regexp = /^([a-zа-яїєґ '-])+$/iu;\r\n  private readonly regexpEmail = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n  private readonly regexpWithDigits = /^([a-zа-яїєґ0-9 '-])+$/iu;\r\n\r\n  constructor(public dialog: MatDialog, private clientProfileService: ClientProfileService, private snackBar: MatSnackBarComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.getUserData();\r\n  }\r\n\r\n  composeFormData(data: UserProfile) {\r\n    return {\r\n      ...data,\r\n      recipientPhone: data.recipientPhone?.slice(-9)\r\n    };\r\n  }\r\n\r\n  getUserData() {\r\n    this.isFetching = true;\r\n    this.clientProfileService.getDataClientProfile().subscribe(\r\n      (res: UserProfile) => {\r\n        this.userProfile = this.composeFormData(res);\r\n        this.userProfile.addressDto = this.userProfile.addressDto ?? this.defaultAddress;\r\n        this.userInit();\r\n        this.isFetching = false;\r\n      },\r\n      (err: Error) => {\r\n        this.isFetching = false;\r\n        this.snackBar.openSnackBar('ubs-client-profile.error-message');\r\n      }\r\n    );\r\n  }\r\n\r\n  userInit() {\r\n    this.userForm = new FormGroup({\r\n      address: new FormGroup({\r\n        city: new FormControl(this.userProfile?.addressDto.city, [Validators.pattern(this.regexp), Validators.maxLength(20)]),\r\n        street: new FormControl(this.userProfile?.addressDto.street, [Validators.pattern(this.regexpWithDigits), Validators.maxLength(20)]),\r\n        houseNumber: new FormControl(this.userProfile?.addressDto.houseNumber, [\r\n          Validators.pattern(this.regexpWithDigits),\r\n          Validators.maxLength(4)\r\n        ]),\r\n        houseCorpus: new FormControl(this.userProfile?.addressDto.houseCorpus, [\r\n          Validators.pattern(this.regexpWithDigits),\r\n          Validators.maxLength(4)\r\n        ]),\r\n        entranceNumber: new FormControl(this.userProfile?.addressDto.entranceNumber, [\r\n          Validators.pattern(this.regexpWithDigits),\r\n          Validators.maxLength(4)\r\n        ]),\r\n        district: new FormControl(this.userProfile?.addressDto.district, [\r\n          Validators.pattern(this.regexpWithDigits),\r\n          Validators.maxLength(20)\r\n        ])\r\n      }),\r\n      recipientName: new FormControl(this.userProfile?.recipientName, [Validators.required, Validators.pattern(this.regexp)]),\r\n      recipientSurname: new FormControl(this.userProfile?.recipientSurname, [Validators.required, Validators.pattern(this.regexp)]),\r\n      recipientEmail: new FormControl(this.userProfile?.recipientEmail, [Validators.required, Validators.pattern(this.regexpEmail)]),\r\n      recipientPhone: new FormControl(`+38 0${this.userProfile?.recipientPhone}`, [Validators.required, Validators.minLength(12)])\r\n    });\r\n    this.isFetching = false;\r\n  }\r\n\r\n  onEdit() {\r\n    this.isEditing = true;\r\n    this.isFetching = false;\r\n  }\r\n\r\n  onCancel() {\r\n    this.userInit();\r\n    this.isEditing = false;\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.userForm.valid) {\r\n      this.isFetching = true;\r\n      this.isEditing = false;\r\n      const submitData = {\r\n        addressDto: {\r\n          ...this.userForm.value.address,\r\n          id: this.userProfile.addressDto.id,\r\n          actual: this.userProfile.addressDto.actual,\r\n          coordinates: this.userProfile.addressDto.coordinates\r\n        },\r\n        recipientEmail: this.userForm.value.recipientEmail,\r\n        recipientName: this.userForm.value.recipientName,\r\n        recipientPhone: this.userForm.value.recipientPhone,\r\n        recipientSurname: this.userForm.value.recipientSurname\r\n      };\r\n      this.clientProfileService.postDataClientProfile(submitData).subscribe(\r\n        (res: UserProfile) => {\r\n          this.isFetching = false;\r\n          this.userProfile = this.composeFormData(res);\r\n        },\r\n        (err: Error) => {\r\n          this.isFetching = false;\r\n          this.snackBar.openSnackBar('ubs-client-profile.error-message');\r\n        }\r\n      );\r\n    } else {\r\n      this.isEditing = true;\r\n    }\r\n  }\r\n\r\n  openDeleteProfileDialog() {\r\n    this.dialog.open(UbsProfileDeletePopUpComponent, {\r\n      hasBackdrop: true\r\n    });\r\n  }\r\n\r\n  openChangePasswordDialog() {\r\n    this.dialog.open(UbsProfileChangePasswordPopUpComponent, {\r\n      hasBackdrop: true\r\n    });\r\n  }\r\n}\r\n","<!-- UNCOMMENT code below when back-end with functionality will be ready . -->\r\n<div class=\"ubs_profile-container mx-auto\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"ubs_profile-header\">\r\n        <div class=\"header-text\">\r\n          <h3>{{ 'ubs-client-profile.data' | translate }}</h3>\r\n        </div>\r\n        <!-- <button class=\"btn btn-ubs-outline-success edit\" (click)=\"onEdit()\" [disabled]=\"isEditing || isFetching\">\r\n          {{ 'ubs-client-profile.btn.edit' | translate }}\r\n        </button> -->\r\n      </div>\r\n      <div class=\"container-fluid\">\r\n        <p *ngIf=\"isEditing\" class=\"message-text\">\r\n          {{ 'ubs-client-profile.message-if-edit' | translate }}\r\n        </p>\r\n      </div>\r\n      <div class=\"input-group input-group-sm\">\r\n        <form *ngIf=\"!isFetching; else spinner\" [formGroup]=\"userForm\">\r\n          <h5>{{ 'ubs-client-profile.personal' | translate }}</h5>\r\n          <div class=\"form-group col-sm-5\">\r\n            <label for=\"recipientName\">{{ 'ubs-client-profile.name' | translate }}</label>\r\n            <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"recipientName\" formControlName=\"recipientName\" />\r\n            <p *ngIf=\"!isEditing\">{{ userProfile?.recipientName }}</p>\r\n          </div>\r\n          <div class=\"form-group col-sm-5\">\r\n            <label for=\"recipientSurname\">{{ 'ubs-client-profile.surname' | translate }}</label>\r\n            <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"recipientSurname\" formControlName=\"recipientSurname\" />\r\n            <p *ngIf=\"!isEditing\">{{ userProfile?.recipientSurname }}</p>\r\n          </div>\r\n          <h5>{{ 'ubs-client-profile.contacts' | translate }}</h5>\r\n          <div class=\"form-group col-sm-5\">\r\n            <label for=\"recipientEmail\" class=\"form-label\">{{ 'ubs-client-profile.email' | translate }}</label>\r\n            <input\r\n              *ngIf=\"isEditing\"\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              id=\"recipientEmail\"\r\n              [readonly]=\"true\"\r\n              formControlName=\"recipientEmail\"\r\n              aria-describedby=\"emailHelp\"\r\n            />\r\n            <p *ngIf=\"!isEditing\">{{ userProfile?.recipientEmail }}</p>\r\n          </div>\r\n          <div class=\"form-group col-sm-4\">\r\n            <label for=\"recipientPhone\" class=\"form-label\">{{ 'ubs-client-profile.phone' | translate }}</label>\r\n            <input\r\n              *ngIf=\"isEditing\"\r\n              type=\"tel\"\r\n              class=\"form-control\"\r\n              id=\"recipientPhone\"\r\n              [formControl]=\"userForm.controls['recipientPhone']\"\r\n              placeholder=\"+38___ ___ __ __\"\r\n              [unmask]=\"true\"\r\n              [imask]=\"{ mask: phoneMask }\"\r\n            />\r\n            <p *ngIf=\"!isEditing\">+380{{ userProfile?.recipientPhone }}</p>\r\n          </div>\r\n          <div class=\"address\" formGroupName=\"address\">\r\n            <h5>{{ 'ubs-client-profile.address' | translate }}</h5>\r\n            <div class=\"form-group col-sm-3\">\r\n              <label for=\"city\" class=\"form-label\">{{ 'ubs-client-profile.city' | translate }}</label>\r\n              <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"city\" formControlName=\"city\" />\r\n              <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.city }}</p>\r\n            </div>\r\n            <div class=\"house\">\r\n              <div class=\"form-group col-sm-3\">\r\n                <label for=\"street\" class=\"form-label\">{{ 'ubs-client-profile.street' | translate }}</label>\r\n                <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"street\" formControlName=\"street\" />\r\n                <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.street }}</p>\r\n              </div>\r\n              <div class=\"form-group col-sm-2\">\r\n                <label for=\"houseNumber\" class=\"form-label\">{{ 'ubs-client-profile.house' | translate }}</label>\r\n                <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"houseNumber\" formControlName=\"houseNumber\" />\r\n                <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.houseNumber }}</p>\r\n              </div>\r\n              <div class=\"form-group col-sm-2\">\r\n                <label for=\"houseCorpus\" class=\"form-label\">{{ 'ubs-client-profile.corpus' | translate }}</label>\r\n                <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"houseCorpus\" formControlName=\"houseCorpus\" />\r\n                <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.houseCorpus }}</p>\r\n              </div>\r\n              <div class=\"form-group col-sm-2\">\r\n                <label for=\"entranceNumber\" class=\"form-label\">{{ 'ubs-client-profile.entrance' | translate }}</label>\r\n                <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"entranceNumber\" formControlName=\"entranceNumber\" />\r\n                <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.entranceNumber }}</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group col-sm-3\">\r\n              <label for=\"district\" class=\"form-label\">{{ 'ubs-client-profile.district' | translate }}</label>\r\n              <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"district\" formControlName=\"district\" />\r\n              <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.district }}</p>\r\n            </div>\r\n          </div>\r\n          <!-- <h5>{{ 'ubs-client-profile.account' | translate }}</h5> -->\r\n          <!-- <div class=\"account\">\r\n            <span>\r\n              <img [src]=\"googleIcon\" alt=\"google bind\" />\r\n            </span>\r\n            <p>{{ 'ubs-client-profile.account-message' | translate }}</p>\r\n          </div> -->\r\n        </form>\r\n      </div>\r\n      <div class=\"submit-btns\" *ngIf=\"isEditing\">\r\n        <button class=\"btn btn-ubs-outline-success cancel\" type=\"submit\" (click)=\"onCancel()\">\r\n          {{ 'ubs-client-profile.btn.cancel' | translate }}\r\n        </button>\r\n        <button class=\"btn btn-success\" type=\"submit\" (click)=\"onSubmit()\" [disabled]=\"!userForm.valid\">\r\n          {{ 'ubs-client-profile.btn.save' | translate }}\r\n        </button>\r\n      </div>\r\n      <div class=\"ubs_profile-footer\" *ngIf=\"!isEditing\">\r\n        <div class=\"footer-text\">\r\n          <h3>{{ 'ubs-client-profile.additional' | translate }}</h3>\r\n        </div>\r\n        <div class=\"footer-btns\">\r\n          <button class=\"btn btn-ubs-outline-success open\" (click)=\"openChangePasswordDialog()\">\r\n            {{ 'ubs-client-profile.btn.change-password' | translate }}\r\n          </button>\r\n          <button class=\"btn btn-ubs-outline-success delete\" (click)=\"openDeleteProfileDialog()\">\r\n            {{ 'ubs-client-profile.btn.delete-profile' | translate }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <ng-template #spinner>\r\n      <app-ubs-spinner class=\"mx-auto\"></app-ubs-spinner>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UbsUserGuardGuard } from './ubs-user-guard.guard';\r\nimport { UbsUserComponent } from './ubs-user.component';\r\nimport { UbsUserOrdersComponent } from './ubs-user-orders/ubs-user-orders.component';\r\nimport { UbsUserMessagesComponent } from './ubs-user-messages/ubs-user-messages.component';\r\nimport { UbsUserBonusesComponent } from './ubs-user-bonuses/ubs-user-bonuses.component';\r\nimport { UbsUserProfilePageComponent } from './ubs-user-profile-page/ubs-user-profile-page.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UbsUserComponent,\r\n    canActivate: [UbsUserGuardGuard],\r\n    children: [\r\n      { path: 'profile', component: UbsUserProfilePageComponent },\r\n      { path: 'orders', component: UbsUserOrdersComponent },\r\n      { path: 'bonuses', component: UbsUserBonusesComponent },\r\n      { path: `messages/:pageId`, component: UbsUserMessagesComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UbsUserRoutingModule {}\r\n","import { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { Component } from '@angular/core';\r\nimport { UbsBaseSidebarComponent } from 'src/app/shared/ubs-base-sidebar/ubs-base-sidebar.component';\r\nimport { UserMessagesService } from '../services/user-messages.service';\r\nimport { JwtService } from '@global-service/jwt/jwt.service';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-sidebar',\r\n  templateUrl: './ubs-user-sidebar.component.html'\r\n})\r\nexport class UbsUserSidebarComponent extends UbsBaseSidebarComponent {\r\n  public listElementsUser: any[] = [\r\n    {\r\n      link: 'assets/img/sidebarIcons/workers_icon.svg',\r\n      name: 'ubs-user.user_data',\r\n      routerLink: 'profile'\r\n    },\r\n    {\r\n      link: 'assets/img/sidebarIcons/shopping-cart_icon.svg',\r\n      name: 'ubs-user.orders',\r\n      routerLink: 'orders'\r\n    },\r\n    {\r\n      link: './assets/img/sidebarIcons/achievement_icon.svg',\r\n      name: 'ubs-user.invoice',\r\n      routerLink: 'bonuses'\r\n    },\r\n    {\r\n      link: 'assets/img/sidebarIcons/none_notification_Bell.svg',\r\n      name: 'ubs-user.messages',\r\n      routerLink: 'messages/1'\r\n    }\r\n  ];\r\n\r\n  constructor(public service: UserMessagesService, public breakpointObserver: BreakpointObserver, public jwtService: JwtService) {\r\n    super(service, breakpointObserver, jwtService);\r\n  }\r\n}\r\n","<app-ubs-base-sidebar [listElements]=\"listElementsUser\">\r\n  <router-outlet></router-outlet>\r\n</app-ubs-base-sidebar>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { LocalStorageService } from '@global-service/localstorage/local-storage.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user',\r\n  templateUrl: './ubs-user.component.html',\r\n  styleUrls: ['./ubs-user.component.scss']\r\n})\r\nexport class UbsUserComponent implements OnInit, OnDestroy {\r\n  private destroy: Subject<boolean> = new Subject<boolean>();\r\n  constructor(private translate: TranslateService, private localStorageService: LocalStorageService) {}\r\n\r\n  ngOnInit() {\r\n    this.localStorageService.languageBehaviourSubject.pipe(takeUntil(this.destroy)).subscribe((lang) => {\r\n      this.translate.setDefaultLang(lang !== 'en' && lang !== 'ua' ? 'ua' : lang);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy.next(true);\r\n    this.destroy.complete();\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<app-search-popup></app-search-popup>\r\n<app-ubs-user-sidebar></app-ubs-user-sidebar>\r\n<app-ubs-footer></app-ubs-footer>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { UbsUserOrdersListComponent } from './ubs-user-orders-list/ubs-user-orders-list.component';\r\nimport { UbsUserOrderDetailsComponent } from './ubs-user-order-details/ubs-user-order-details.component';\r\nimport { UbsUserOrdersComponent } from './ubs-user-orders/ubs-user-orders.component';\r\nimport { UbsUserRoutingModule } from './ubs-user-routing.module';\r\nimport { UbsUserComponent } from './ubs-user.component';\r\nimport { UbsUserSidebarComponent } from './ubs-user-sidebar/ubs-user-sidebar.component';\r\nimport { IMaskModule } from 'angular-imask';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { UbsUserMessagesComponent } from './ubs-user-messages/ubs-user-messages.component';\r\nimport { NotificationBodyComponent } from './ubs-user-messages/notification-body/notification-body.component';\r\nimport { UbsUserBonusesComponent } from './ubs-user-bonuses/ubs-user-bonuses.component';\r\nimport { MaterialModule } from '../material.module';\r\nimport { UbsUserProfilePageComponent } from './ubs-user-profile-page/ubs-user-profile-page.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UbsProfileChangePasswordPopUpComponent } from './ubs-user-profile-page/ubs-profile-change-password-pop-up/ubs-profile-change-password-pop-up.component';\r\nimport { UbsProfileDeletePopUpComponent } from './ubs-user-profile-page/ubs-profile-delete-pop-up/ubs-profile-delete-pop-up.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UbsUserSidebarComponent,\r\n    UbsUserBonusesComponent,\r\n    UbsUserComponent,\r\n    UbsUserOrderDetailsComponent,\r\n    UbsUserOrdersComponent,\r\n    UbsUserOrdersListComponent,\r\n    UbsUserMessagesComponent,\r\n    NotificationBodyComponent,\r\n    UbsUserProfilePageComponent,\r\n    UbsProfileChangePasswordPopUpComponent,\r\n    UbsProfileDeletePopUpComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    UbsUserRoutingModule,\r\n    SharedModule,\r\n    IMaskModule,\r\n    MatTabsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule.forChild({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: createTranslateLoaderUbsUser,\r\n        deps: [HttpClient]\r\n      },\r\n      isolate: true\r\n    }),\r\n    MatExpansionModule,\r\n    NgxPaginationModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule\r\n  ],\r\n  entryComponents: [UbsProfileChangePasswordPopUpComponent, UbsProfileDeletePopUpComponent]\r\n})\r\nexport class UbsUserModule {}\r\n\r\nexport function createTranslateLoaderUbsUser(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/ubs-admin/', '.json');\r\n}\r\n"]}