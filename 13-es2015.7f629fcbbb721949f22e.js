(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"1qtv":function(e,t,n){"use strict";n.r(t),t.default='<div class="bonuses-container">\n  <ng-container *ngIf="!isLoading">\n    <div class="no-bonuses-wrapper" *ngIf="!totalBonuses">\n      <span class="no-bonuses-text">{{ \'bonuses.no-bonuses\' | translate }}</span>\n      <a href="#" class="more-about-bonuses-link">{{ \'bonuses.get-bonuses\' | translate }}</a>\n    </div>\n    <div class="bonuses-exist-wrapper" *ngIf="totalBonuses">\n      <div class="total-bonuses-number">\n        <p class="total-bonuses-number__header">{{ \'bonuses.title\' | translate }}</p>\n        <p class="total-bonuses-number__amount">{{ totalBonuses }}</p>\n      </div>\n      <a href="" class="more-about-bonuses-link link-center">{{ \'bonuses.about-bonuses-system\' | translate }}</a>\n      <div class="bonuses-table-wrapper">\n        <table mat-table [dataSource]="dataSource" class="table" matSort aria-label="user\'s bonuses table">\n          <ng-container matColumnDef="dateOfEnrollment">\n            <th mat-header-cell *matHeaderCellDef class="table-header" mat-sort-header scope="col">\n              {{ \'bonuses.enrollment-date\' | translate }}\n            </th>\n            <td mat-cell *matCellDef="let element">{{ element.dateOfEnrollment | date: \'d.MM.yyyy\' }}</td>\n          </ng-container>\n          <ng-container matColumnDef="amount">\n            <th mat-header-cell *matHeaderCellDef scope="col">{{ \'bonuses.amount\' | translate }}</th>\n            <td mat-cell *matCellDef="let element">{{ element.amount }}</td>\n          </ng-container>\n          <ng-container matColumnDef="reason">\n            <th mat-header-cell *matHeaderCellDef scope="col">{{ \'bonuses.reason\' | translate }}</th>\n            <td mat-cell *matCellDef="let element">{{ \'bonuses.order\' | translate }} \u2116{{ element.numberOfOrder }}</td>\n          </ng-container>\n          <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n          <tr mat-row *matRowDef="let row; columns: displayedColumns"></tr>\n        </table>\n      </div>\n    </div>\n  </ng-container>\n  <app-spinner *ngIf="isLoading"></app-spinner>\n</div>\n'},"4Siz":function(e,t,n){"use strict";n.r(t),t.default='<app-ubs-base-sidebar [listElements]="listElementsUser">\n  <router-outlet></router-outlet>\n</app-ubs-base-sidebar>\n'},"5a0O":function(e,t,n){"use strict";n.r(t),n.d(t,"UbsUserModule",(function(){return U})),n.d(t,"createTranslateLoaderUbsUser",(function(){return P}));var r=n("mrSG"),a=n("fXoL"),s=n("ofXK"),o=n("wZkO"),i=n("tk/3"),d=n("mqiu"),l=n("sYmb"),p=n("PCNd");let c=class{isOrderFormed(e){return"FORMED"===e.orderStatus}isOrderUnpaid(e){return"DONE_UNPAID"===e.orderStatus||"FORMED"===e.orderStatus}isOrderDone(e){return"ON_THE_ROUTE"===e.orderStatus||"CONFIRMED"===e.orderStatus||"DONE"===e.orderStatus}changeCard(e){this.orders.map(t=>{t.id===e&&t.extend?t.extend=!1:t.id===e?t.extend=!0:t.extend=t.extend})}};Object(r.__decorate)([Object(a.Input)()],c.prototype,"orders",void 0),c=Object(r.__decorate)([Object(a.Component)({selector:"app-ubs-user-orders-list",template:Object(r.__importDefault)(n("IDgU")).default,styles:[Object(r.__importDefault)(n("CDD5")).default]})],c);let u=class{};Object(r.__decorate)([Object(a.Input)()],u.prototype,"order",void 0),u=Object(r.__decorate)([Object(a.Component)({selector:"app-ubs-user-order-details",template:Object(r.__importDefault)(n("uKtN")).default,styles:[Object(r.__importDefault)(n("r5Pb")).default]})],u);var b=n("82Ky");let m=class{constructor(e,t){this.http=e,this.localStorageService=t,this.url="https://greencity-ubs.azurewebsites.net/ubs/client"}getAllUserOrders(){const e="ua"===localStorage.getItem("language")?1:2;return this.http.get(`${this.url}/get-all-orders-data/${e}`)}};m.ctorParameters=()=>[{type:i.b},{type:b.a}],m=Object(r.__decorate)([Object(a.Injectable)({providedIn:"root"})],m);var g=n("1G5W"),h=n("JIr8"),_=n("XNiG"),f=n("z6cu"),x=n("BhRD");let y=class{constructor(e,t){this.snackBar=e,this.userOrdersService=t,this.destroy=new _.a,this.loading=!1}ngOnInit(){this.userOrdersService.getAllUserOrders().pipe(Object(g.a)(this.destroy),Object(h.a)(e=>(this.snackBar.openSnackBar("Oops, something went wrong. Please reload page or try again later."),Object(f.a)(e)))).subscribe(e=>{this.orders=e,this.loading=!0,this.currentOrders=this.orders.filter(e=>"DONE"!==e.orderStatus&&"CANCELLED"!==e.orderStatus),this.orderHistory=this.orders.filter(e=>"DONE"===e.orderStatus||"CANCELLED"===e.orderStatus)})}ngOnDestroy(){this.destroy.next(),this.destroy.unsubscribe()}};y.ctorParameters=()=>[{type:x.a},{type:m}],y=Object(r.__decorate)([Object(a.Component)({selector:"app-ubs-user-orders",template:Object(r.__importDefault)(n("8uLK")).default,styles:[Object(r.__importDefault)(n("FSe9")).default]})],y);var v=n("tyNb"),O=n("6TV5");let w=class{constructor(e,t){this.translate=e,this.localStorageService=t,this.destroy=new _.a}ngOnInit(){this.localStorageService.languageBehaviourSubject.pipe(Object(g.a)(this.destroy)).subscribe(e=>{this.translate.setDefaultLang("en"!==e&&"ua"!==e?"ua":e)})}ngOnDestroy(){this.destroy.next(!0),this.destroy.complete()}};w.ctorParameters=()=>[{type:l.c},{type:b.a}],w=Object(r.__decorate)([Object(a.Component)({selector:"app-ubs-user",template:Object(r.__importDefault)(n("oLxp")).default,styles:[Object(r.__importDefault)(n("pBca")).default]})],w);var D=n("Dh3D"),j=n("+0xr"),k=n("AytR");let S=class{constructor(e){this.http=e,this.url=k.a.backendUbsLink}getUserBonuses(){return this.http.get(this.url+"/ubs/client/users-pointsToUse")}};S.ctorParameters=()=>[{type:i.b}],S=Object(r.__decorate)([Object(a.Injectable)({providedIn:"root"})],S);let I=class{constructor(e){this.bonusesService=e,this.displayedColumns=["dateOfEnrollment","amount","reason"],this.dataSource=new j.a,this.isLoading=!0}ngOnInit(){this.getBonusesData()}set matSort(e){this.dataSource&&(this.dataSource.sort=e)}ngAfterViewInit(){this.dataSource.sortingDataAccessor=(e,t)=>"dateOfEnrollment"===t?new Date(e.dateOfEnrollment):e[t]}getBonusesData(){this.isLoading=!0,this.subscription=this.bonusesService.getUserBonuses().subscribe(e=>{this.dataSource.data=e.ubsUserBonuses,this.totalBonuses=e.userBonuses,this.isLoading=!1},e=>{this.isLoading=!1,console.log(e)})}ngOnDestroy(){this.subscription.unsubscribe()}};I.ctorParameters=()=>[{type:S}],Object(r.__decorate)([Object(a.ViewChild)(D.a,{static:!1})],I.prototype,"matSort",null),I=Object(r.__decorate)([Object(a.Component)({selector:"app-ubs-user-bonuses",template:Object(r.__importDefault)(n("1qtv")).default,styles:[Object(r.__importDefault)(n("LQ9R")).default]})],I);const C=[{path:"",component:w,canActivate:[O.a],children:[{path:"orders",component:y},{path:"bonuses",component:I}]}];let L=class{};L=Object(r.__decorate)([Object(a.NgModule)({imports:[v.i.forChild(C)],exports:[v.i]})],L);var E=n("0MNC"),z=n("fkLc");let B=class extends z.a{constructor(e){super(e),this.breakpointObserver=e,this.listElementsUser=[{link:"assets/img/sidebarIcons/shopping-cart_icon.svg",name:"ubs-user.orders",routerLink:"orders"},{link:"./assets/img/sidebarIcons/achievement_icon.svg",name:"ubs-user.invoice",routerLink:"bonuses"},{link:"assets/img/sidebarIcons/workers_icon.svg",name:"ubs-user.user_data",routerLink:"#"},{link:"assets/img/sidebarIcons/message-bell_icon.svg",name:"ubs-user.messages",routerLink:"#"}]}ngOnInit(){}};B.ctorParameters=()=>[{type:E.a}],B=Object(r.__decorate)([Object(a.Component)({selector:"app-ubs-user-sidebar",template:Object(r.__importDefault)(n("4Siz")).default})],B);var N=n("vvyD");let U=class{};function P(e){return new d.a(e,"./assets/i18n/ubs-admin/",".json")}U=Object(r.__decorate)([Object(a.NgModule)({declarations:[B,I,w,u,y,c],imports:[s.c,N.a,L,p.a,o.a,l.b.forChild({loader:{provide:l.a,useFactory:P,deps:[i.b]},isolate:!0})]})],U)},"8uLK":function(e,t,n){"use strict";n.r(t),t.default='<div class="wrapper">\n  <div class="main_header">{{ \'user-orders.order-title\' | translate }}</div>\n  <div *ngIf="loading; else spinner">\n    <div *ngIf="!orders || orders.length === 0" class="if_empty">\n      <span>{{ \'user-orders.no-orders\' | translate }}</span\n      ><a href="#">{{ \'user-orders.make-order\' | translate }}</a>\n    </div>\n    <div *ngIf="orders && orders.length !== 0" class="cards">\n      <mat-tab-group animationDuration="0ms">\n        <mat-tab label="{{ \'user-orders.current-orders\' | translate }}">\n          <app-ubs-user-orders-list [orders]="currentOrders"></app-ubs-user-orders-list>\n        </mat-tab>\n        <mat-tab label="{{ \'user-orders.order-history\' | translate }}">\n          <app-ubs-user-orders-list [orders]="orderHistory"></app-ubs-user-orders-list>\n        </mat-tab>\n      </mat-tab-group>\n      <div class="empty"></div>\n    </div>\n  </div>\n  <ng-template #spinner>\n    <app-spinner></app-spinner>\n  </ng-template>\n</div>\n'},CDD5:function(e,t,n){"use strict";n.r(t),t.default="::ng-deep .mat-tab-label-content {\n  font-size: 20px;\n}\n::ng-deep .mat-tab-labels .mat-tab-label-active .mat-tab-label-content {\n  color: var(--primary-green);\n}\n::ng-deep .mat-tab-group.mat-primary .mat-ink-bar,\n::ng-deep .mat-tab-nav-bar.mat-primary .mat-ink-bar {\n  background-color: var(--primary-green);\n}\n.header_list {\n  display: grid;\n  grid-template-columns: 200px 172px 222px auto;\n  grid-template-rows: 30px;\n  max-width: 862px;\n  font-size: 14px;\n  font-weight: 500;\n  padding-top: 40px;\n  line-height: 20px;\n  border: none;\n  text-align: center;\n}\n.card {\n  display: grid;\n  grid-template-rows: 80px auto;\n  background-color: var(--ubs-primary-white);\n  box-shadow: 0 2px 6px rgba(100, 114, 125, 0.15);\n  max-width: 862px;\n  margin-top: 18px;\n}\n.empty_card {\n  display: grid;\n  grid-template-columns: 56px 143px 172px 222px 268px;\n  justify-items: center;\n  align-items: center;\n}\n.empty_card .order_sum {\n  margin-right: 75px;\n  justify-self: end;\n}\n.empty_card .btns_group .btn_grid_cancel,\n.empty_card .btns_group .btn_grid_pay,\n.empty_card .btns_group .btn_grid_fake {\n  display: inline-block;\n  width: 114px;\n  margin: 0 20px 0 0;\n}\n.empty_card .btns_group .btn_grid_cancel .btn_pay,\n.empty_card .btns_group .btn_grid_pay .btn_pay,\n.empty_card .btns_group .btn_grid_fake .btn_pay {\n  height: 36px;\n  width: 114px;\n  border: none;\n  color: var(--ubs-primary-white);\n  padding: 8px 20px 8px 20px;\n  background: var(--ubs-primary-green);\n  border-radius: 4px;\n}\n.empty_card .btns_group .btn_grid_cancel .btn_cancel,\n.empty_card .btns_group .btn_grid_pay .btn_cancel,\n.empty_card .btns_group .btn_grid_fake .btn_cancel {\n  height: 36px;\n  width: 114px;\n  color: var(--ubs-primary-green);\n  background: var(--ubs-primary-white);\n  border: 1px solid var(--ubs-primary-green);\n  border-radius: 4px;\n}\n.empty_card .btns_group .btn_grid_cancel .btn_fake,\n.empty_card .btns_group .btn_grid_pay .btn_fake,\n.empty_card .btns_group .btn_grid_fake .btn_fake {\n  display: none;\n}\n.empty_card .btns_group .btn_grid_order {\n  margin: 0 20px 0 64px;\n}\n.empty_card .btns_group .btn_grid_order .btn_order {\n  height: 36px;\n  color: var(--ubs-primary-green);\n  border: 1px solid var(--ubs-primary-green);\n  padding: 8px 24px 8px 24px;\n  background: var(--ubs-primary-white);\n  border-radius: 4px;\n}"},FSe9:function(e,t,n){"use strict";n.r(t),t.default=".wrapper {\n  height: 100vh;\n  margin-top: 35px;\n  font-size: 16px;\n  line-height: 24px;\n  color: var(--ubs-primary-black);\n  font-family: var(--primary-font);\n  background-color: var(--after-primary-light-grey);\n}\n\n.main_header {\n  margin: 0 0 51px 44px;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 40px;\n}\n\n.if_empty {\n  margin: 16px 0 0 44px;\n}\n\n.if_empty a {\n  margin-left: 13px;\n  color: var(--ubs-primary-green);\n}\n\n.cards {\n  width: 862px;\n}\n\n.cards .empty {\n  height: 80px;\n}"},IDgU:function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="orders.length !== 0" class="header_list">\n  <div>{{ \'user-orders.order-number\' | translate }}</div>\n  <div>{{ \'user-orders.order-status\' | translate }}</div>\n  <div>{{ \'user-orders.payment-amount\' | translate }}</div>\n</div>\n<div *ngFor="let order of orders" class="card">\n  <div class="empty_card">\n    <img *ngIf="order.extend" src="assets/img/ubs-admin-orders/arrow_down.svg" alt="arrow down" (click)="changeCard(order.id)" />\n    <img *ngIf="!order.extend" src="assets/img/ubs-admin-orders/arrow_up.svg" alt="arrow up" (click)="changeCard(order.id)" />\n    <div>{{ order.id }}</div>\n    <div>{{ order.orderStatusName }}</div>\n    <div class="order_sum">{{ order.orderDiscountedPrice }}</div>\n    <div class="btns_group">\n      <div *ngIf="isOrderFormed(order)" class="btn_grid_cancel">\n        <button class="btn_cancel">{{ \'user-orders.btn.cancel\' | translate }}</button>\n      </div>\n      <div *ngIf="isOrderUnpaid(order)" class="btn_grid_pay">\n        <button class="btn_pay">{{ \'user-orders.btn.pay\' | translate }}</button>\n      </div>\n      <div *ngIf="isOrderDone(order)" class="btn_grid_order">\n        <button class="btn_order">{{ \'user-orders.btn.order-again\' | translate }}</button>\n      </div>\n    </div>\n  </div>\n  <div *ngIf="order.extend">\n    <app-ubs-user-order-details [order]="order"></app-ubs-user-order-details>\n  </div>\n</div>\n'},LQ9R:function(e,t,n){"use strict";n.r(t),t.default=".bonuses-container {\n  padding: 40px 32px;\n  font-family: var(--primary-font);\n}\n\n.no-bonuses-wrapper {\n  padding-top: 30px;\n}\n\n.no-bonuses-text {\n  padding-right: 8px;\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n}\n\n.more-about-bonuses-link {\n  color: var(--primary-green);\n}\n\n.link-center {\n  display: inline-block;\n  width: 100%;\n  text-align: center;\n  padding: 24px 0 64px 0;\n}\n\n.bonuses-exist-wrapper {\n  width: 100%;\n}\n\n.total-bonuses-number {\n  width: 228px;\n  height: 140px;\n  background-color: var(--primary-white);\n  box-shadow: 1px 4px 8px rgba(100, 114, 125, 0.18);\n  text-align: center;\n  padding-top: 24px;\n  margin: 0 auto;\n}\n\n.total-bonuses-number__header {\n  font-size: 20px;\n  font-weight: 700;\n  letter-spacing: 0.2px;\n  line-height: 28px;\n}\n\n.total-bonuses-number__amount {\n  font-weight: 700;\n  font-size: 32px;\n  letter-spacing: 0.2px;\n  line-height: 40px;\n}\n\n.bonuses-table-wrapper {\n  max-width: 775px;\n  margin: 0 auto;\n}\n\n.mat-header-cell,\n.mat-cell {\n  color: var(--ubs-primary-grey);\n  padding: 17px 0;\n  font-size: 14px;\n  line-height: 20px;\n}\n\n.date-sort-icon {\n  padding-left: 6.5px;\n  font-size: 12px;\n  font-weight: 400;\n}\n\n.mat-header-cell {\n  font-weight: 700;\n  letter-spacing: 0.1px;\n}"},oLxp:function(e,t,n){"use strict";n.r(t),t.default="<app-ubs-header></app-ubs-header>\n<app-ubs-user-sidebar>\n  <router-outlet></router-outlet>\n</app-ubs-user-sidebar>\n"},pBca:function(e,t,n){"use strict";n.r(t),t.default=":host {\n  font-family: var(--primary-font);\n}"},r5Pb:function(e,t,n){"use strict";n.r(t),t.default='.full_card {\n  display: grid;\n  grid-template-rows: 28px auto;\n  grid-template-columns: 670px;\n  margin-left: 56px;\n  color: var(--ubs-secondary-grey);\n}\n.full_card .header_details {\n  font-size: 20px;\n  line-height: 28px;\n  font-weight: bold;\n  letter-spacing: 0.002em;\n  color: var(--ubs-primary-black);\n  font-family: var(--primary-font);\n}\n.table_of_details {\n  margin-top: 15px;\n  font-family: var(--primary-font);\n}\n.table_of_details .header_table {\n  height: 34px;\n  margin: 5px 0 2px 0;\n  border-bottom: 1px solid var(--ubs-primary-light-grey);\n}\n.table_of_details .header_table th {\n  text-align: left;\n}\n.table_of_details .header_table th:nth-child(4) {\n  text-align: center;\n}\n.table_of_details .header_table th:nth-child(5) {\n  text-align: right;\n}\n.table_of_details td {\n  padding-top: 28px;\n}\n.data_table {\n  color: var(--ubs-quaternary-dark-grey);\n}\n.data_table td {\n  text-align: left;\n}\n.sum_of_order {\n  border-top: 1px solid var(--ubs-primary-light-grey);\n}\n.sum_of_order td {\n  padding-top: 16px;\n  text-align: right;\n}\n.sum_to_pay td {\n  padding-top: 8px;\n  padding-bottom: 16px;\n  text-align: right;\n}\n.optional_row td {\n  padding-top: 8px;\n  text-align: right;\n}\n.data_table td:nth-child(4) {\n  padding-left: 40px;\n}\n.data_table td:nth-child(5) {\n  text-align: right;\n  color: var(--ubs-primary-grey);\n  font-weight: bold;\n}\n.sum_of_order td:nth-child(2) {\n  color: var(--ubs-primary-grey);\n  font-weight: bold;\n}\n.sum_to_pay td:nth-child(2) {\n  color: var(--ubs-primary-grey);\n  font-weight: bold;\n}\n.optional_row td:nth-child(2) {\n  color: var(--primary-green);\n  font-size: 10px;\n  line-height: 12px;\n}\n.order_details {\n  width: 450px;\n  margin-left: 16px;\n  color: var(--ubs-primary-grey);\n  font-family: var(--primary-font);\n}\n.order_details .recipient {\n  margin: 32px 0;\n}\n.order_details .bold_text {\n  font-weight: bold;\n}\n.order_details ol {\n  margin-bottom: 0;\n  list-style-type: none;\n}\n.download {\n  display: grid;\n  grid-template-areas: "arrow text" "maximize text";\n  grid-template-columns: 16px auto;\n  grid-template-rows: 17px auto;\n  justify-content: end;\n  margin: 0 18px 33px 0;\n  color: var(--primary-green);\n}\n.arrow {\n  grid-area: arrow;\n}\n.maximize {\n  grid-area: maximize;\n  width: 16px;\n  height: 1px;\n  transform: rotate(-180deg);\n}\n.text {\n  grid-area: text;\n  margin: 0 22px;\n}'},uKtN:function(e,t,n){"use strict";n.r(t),t.default='<div class="full_card">\n  <div class="header_details">{{ \'user-orders.details.title\' | translate }}</div>\n  <table class="table_of_details">\n    <tr class="header_table">\n      <th>{{ \'user-orders.details.services\' | translate }}</th>\n      <th>{{ \'user-orders.details.volume\' | translate }}</th>\n      <th>{{ \'user-orders.details.cost\' | translate }}</th>\n      <th>{{ \'user-orders.details.bags-amount\' | translate }}</th>\n      <th>{{ \'user-orders.details.sum\' | translate }}</th>\n    </tr>\n    <tr *ngFor="let bag of order.bags" class="data_table">\n      <td>{{ bag.name }}\u0412\u0442\u043e\u0440\u0441\u0438\u0440\u043e\u0432\u0438\u043d\u0430</td>\n      <td>{{ bag.capacity }} {{ \'user-orders.details.litr\' | translate }}</td>\n      <td>{{ bag.price }} {{ \'user-orders.details.currency\' | translate }}</td>\n      <td>{{ order.amountOfBagsOrdered[bag.id] }} {{ \'user-orders.details.pieces\' | translate }}</td>\n      <td>{{ order.amountOfBagsOrdered[bag.id] * bag.price }} {{ \'user-orders.details.currency\' | translate }}</td>\n    </tr>\n    <tr>\n      <td></td>\n    </tr>\n    <tr class="sum_of_order">\n      <td colspan="4">{{ \'user-orders.details.order-sum\' | translate }}</td>\n      <td>{{ order.orderFullPrice }} {{ \'user-orders.details.currency\' | translate }}</td>\n    </tr>\n    <tr *ngIf="order.orderCertificateTotalDiscount !== 0" class="optional_row">\n      <td colspan="4">{{ \'user-orders.details.certificate\' | translate }}</td>\n      <td>-{{ order.orderCertificateTotalDiscount }} {{ \'user-orders.details.currency\' | translate }}</td>\n    </tr>\n    <tr *ngIf="order.orderBonusDiscount !== 0" class="optional_row">\n      <td colspan="4">{{ \'user-orders.details.bonuses\' | translate }}</td>\n      <td>-{{ order.orderBonusDiscount }} {{ \'user-orders.details.currency\' | translate }}</td>\n    </tr>\n    <tr *ngIf="order.orderStatus === \'DONE_UNPAID\'" class="optional_row">\n      <td colspan="4">{{ \'user-orders.details.services-amount\' | translate }}</td>\n      <td>{{ order.orderExportedPrice }} {{ \'user-orders.details.currency\' | translate }}</td>\n    </tr>\n    <tr class="sum_to_pay">\n      <td colspan="4">{{ \'user-orders.details.amount-due\' | translate }}</td>\n      <td>{{ order.orderDiscountedPrice }} {{ \'user-orders.details.currency\' | translate }}</td>\n    </tr>\n  </table>\n</div>\n<div class="order_details">\n  <ol *ngIf="order.additionalOrders[0] !== \'\'">\n    <li class="bold_text">{{ \'user-orders.details.delivery\' | translate }}</li>\n    <li>\n      {{ \'user-orders.details.order-number\' | translate }}\n      <span class="bold_text"> {{ order.additionalOrders.join(\', \') }}</span>\n    </li>\n  </ol>\n  <ol class="recipient">\n    <li class="bold_text">{{ \'user-orders.details.recipient\' | translate }}</li>\n    <li>\n      <span>{{ order.recipientName }} </span><span>{{ order.recipientSurname }}</span>\n    </li>\n    <li>{{ order.recipientPhone }}</li>\n    <li>{{ order.recipientEmail }}</li>\n  </ol>\n  <ol>\n    <li class="bold_text">{{ \'user-orders.details.export-address\' | translate }}</li>\n    <li>{{ order.addressCity }}</li>\n    <li>{{ order.addressStreet }}</li>\n    <li>{{ order.addressDistrict }}</li>\n    <li *ngIf="order.addressComment !== null">{{ \'user-orders.details.comment\' | translate }} {{ order.addressComment }}</li>\n  </ol>\n</div>\n<div class="download">\n  <div class="arrow"><mat-icon [ngStyle]="{ fontSize: \'16px\' }">arrow_downward</mat-icon></div>\n  <div class="maximize"><mat-icon [ngStyle]="{ fontSize: \'16px\' }">maximize</mat-icon></div>\n  <div class="text">{{ \'user-orders.details.receipt\' | translate }}</div>\n</div>\n<ng-template #spinner>\n  <app-spinner></app-spinner>\n</ng-template>\n'}}]);