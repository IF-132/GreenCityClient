{"version":3,"sources":["./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js","./src/app/ubs-user/services/client-profile.service.ts","./src/app/ubs-user/services/user-orders.service.ts","./src/app/ubs-user/ubs-user-bonuses/services/bonuses.service.ts","./src/app/ubs-user/ubs-user-bonuses/ubs-user-bonuses.component.ts","./src/app/ubs-user/ubs-user-bonuses/ubs-user-bonuses.component.html","./src/app/ubs-user/ubs-user-messages/notification-body/notification-body.component.ts","./src/app/ubs-user/ubs-user-messages/notification-body/notification-body.component.html","./src/app/ubs-user/ubs-user-messages/ubs-user-messages.component.ts","./src/app/ubs-user/ubs-user-messages/ubs-user-messages.component.html","./src/app/ubs-user/ubs-user-order-details/ubs-user-order-details.component.ts","./src/app/ubs-user/ubs-user-order-details/ubs-user-order-details.component.html","./src/app/ubs-user/ubs-user-orders-list/ubs-user-orders-list.component.ts","./src/app/ubs-user/ubs-user-orders-list/ubs-user-orders-list.component.html","./src/app/ubs-user/ubs-user-orders/ubs-user-orders.component.ts","./src/app/ubs-user/ubs-user-orders/ubs-user-orders.component.html","./src/app/ubs-user/ubs-user-profile-page/ubs-profile-change-password-pop-up/ubs-profile-change-password-pop-up.component.ts","./src/app/ubs-user/ubs-user-profile-page/ubs-profile-change-password-pop-up/ubs-profile-change-password-pop-up.component.html","./src/app/ubs-user/ubs-user-profile-page/ubs-profile-delete-pop-up/ubs-profile-delete-pop-up.component.ts","./src/app/ubs-user/ubs-user-profile-page/ubs-profile-delete-pop-up/ubs-profile-delete-pop-up.component.html","./src/app/ubs-user/ubs-user-profile-page/ubs-user-profile-page.component.ts","./src/app/ubs-user/ubs-user-profile-page/ubs-user-profile-page.component.html","./src/app/ubs-user/ubs-user-routing.module.ts","./src/app/ubs-user/ubs-user-sidebar/ubs-user-sidebar.component.ts","./src/app/ubs-user/ubs-user-sidebar/ubs-user-sidebar.component.html","./src/app/ubs-user/ubs-user.component.ts","./src/app/ubs-user/ubs-user.component.html","./src/app/ubs-user/ubs-user.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwH;AACnD;AACP;AACjB;;AAE7C;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACwC;AACW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA,wCAAwC,4CAAO;AAC/C;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,sBAAsB,eAAe,mFAAqB,QAAQ;AAClE;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF,oBAAoB,+DAAwB,EAAE,wFAAwF,iBAAiB,yCAAyC,kEAA2B,GAAG;AAC9N;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAuBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iDAAY;AACrD;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,yCAAyC,WAAW;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,mFAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,4BAA4B,kBAAkB,mFAAqB,WAAW;AAC9E;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8DAA8D,oCAAoC,+DAAwB,oBAAoB,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,kFAAgC,GAAG;AAC9P,wBAAwB,+DAAwB,EAAE,qGAAqG,6CAA6C,YAAY,+FAA+F,6CAA6C,gEAAyB;AACrX;AACA;AACA,aAAa,sCAAsC;AACnD,aAAa;AACb;A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K,aAAa,iEAAK,EAAE,qCAAqC;AACtE,QAAQ,sEAAU,8CAA8C,mEAAO;AACvE;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,8EAA8E,4CAA4C,+DAAwB,CAAC,yDAAkB,GAAG;AACxK,gCAAgC,+DAAwB,EAAE,+FAA+F;AACzJ;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,yDAAkB,EAAE,EAAE,EAAE,QAAQ,EAAE;AACxE,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,WAAW,EAgBV;AACD;AACA;AACA;AACA,UAAU;AACV;AACA,gDAAgD,4DAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uEAAgB;AAChD;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA,uDAAuD,WAAW;AAClE;AACA;AACA;AACA,sCAAsC,4CAAO;AAC7C;AACA;AACA;AACA;AACA,qCAAqC,2EAAoB;AACzD,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,mFAAqB;AAChD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,6BAA6B,gEAAS,aAAa,EAAE,cAAc,6DAAM;AACzE,wBAAwB;AACxB;AACA,oDAAoD,2DAAI;AACxD,wBAAwB;AACxB;AACA;AACA,mCAAmC,kEAAc;AACjD,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,qCAAqC,+DAAwB,qBAAqB,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,mFAAgC,GAAG,+DAAwB,CAAC,8DAAuB,GAAG,+DAAwB,CAAC,wDAAQ,GAAG,+DAAwB,CAAC,2FAAqB,MAAM,+DAAwB,0CAA0C;AAC/c,yBAAyB,+DAAwB,EAAE,8IAA8I;AACjM,QAAQ,4DAAqB;AAC7B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,wDAAwD;AAC/D,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,sHAAsH;AAC7H,QAA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ACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EA0EV;AACD;AACA;AACA,kFAAkF,gDAAgD;AAClI,kCAAkC,+DAAwB,EAAE,sGAAsG;AAClK,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iDAAY;AACrD;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,+CAA+C,6DAAM;AACrD,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,YAAY,0CAAK;AACjB;AACA;AACA;AACA,YAAY,kDAAK,iFAAiF,6DAAM;AACxG,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,kBAAkB,6DAAM;AACxB,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;A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rM,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,4CAA4C;AACtH,8BAA8B,+DAAwB,EAAE,qHAAqH;AAC7K,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,2BAA2B,mEAAY;AACvC;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,oBAAoB,mFAAqB,OAAO;AAC1E;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,SAAS;AACT,+BAA+B,iEAAe;AAC9C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,UAAU;AACzB,mBAAmB,EAAE;AACrB;AACA,wBAAwB,0DAAI;AAC5B,iBAAiB,4EAAc;AAC/B;AACA;AACA;AACA;AACA,6BAA6B,yDAAG;AAChC,iBAAiB,4EAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sDAAsD,qDAAqD;AAC3G,oBAAoB,+DAAwB,EAAE,8HAA8H;AAC5K,QAAQ,4DAAqB;AAC7B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,2GAA2G;AAClH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","file":"ubs-user-ubs-user-module-es2015.js","sourcesContent":["import { Directive, Input, EventEmitter, Optional, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /**\n         * Emits when the state of the accordion changes\n         */\n        this._stateChanges = new Subject();\n        /**\n         * Stream that emits true/false when openAll/closeAll is triggered.\n         */\n        this._openCloseAllActions = new Subject();\n        /**\n         * A readonly id value to use for unique selection coordination.\n         */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /**\n     * Whether the accordion should allow multiple expanded accordion items simultaneously.\n     * @return {?}\n     */\n    get multi() { return this._multi; }\n    /**\n     * @param {?} multi\n     * @return {?}\n     */\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /**\n     * Opens all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /**\n     * Closes all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @private\n     * @param {?} expanded\n     * @return {?}\n     */\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion'\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordion.ngAcceptInputType_multi;\n    /**\n     * Emits when the state of the accordion changes\n     * @type {?}\n     */\n    CdkAccordion.prototype._stateChanges;\n    /**\n     * Stream that emits true/false when openAll/closeAll is triggered.\n     * @type {?}\n     */\n    CdkAccordion.prototype._openCloseAllActions;\n    /**\n     * A readonly id value to use for unique selection coordination.\n     * @type {?}\n     */\n    CdkAccordion.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordion.prototype._multi;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-item.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion item.\n * @type {?}\n */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _expansionDispatcher\n     */\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /**\n         * Subscription to openAll/closeAll events.\n         */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /**\n         * Event emitted every time the AccordionItem is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted every time the AccordionItem is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event emitted when the AccordionItem is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * \\@docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /**\n         * The unique AccordionItem id.\n         */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /**\n         * Unregister function for _expansionDispatcher.\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} accordionId\n             * @return {?}\n             */\n            (id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            }));\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /**\n     * Whether the AccordionItem is expanded.\n     * @return {?}\n     */\n    get expanded() { return this._expanded; }\n    /**\n     * @param {?} expanded\n     * @return {?}\n     */\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 * @type {?}\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the AccordionItem is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /**\n     * Emits an event for the accordion item being destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /**\n     * Toggles the expanded state of the accordion item.\n     * @return {?}\n     */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to false.\n     * @return {?}\n     */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to true.\n     * @return {?}\n     */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe((/**\n         * @param {?} expanded\n         * @return {?}\n         */\n        expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        }));\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CdkAccordion, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n            // to the same accordion.\n            { provide: CdkAccordion, useValue: ɵ0 },\n        ])] });\n/** @nocollapse */\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n                    // to the same accordion.\n                    { provide: CdkAccordion, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_expanded;\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_disabled;\n    /**\n     * Subscription to openAll/closeAll events.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._openCloseAllSubscription;\n    /**\n     * Event emitted every time the AccordionItem is closed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.closed;\n    /**\n     * Event emitted every time the AccordionItem is opened.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.opened;\n    /**\n     * Event emitted when the AccordionItem is destroyed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.destroyed;\n    /**\n     * Emits whenever the expanded state of the accordion changes.\n     * Primarily used to facilitate two-way binding.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.expandedChange;\n    /**\n     * The unique AccordionItem id.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._disabled;\n    /**\n     * Unregister function for _expansionDispatcher.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._removeUniqueSelectionListener;\n    /** @type {?} */\n    CdkAccordionItem.prototype.accordion;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkAccordionItem.prototype._expansionDispatcher;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion,\n        CdkAccordionItem], exports: [CdkAccordion,\n        CdkAccordionItem] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n\n//# sourceMappingURL=accordion.js.map","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, hasModifierKey, SPACE, HOME, END } from '@angular/cdk/keycodes';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, group, query, animateChild } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a `MatAccordion`.\n * \\@docs-private\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nconst _c3 = function (a0, a1) { return { collapsedHeight: a0, expandedHeight: a1 }; };\nconst _c4 = function (a0, a1) { return { value: a0, params: a1 }; };\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nfunction MatAccordionBase() { }\nif (false) {\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.togglePosition;\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderKeydown;\n    /**\n     * Handles focus events on the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderFocus;\n}\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n * @type {?}\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time and timing curve for expansion panel animations.\n * @type {?}\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n * @type {?}\n */\nconst matExpansionAnimations = {\n    /**\n     * Animation that rotates the indicator arrow.\n     */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /**\n     * Animation that expands and collapses the panel header height.\n     */\n    expansionHeaderHeight: trigger('expansionHeight', [\n        state('collapsed, void', style({\n            height: '{{collapsedHeight}}',\n        }), {\n            params: { collapsedHeight: '48px' },\n        }),\n        state('expanded', style({\n            height: '{{expandedHeight}}'\n        }), {\n            params: { expandedHeight: '64px' }\n        }),\n        transition('expanded <=> collapsed, void => collapsed', group([\n            query('@indicatorRotate', animateChild(), { optional: true }),\n            animate(EXPANSION_PANEL_ANIMATION_TIMING),\n        ])),\n    ]),\n    /**\n     * Animation that expands and collapses the panel content.\n     */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\n/** @nocollapse */\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanelContent.prototype._template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter for generating unique element ids.\n * @type {?}\n */\nlet uniqueId = 0;\n/**\n * Object that can be used to override the default options\n * for all of the expansion panels in a module.\n * @record\n */\nfunction MatExpansionPanelDefaultOptions() { }\nif (false) {\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.collapsedHeight;\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.hideToggle;\n}\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n * @type {?}\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?} _animationMode\n     * @param {?=} defaultOptions\n     */\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /**\n         * An event emitted after the body's expansion animation happens.\n         */\n        this.afterExpand = new EventEmitter();\n        /**\n         * An event emitted after the body's collapse animation happens.\n         */\n        this.afterCollapse = new EventEmitter();\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        /**\n         * ID for the associated header element. Used for a11y labelling.\n         */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /**\n         * Stream of body animation done events.\n         */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        }));\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * The position of the expansion indicator.\n     * @return {?}\n     */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * Toggles the expanded state of the expansion panel.\n     * @return {?}\n     */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to false.\n     * @return {?}\n     */\n    close() {\n        this.expanded = false;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to true.\n     * @return {?}\n     */\n    open() {\n        this.expanded = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith((/** @type {?} */ (null))), filter((/**\n             * @return {?}\n             */\n            () => this.expanded && !this._portal)), take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /**\n     * Checks whether the expansion panel's content contains the currently-focused element.\n     * @return {?}\n     */\n    _containsFocus() {\n        if (this._body) {\n            /** @type {?} */\n            const focusedElement = this._document.activeElement;\n            /** @type {?} */\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_hideToggle;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_expanded;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._togglePosition;\n    /**\n     * An event emitted after the body's expansion animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterExpand;\n    /**\n     * An event emitted after the body's collapse animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterCollapse;\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._inputChanges;\n    /**\n     * Optionally defined accordion the expansion panel belongs to.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.accordion;\n    /**\n     * Content that will be rendered lazily.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._lazyContent;\n    /**\n     * Element containing the panel's user-provided content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._body;\n    /**\n     * Portal holding the user's content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._portal;\n    /**\n     * ID for the associated header element. Used for a11y labelling.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._headerId;\n    /**\n     * Stream of body animation done events.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._bodyAnimationDone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._viewContainerRef;\n    /** @type {?} */\n    MatExpansionPanel.prototype._animationMode;\n}\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    /**\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultOptions\n     */\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /**\n         * Whether Angular animations in the panel header should be disabled.\n         */\n        this._animationsDisabled = true;\n        /** @type {?} */\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => !!(changes['hideToggle'] || changes['togglePosition'])))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            }))))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter((/**\n         * @return {?}\n         */\n        () => panel._containsFocus())))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => _focusMonitor.focusVia(_element, 'program')));\n        _focusMonitor.monitor(_element).subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            if (origin && panel.accordion) {\n                panel.accordion._handleHeaderFocus(this);\n            }\n        }));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _animationStarted() {\n        // Currently the `expansionHeight` animation has a `void => collapsed` transition which is\n        // there to work around a bug in Angular (see #13088), however this introduces a different\n        // issue. The new transition will cause the header to animate in on init (see #16067), if the\n        // consumer has set a header height that is different from the default one. We work around it\n        // by disabling animations on the header and re-enabling them after the first animation has run.\n        // Note that Angular dispatches animation events even if animations are disabled. Ideally this\n        // wouldn't be necessary if we remove the `void => collapsed` transition, but we have to wait\n        // for https://github.com/angular/angular/issues/18847 to be resolved.\n        this._animationsDisabled = false;\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Gets the toggle position for the header.\n     * @return {?}\n     */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @param {?=} origin Origin of the action that triggered the focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 19, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@expansionHeight.start\", function MatExpansionPanelHeader_animation_expansionHeight_start_HostBindingHandler() { return ctx._animationStarted(); });\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? 0 - 1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@.disabled\", ctx._animationsDisabled)(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(16, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(13, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c6, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;position:relative}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n            matExpansionAnimations.expansionHeaderHeight\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                    matExpansionAnimations.expansionHeaderHeight\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                    '[@.disabled]': '_animationsDisabled',\n                    '(@expansionHeight.start)': '_animationStarted()',\n                    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;position:relative}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._parentChangeSubscription;\n    /**\n     * Whether Angular animations in the panel header should be disabled.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype._animationsDisabled;\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.collapsedHeight;\n    /** @type {?} */\n    MatExpansionPanelHeader.prototype.panel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._changeDetectorRef;\n}\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /**\n         * Headers belonging to this accordion.\n         */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /**\n         * The position of the expansion indicator.\n         */\n        this.togglePosition = 'after';\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() { return this._hideToggle; }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((/**\n         * @param {?} headers\n         * @return {?}\n         */\n        (headers) => {\n            this._ownHeaders.reset(headers.filter((/**\n             * @param {?} header\n             * @return {?}\n             */\n            header => header.panel.accordion === this)));\n            this._ownHeaders.notifyOnChanges();\n        }));\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap();\n    }\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleHeaderKeydown(event) {\n        const { keyCode } = event;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME) {\n            if (!hasModifierKey(event)) {\n                manager.setFirstItemActive();\n                event.preventDefault();\n            }\n        }\n        else if (keyCode === END) {\n            if (!hasModifierKey(event)) {\n                manager.setLastItemActive();\n                event.preventDefault();\n            }\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = function MatAccordion_Factory(t) { return ɵMatAccordion_BaseFactory(t || MatAccordion); };\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\nconst ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAccordion.ngAcceptInputType_hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._keyManager;\n    /**\n     * Headers belonging to this accordion.\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._ownHeaders;\n    /**\n     * All headers inside the accordion. Includes headers inside nested accordions.\n     * @type {?}\n     */\n    MatAccordion.prototype._headers;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     * @type {?}\n     */\n    MatAccordion.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordion.prototype.togglePosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); }, imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n\n//# sourceMappingURL=expansion.js.map","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { mainUbsLink } from 'src/app/main/links';\r\nimport { UserProfile } from '../../ubs-admin/models/ubs-admin.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientProfileService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getDataClientProfile() {\r\n    return this.http.get(`${mainUbsLink}/ubs/userProfile/user/getUserProfile`);\r\n  }\r\n\r\n  postDataClientProfile(user: UserProfile) {\r\n    return this.http.post(`${mainUbsLink}/ubs/userProfile/user/update`, user);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserOrdersService {\r\n  private url = 'https://greencity-ubs.azurewebsites.net/ubs/client';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllUserOrders(): Observable<any> {\r\n    const lang = localStorage.getItem('language') === 'ua' ? 1 : 2;\r\n    return this.http.get<any[]>(`${this.url}/get-all-orders-data/${lang}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '@environment/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BonusesModel } from '../models/BonusesModel';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BonusesService {\r\n  private url: string = environment.backendUbsLink;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUserBonuses(): Observable<BonusesModel> {\r\n    return this.http.get<BonusesModel>(`${this.url}/ubs/client/users-pointsToUse`);\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BonusesModel } from './models/BonusesModel';\r\nimport { BonuseModel } from './models/BonuseModel';\r\nimport { BonusesService } from './services/bonuses.service';\r\nimport { Subject, throwError } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { MatSnackBarComponent } from '@global-errors/mat-snack-bar/mat-snack-bar.component';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-bonuses',\r\n  templateUrl: './ubs-user-bonuses.component.html',\r\n  styleUrls: ['./ubs-user-bonuses.component.scss']\r\n})\r\nexport class UbsUserBonusesComponent implements OnInit, OnDestroy {\r\n  displayedColumns: string[] = ['dateOfEnrollment', 'amount', 'reason'];\r\n  dataSource = new MatTableDataSource<BonuseModel>();\r\n  totalBonuses: number;\r\n  isLoading = true;\r\n  bonusesList: BonuseModel[];\r\n  destroy: Subject<boolean> = new Subject<boolean>();\r\n\r\n  constructor(private snackBar: MatSnackBarComponent, private bonusesService: BonusesService) {}\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngOnInit() {\r\n    this.getBonusesData();\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getBonusesData() {\r\n    this.isLoading = true;\r\n    this.bonusesService\r\n      .getUserBonuses()\r\n      .pipe(takeUntil(this.destroy))\r\n      .subscribe(\r\n        (res: BonusesModel) => {\r\n          this.bonusesList = res.ubsUserBonuses;\r\n          this.dataSource.data = res.ubsUserBonuses;\r\n          this.totalBonuses = res.userBonuses;\r\n          this.isLoading = false;\r\n        },\r\n        (error) => {\r\n          this.isLoading = false;\r\n          this.snackBar.openSnackBar('Oops, something went wrong. Please reload page or try again later.');\r\n          return throwError(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.bonusesList.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      return;\r\n    }\r\n\r\n    this.dataSource.data = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      return this.compare(new Date(a.dateOfEnrollment).getDate(), new Date(b.dateOfEnrollment).getDate(), isAsc);\r\n    });\r\n  }\r\n\r\n  compare(a: number | string, b: number | string, isAsc: boolean) {\r\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n    this.destroy.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"bonuses-container\">\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <div class=\"no-bonuses-wrapper\" *ngIf=\"!totalBonuses\">\r\n      <span class=\"no-bonuses-text\">{{ 'bonuses.no-bonuses' | translate }}</span>\r\n      <a href=\"#\" class=\"more-about-bonuses-link\">{{ 'bonuses.get-bonuses' | translate }}</a>\r\n    </div>\r\n    <div class=\"bonuses-exist-wrapper\" *ngIf=\"totalBonuses\">\r\n      <div class=\"total-bonuses-number\">\r\n        <p class=\"total-bonuses-number__header\">{{ 'bonuses.title' | translate }}</p>\r\n        <p class=\"total-bonuses-number__amount\">{{ totalBonuses }}</p>\r\n      </div>\r\n      <a href=\"\" class=\"more-about-bonuses-link link-center\">{{ 'bonuses.about-bonuses-system' | translate }}</a>\r\n      <div class=\"bonuses-table-wrapper\">\r\n        <table\r\n          mat-table\r\n          [dataSource]=\"dataSource\"\r\n          class=\"table\"\r\n          matSort\r\n          (matSortChange)=\"sortData($event)\"\r\n          aria-label=\"user's bonuses table\"\r\n        >\r\n          <ng-container matColumnDef=\"dateOfEnrollment\">\r\n            <th mat-header-cell *matHeaderCellDef class=\"table-header\" mat-sort-header scope=\"col\">\r\n              {{ 'bonuses.enrollment-date' | translate }}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">{{ element.dateOfEnrollment | date: 'd.MM.yyyy' }}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"amount\">\r\n            <th mat-header-cell *matHeaderCellDef scope=\"col\">{{ 'bonuses.amount' | translate }}</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{ element.amount }}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"reason\">\r\n            <th mat-header-cell *matHeaderCellDef scope=\"col\">{{ 'bonuses.reason' | translate }}</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{ 'bonuses.order' | translate }} №{{ element.numberOfOrder }}</td>\r\n          </ng-container>\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <app-ubs-spinner *ngIf=\"isLoading\"></app-ubs-spinner>\r\n</div>\r\n","import { AfterViewInit, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\r\nimport { UserMessagesService } from '../../services/user-messages.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-notification-body',\r\n  templateUrl: './notification-body.component.html',\r\n  styleUrls: ['./notification-body.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NotificationBodyComponent implements AfterViewInit {\r\n  @Input() body: string;\r\n  @Input() orderId: number;\r\n  buttonRedirect: any;\r\n\r\n  constructor(public userMessagesService: UserMessagesService, public router: Router, private elementRef: ElementRef) {}\r\n\r\n  redirectToPayment() {\r\n    this.router.navigate(['ubs/notification/confirm/' + this.orderId]);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.elementRef.nativeElement.querySelector('.button-pay')) {\r\n      this.elementRef.nativeElement.querySelector('.button-pay').addEventListener('click', this.redirectToPayment.bind(this));\r\n    }\r\n  }\r\n}\r\n","<div [innerHTML]=\"this.body | translate\"></div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { UserMessagesService } from '../services/user-messages.service';\r\nimport { LocalStorageService } from '@global-service/localstorage/local-storage.service';\r\nimport { NotificationBody } from '../../ubs-admin/models/ubs-user.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ReplaySubject, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-messages',\r\n  templateUrl: './ubs-user-messages.component.html',\r\n  styleUrls: ['./ubs-user-messages.component.scss']\r\n})\r\nexport class UbsUserMessagesComponent implements OnInit, OnDestroy {\r\n  isAnyMessages = true;\r\n  notifications: NotificationBody[];\r\n  panelOpenState = false;\r\n  page = 1;\r\n  count = 0;\r\n  pageSize = 10;\r\n  isLoadSpinner: boolean;\r\n  isLoadSmallSpinner: boolean;\r\n  isLoadBar: boolean;\r\n  public countOfMessages: number;\r\n  private destroyed$: ReplaySubject<any> = new ReplaySubject<any>(1);\r\n  destroy: Subject<boolean> = new Subject<boolean>();\r\n  localization = {\r\n    title: 'ubs-user-notification.title',\r\n    id: 'ubs-user-notification.title-table.number',\r\n    themeMessages: 'ubs-user-notification.title-table.theme-messages',\r\n    time: 'ubs-user-notification.title-table.time'\r\n  };\r\n\r\n  constructor(\r\n    private userMessagesService: UserMessagesService,\r\n    private localStorageService: LocalStorageService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe((val) => {\r\n      this.page = +this.route.snapshot.paramMap.get('pageId');\r\n      this.subscribeToLangChange();\r\n    });\r\n  }\r\n\r\n  private subscribeToLangChange() {\r\n    this.localStorageService.languageBehaviourSubject.pipe(takeUntil(this.destroyed$)).subscribe(() => this.fetchNotification());\r\n  }\r\n\r\n  fetchNotification(): void {\r\n    this.isLoadBar = true;\r\n    this.userMessagesService\r\n      .getNotification(this.page - 1, this.pageSize)\r\n      .pipe(takeUntil(this.destroy))\r\n      .subscribe(\r\n        (response) => {\r\n          this.notifications = response.page;\r\n          this.count = response.totalElements;\r\n          this.isAnyMessages = this.notifications.length > 0;\r\n          this.isLoadSpinner = this.isLoadBar = false;\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  setRead(notificationId: number, isRead: boolean) {\r\n    let isGetNotificationBody = true;\r\n    let notificationItem: NotificationBody;\r\n    notificationItem = this.notifications.find((item) => item.id === notificationId);\r\n    if (notificationItem.body) {\r\n      isGetNotificationBody = false;\r\n    }\r\n    if (!notificationItem.read) {\r\n      this.userMessagesService.countOfNoReadeMessages--;\r\n    }\r\n    if (isGetNotificationBody) {\r\n      this.notifications.forEach((item) => {\r\n        if (item.id === notificationId) {\r\n          item.read = true;\r\n        }\r\n      });\r\n      this.isLoadSmallSpinner = true;\r\n      this.userMessagesService\r\n        .setReadNotification(notificationId)\r\n        .pipe(takeUntil(this.destroy))\r\n        .subscribe((response) => {\r\n          const findNotification = this.notifications.find((item) => item.id === notificationId);\r\n          findNotification.body = response.body;\r\n          findNotification.isOpen = true;\r\n          this.isLoadSmallSpinner = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  onTableDataChange(event) {\r\n    this.router.navigate(['/ubs-user/messages/' + event]);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n    this.destroy.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <div class=\"content\">\r\n    <div class=\"main_header\">{{ localization.title | translate }}</div>\r\n    <div class=\"header-list\">\r\n      <div class=\"col-2 id\">{{ localization.id | translate }}</div>\r\n      <div class=\"col-5\">{{ localization.themeMessages | translate }}</div>\r\n      <div class=\"col-5 time\">{{ localization.time | translate }}</div>\r\n    </div>\r\n    <div class=\"under-line\"></div>\r\n    <div class=\"load-spinner\" *ngIf=\"isLoadSpinner\">\r\n      <mat-spinner class=\"custom-spinner\"></mat-spinner>\r\n    </div>\r\n    <div class=\"load-bar\" *ngIf=\"isLoadBar\">\r\n      <mat-progress-bar class=\"custom-bar\" mode=\"indeterminate\"></mat-progress-bar>\r\n    </div>\r\n    <div *ngIf=\"!isAnyMessages\" class=\"if-empty\">У вас ще немає повідомлень</div>\r\n    <div *ngIf=\"isAnyMessages\">\r\n      <div\r\n        *ngFor=\"\r\n          let notification of notifications\r\n            | paginate\r\n              : {\r\n                  id: 'pag',\r\n                  itemsPerPage: pageSize,\r\n                  currentPage: page,\r\n                  totalItems: count\r\n                }\r\n        \"\r\n      >\r\n        <mat-accordion>\r\n          <mat-expansion-panel\r\n            (click)=\"setRead(notification.id, notification.read)\"\r\n            (opened)=\"panelOpenState = true\"\r\n            (closed)=\"panelOpenState = false\"\r\n          >\r\n            <mat-expansion-panel-header>\r\n              <mat-panel-title [ngClass]=\"{ textColorTitle: !notification.read }\">\r\n                <div class=\"col-2\">{{ notification.id }}</div>\r\n              </mat-panel-title>\r\n              <mat-panel-description [ngClass]=\"{ textColorTitle: !notification.read }\" class=\"title\">\r\n                {{ notification.title }}\r\n              </mat-panel-description>\r\n              <mat-panel-description class=\"date\" [ngClass]=\"{ textColorTitle: !notification.read }\">\r\n                {{ notification.notificationTime | date: 'HH:mm dd.MM.yyyy' }}\r\n              </mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n            <div class=\"load-spinner small\" *ngIf=\"isLoadSmallSpinner && !notification.isOpen\">\r\n              <mat-spinner class=\"custom-spinner\" diameter=\"60\"></mat-spinner>\r\n            </div>\r\n            <div class=\"description\" *ngIf=\"!isLoadSmallSpinner\">\r\n              <app-notification-body [body]=\"notification.body\" [orderId]=\"notification.orderId\"></app-notification-body>\r\n            </div>\r\n            <div *ngIf=\"notification.img\" class=\"description title-img\">Фотографії порушення</div>\r\n            <div *ngIf=\"notification.img\" class=\"description img\"><img src=\"{{ notification.img }}\" alt=\"\" /></div>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n      </div>\r\n      <div class=\"d-flex justify-content-center\">\r\n        <pagination-controls\r\n          autoHide=\"true\"\r\n          id=\"pag\"\r\n          class=\"my-pagination\"\r\n          previousLabel=\"\"\r\n          nextLabel=\"\"\r\n          directionLinks=\"true\"\r\n          maxSize=\"5\"\r\n          (pageChange)=\"onTableDataChange($event)\"\r\n        >\r\n        </pagination-controls>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-order-details',\r\n  templateUrl: './ubs-user-order-details.component.html',\r\n  styleUrls: ['./ubs-user-order-details.component.scss']\r\n})\r\nexport class UbsUserOrderDetailsComponent {\r\n  @Input()\r\n  order: any;\r\n}\r\n","<div class=\"full_card\">\r\n  <div class=\"header_details\">{{ 'user-orders.details.title' | translate }}</div>\r\n  <table class=\"table_of_details\" aria-label=\"orderDetailsTable\">\r\n    <tr class=\"header_table\">\r\n      <th scope=\"row\">{{ 'user-orders.details.services' | translate }}</th>\r\n      <th scope=\"row\">{{ 'user-orders.details.volume' | translate }}</th>\r\n      <th scope=\"row\">{{ 'user-orders.details.cost' | translate }}</th>\r\n      <th scope=\"row\">{{ 'user-orders.details.bags-amount' | translate }}</th>\r\n      <th scope=\"row\">{{ 'user-orders.details.sum' | translate }}</th>\r\n    </tr>\r\n    <tr *ngFor=\"let bag of order.bags\" class=\"data_table\">\r\n      <td>{{ bag.name }}Вторсировина</td>\r\n      <td>{{ bag.capacity }} {{ 'user-orders.details.litr' | translate }}</td>\r\n      <td>{{ bag.price }} {{ 'user-orders.details.currency' | translate }}</td>\r\n      <td>{{ order.amountOfBagsOrdered[bag.id] }} {{ 'user-orders.details.pieces' | translate }}</td>\r\n      <td>{{ order.amountOfBagsOrdered[bag.id] * bag.price }} {{ 'user-orders.details.currency' | translate }}</td>\r\n    </tr>\r\n    <tr>\r\n      <td></td>\r\n    </tr>\r\n    <tr class=\"sum_of_order\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.order-sum' | translate }}</td>\r\n      <td>{{ order.orderFullPrice }} {{ 'user-orders.details.currency' | translate }}</td>\r\n    </tr>\r\n    <tr *ngIf=\"order.orderCertificateTotalDiscount !== 0\" class=\"optional_row\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.certificate' | translate }}</td>\r\n      <td>-{{ order.orderCertificateTotalDiscount }} {{ 'user-orders.details.currency' | translate }}</td>\r\n    </tr>\r\n    <tr *ngIf=\"order.orderBonusDiscount !== 0\" class=\"optional_row\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.bonuses' | translate }}</td>\r\n      <td>-{{ order.orderBonusDiscount }} {{ 'user-orders.details.currency' | translate }}</td>\r\n    </tr>\r\n    <tr *ngIf=\"order.orderStatus === 'DONE_UNPAID'\" class=\"optional_row\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.services-amount' | translate }}</td>\r\n      <td>{{ order.orderExportedPrice }} {{ 'user-orders.details.currency' | translate }}</td>\r\n    </tr>\r\n    <tr class=\"sum_to_pay\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.amount-due' | translate }}</td>\r\n      <td>{{ order.orderDiscountedPrice }} {{ 'user-orders.details.currency' | translate }}</td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n<div class=\"order_details\">\r\n  <ol *ngIf=\"order.additionalOrders[0] !== ''\">\r\n    <li class=\"bold_text\">{{ 'user-orders.details.delivery' | translate }}</li>\r\n    <li>\r\n      {{ 'user-orders.details.order-number' | translate }}\r\n      <span class=\"bold_text\"> {{ order.additionalOrders.join(', ') }}</span>\r\n    </li>\r\n  </ol>\r\n  <ol class=\"recipient\">\r\n    <li class=\"bold_text\">{{ 'user-orders.details.recipient' | translate }}</li>\r\n    <li>\r\n      <span>{{ order.recipientName }} </span><span>{{ order.recipientSurname }}</span>\r\n    </li>\r\n    <li>{{ order.recipientPhone }}</li>\r\n    <li>{{ order.recipientEmail }}</li>\r\n  </ol>\r\n  <ol>\r\n    <li class=\"bold_text\">{{ 'user-orders.details.export-address' | translate }}</li>\r\n    <li>{{ order.addressCity }}</li>\r\n    <li>{{ order.addressStreet }}</li>\r\n    <li>{{ order.addressDistrict }}</li>\r\n    <li *ngIf=\"order.addressComment !== null\">{{ 'user-orders.details.comment' | translate }} {{ order.addressComment }}</li>\r\n  </ol>\r\n</div>\r\n<div class=\"download\">\r\n  <div class=\"arrow\"><mat-icon [ngStyle]=\"{ fontSize: '16px' }\">arrow_downward</mat-icon></div>\r\n  <div class=\"maximize\"><mat-icon [ngStyle]=\"{ fontSize: '16px' }\">maximize</mat-icon></div>\r\n  <div class=\"text\">{{ 'user-orders.details.receipt' | translate }}</div>\r\n</div>\r\n<ng-template #spinner>\r\n  <app-ubs-spinner class=\"mx-auto\"></app-ubs-spinner>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-orders-list',\r\n  templateUrl: './ubs-user-orders-list.component.html',\r\n  styleUrls: ['./ubs-user-orders-list.component.scss']\r\n})\r\nexport class UbsUserOrdersListComponent {\r\n  @Input()\r\n  orders: any[];\r\n\r\n  isOrderFormed(order: any) {\r\n    return order.orderStatus === 'FORMED';\r\n  }\r\n\r\n  isOrderUnpaid(order: any) {\r\n    return order.orderStatus === 'DONE_UNPAID' || order.orderStatus === 'FORMED';\r\n  }\r\n\r\n  isOrderDone(order: any) {\r\n    return order.orderStatus === 'ON_THE_ROUTE' || order.orderStatus === 'CONFIRMED' || order.orderStatus === 'DONE';\r\n  }\r\n\r\n  changeCard(id: number) {\r\n    this.orders.forEach((order) => {\r\n      if (order.id === id) {\r\n        order.extend = !order.extend;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"orders.length !== 0\" class=\"header_list\">\r\n  <div>{{ 'user-orders.order-number' | translate }}</div>\r\n  <div>{{ 'user-orders.order-status' | translate }}</div>\r\n  <div>{{ 'user-orders.payment-amount' | translate }}</div>\r\n</div>\r\n<div *ngFor=\"let order of orders\" class=\"card\">\r\n  <div class=\"empty_card\">\r\n    <img *ngIf=\"order.extend\" src=\"assets/img/ubs-admin-orders/arrow_down.svg\" alt=\"arrow down\" (click)=\"changeCard(order.id)\" />\r\n    <img *ngIf=\"!order.extend\" src=\"assets/img/ubs-admin-orders/arrow_up.svg\" alt=\"arrow up\" (click)=\"changeCard(order.id)\" />\r\n    <div>{{ order.id }}</div>\r\n    <div>{{ order.orderStatusName }}</div>\r\n    <div class=\"order_sum\">{{ order.orderDiscountedPrice }}</div>\r\n    <div class=\"btns_group\">\r\n      <div *ngIf=\"isOrderFormed(order)\" class=\"btn_grid_cancel\">\r\n        <button class=\"btn_cancel\">{{ 'user-orders.btn.cancel' | translate }}</button>\r\n      </div>\r\n      <div *ngIf=\"isOrderUnpaid(order)\" class=\"btn_grid_pay\">\r\n        <button class=\"btn_pay\">{{ 'user-orders.btn.pay' | translate }}</button>\r\n      </div>\r\n      <div *ngIf=\"isOrderDone(order)\" class=\"btn_grid_order\">\r\n        <button class=\"btn_order\">{{ 'user-orders.btn.order-again' | translate }}</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"order.extend\">\r\n    <app-ubs-user-order-details [order]=\"order\"></app-ubs-user-order-details>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { catchError, takeUntil } from 'rxjs/operators';\r\nimport { Subject, throwError } from 'rxjs';\r\nimport { MatSnackBarComponent } from '@global-errors/mat-snack-bar/mat-snack-bar.component';\r\nimport { UserOrdersService } from '../services/user-orders.service';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-orders',\r\n  templateUrl: './ubs-user-orders.component.html',\r\n  styleUrls: ['./ubs-user-orders.component.scss']\r\n})\r\nexport class UbsUserOrdersComponent implements OnInit, OnDestroy {\r\n  destroy: Subject<boolean> = new Subject<boolean>();\r\n  orders: any[];\r\n  currentOrders: any[];\r\n  orderHistory: any[];\r\n  loading = false;\r\n  constructor(private snackBar: MatSnackBarComponent, private userOrdersService: UserOrdersService) {}\r\n\r\n  ngOnInit() {\r\n    this.userOrdersService\r\n      .getAllUserOrders()\r\n      .pipe(\r\n        takeUntil(this.destroy),\r\n        catchError((err) => {\r\n          this.snackBar.openSnackBar('Oops, something went wrong. Please reload page or try again later.');\r\n          return throwError(err);\r\n        })\r\n      )\r\n      .subscribe((item) => {\r\n        this.orders = item;\r\n        this.loading = true;\r\n        this.currentOrders = this.orders.filter((order) => order.orderStatus !== 'DONE' && order.orderStatus !== 'CANCELLED');\r\n        this.orderHistory = this.orders.filter((order) => order.orderStatus === 'DONE' || order.orderStatus === 'CANCELLED');\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n    this.destroy.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <div class=\"main_header\">{{ 'user-orders.order-title' | translate }}</div>\r\n  <div *ngIf=\"loading; else spinner\">\r\n    <div *ngIf=\"!orders || orders.length === 0\" class=\"if_empty\">\r\n      <span>{{ 'user-orders.no-orders' | translate }}</span\r\n      ><a href=\"#\">{{ 'user-orders.make-order' | translate }}</a>\r\n    </div>\r\n    <div *ngIf=\"orders && orders.length !== 0\" class=\"cards\">\r\n      <mat-tab-group animationDuration=\"0ms\">\r\n        <mat-tab label=\"{{ 'user-orders.current-orders' | translate }}\">\r\n          <app-ubs-user-orders-list [orders]=\"currentOrders\"></app-ubs-user-orders-list>\r\n        </mat-tab>\r\n        <mat-tab label=\"{{ 'user-orders.order-history' | translate }}\">\r\n          <app-ubs-user-orders-list [orders]=\"orderHistory\"></app-ubs-user-orders-list>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n      <div class=\"empty\"></div>\r\n    </div>\r\n  </div>\r\n  <ng-template #spinner>\r\n    <app-ubs-spinner class=\"mx-auto\"></app-ubs-spinner>\r\n  </ng-template>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-ubs-profile-change-password-pop-up',\r\n  templateUrl: './ubs-profile-change-password-pop-up.component.html',\r\n  styleUrls: ['./ubs-profile-change-password-pop-up.component.scss']\r\n})\r\nexport class UbsProfileChangePasswordPopUpComponent implements OnInit {\r\n  public formConfig: FormGroup;\r\n  private readonly passRegexp = /^(?=.*[A-Za-z]+)(?=.*\\d+)(?=.*[~`!@#$%^&*()+=_\\-{}|:;”’?\\/<>,.\\]\\[]+).{8,}$/;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  private initForm(): void {\r\n    this.formConfig = this.fb.group(\r\n      {\r\n        password: ['', [Validators.required, Validators.pattern(this.passRegexp)]],\r\n        currentPassword: ['', [Validators.required]],\r\n        confirmPassword: ['', [Validators.required]]\r\n      },\r\n      { validators: [this.checkConfirmPassword, this.checkNewPassword] }\r\n    );\r\n  }\r\n\r\n  checkConfirmPassword(group: FormGroup) {\r\n    const password = group.get('password').value;\r\n    const confirmPassword = group.get('confirmPassword').value;\r\n    return password === confirmPassword ? null : { notSame: true };\r\n  }\r\n\r\n  checkNewPassword(group: FormGroup) {\r\n    const password = group.get('password').value;\r\n    const currentPassword = group.get('currentPassword').value;\r\n    return password !== currentPassword ? null : { same: true };\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <h2 mat-dialog-title>{{ 'ubs-client-profile.change-password' | translate }}</h2>\r\n  <form [formGroup]=\"formConfig\">\r\n    <div class=\"input\">\r\n      <mat-form-field class=\"forms-inputs\">\r\n        <mat-label>{{ 'ubs-client-profile.old-password' | translate }}</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"currentPassword\" />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"input\">\r\n      <mat-form-field class=\"forms-inputs\">\r\n        <mat-label>{{ 'ubs-client-profile.new-password' | translate }}</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"password\" />\r\n      </mat-form-field>\r\n      <mat-error *ngIf=\"formConfig.errors?.same && formConfig.value.password\">\r\n        {{ 'ubs-client-profile.password-error-new' | translate }}\r\n      </mat-error>\r\n    </div>\r\n\r\n    <div class=\"input\">\r\n      <mat-form-field class=\"forms-inputs\">\r\n        <mat-label>{{ 'ubs-client-profile.repeat-password' | translate }}</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"confirmPassword\" />\r\n      </mat-form-field>\r\n      <mat-error *ngIf=\"formConfig.errors?.notSame\">\r\n        {{ 'ubs-client-profile.password-error-confirm' | translate }}\r\n      </mat-error>\r\n    </div>\r\n  </form>\r\n  <div class=\"action-btns\">\r\n    <mat-dialog-actions align=\"end\">\r\n      <button class=\"btn btn-ubs-outline-success\" mat-dialog-close>\r\n        {{ 'ubs-client-profile.btn.change-password-cancel' | translate }}\r\n      </button>\r\n      <button class=\"btn btn-ubs\" mat-dialog-close [disabled]=\"formConfig.invalid\" cdkFocusInitial>\r\n        {{ 'ubs-client-profile.btn.change-password' | translate }}\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ubs-profile-delete-pop-up',\r\n  templateUrl: './ubs-profile-delete-pop-up.component.html',\r\n  styleUrls: ['./ubs-profile-delete-pop-up.component.scss']\r\n})\r\nexport class UbsProfileDeletePopUpComponent {}\r\n","<div class=\"dialog-container\">\r\n  <h3 mat-dialog-title>{{ 'ubs-client-profile.delete-title' | translate }}</h3>\r\n  <mat-dialog-content>\r\n    <p>{{ 'ubs-client-profile.delete-message' | translate }}</p>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button class=\"btn btn-ubs-outline-success\" mat-dialog-close>{{ 'ubs-client-profile.btn.delete-profile-cancel' | translate }}</button>\r\n    <button class=\"btn btn-success btn-ubs\" [mat-dialog-close]=\"true\" cdkFocusInitial>\r\n      {{ 'ubs-client-profile.btn.delete-profile-save' | translate }}\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SignInIcons } from 'src/app/main/image-pathes/sign-in-icons';\r\nimport { MatSnackBarComponent } from '@global-errors/mat-snack-bar/mat-snack-bar.component';\r\nimport { Address, UserProfile } from 'src/app/ubs-admin/models/ubs-admin.interface';\r\nimport { ClientProfileService } from 'src/app/ubs-user/services/client-profile.service';\r\nimport { UbsProfileDeletePopUpComponent } from './ubs-profile-delete-pop-up/ubs-profile-delete-pop-up.component';\r\nimport { UbsProfileChangePasswordPopUpComponent } from './ubs-profile-change-password-pop-up/ubs-profile-change-password-pop-up.component';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-profile-page',\r\n  templateUrl: './ubs-user-profile-page.component.html',\r\n  styleUrls: ['./ubs-user-profile-page.component.scss']\r\n})\r\nexport class UbsUserProfilePageComponent implements OnInit {\r\n  userForm: FormGroup;\r\n  userProfile: UserProfile;\r\n  defaultAddress: Address = {\r\n    actual: true,\r\n    city: '',\r\n    coordinates: {\r\n      latitude: 1,\r\n      longitude: 1\r\n    },\r\n    district: '',\r\n    entranceNumber: '',\r\n    houseCorpus: '',\r\n    houseNumber: '',\r\n    id: null,\r\n    street: ''\r\n  };\r\n\r\n  googleIcon = SignInIcons.picGoogle;\r\n  isEditing = false;\r\n  isFetching = false;\r\n  phoneMask = '+{38} 000 000 00 00';\r\n  private readonly regexp = /^([a-zа-яїєґ '-])+$/iu;\r\n  private readonly regexpEmail = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n  private readonly regexpWithDigits = /^([a-zа-яїєґ0-9 '-])+$/iu;\r\n\r\n  constructor(public dialog: MatDialog, private clientProfileService: ClientProfileService, private snackBar: MatSnackBarComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.getUserData();\r\n  }\r\n\r\n  composeFormData(data: UserProfile) {\r\n    return {\r\n      ...data,\r\n      recipientPhone: data.recipientPhone?.slice(-9)\r\n    };\r\n  }\r\n\r\n  getUserData() {\r\n    this.isFetching = true;\r\n    this.clientProfileService.getDataClientProfile().subscribe(\r\n      (res: UserProfile) => {\r\n        this.userProfile = this.composeFormData(res);\r\n        this.userProfile.addressDto = this.userProfile.addressDto ?? this.defaultAddress;\r\n        this.userInit();\r\n        this.isFetching = false;\r\n      },\r\n      (err: Error) => {\r\n        this.isFetching = false;\r\n        this.snackBar.openSnackBar('ubs-client-profile.error-message');\r\n      }\r\n    );\r\n  }\r\n\r\n  userInit() {\r\n    this.userForm = new FormGroup({\r\n      address: new FormGroup({\r\n        city: new FormControl(this.userProfile?.addressDto.city, [Validators.pattern(this.regexp), Validators.maxLength(20)]),\r\n        street: new FormControl(this.userProfile?.addressDto.street, [Validators.pattern(this.regexpWithDigits), Validators.maxLength(20)]),\r\n        houseNumber: new FormControl(this.userProfile?.addressDto.houseNumber, [\r\n          Validators.pattern(this.regexpWithDigits),\r\n          Validators.maxLength(4)\r\n        ]),\r\n        houseCorpus: new FormControl(this.userProfile?.addressDto.houseCorpus, [\r\n          Validators.pattern(this.regexpWithDigits),\r\n          Validators.maxLength(4)\r\n        ]),\r\n        entranceNumber: new FormControl(this.userProfile?.addressDto.entranceNumber, [\r\n          Validators.pattern(this.regexpWithDigits),\r\n          Validators.maxLength(4)\r\n        ]),\r\n        district: new FormControl(this.userProfile?.addressDto.district, [\r\n          Validators.pattern(this.regexpWithDigits),\r\n          Validators.maxLength(20)\r\n        ])\r\n      }),\r\n      recipientName: new FormControl(this.userProfile?.recipientName, [Validators.required, Validators.pattern(this.regexp)]),\r\n      recipientSurname: new FormControl(this.userProfile?.recipientSurname, [Validators.required, Validators.pattern(this.regexp)]),\r\n      recipientEmail: new FormControl(this.userProfile?.recipientEmail, [Validators.required, Validators.pattern(this.regexpEmail)]),\r\n      recipientPhone: new FormControl(`+38 0${this.userProfile?.recipientPhone}`, [Validators.required, Validators.minLength(12)])\r\n    });\r\n    this.isFetching = false;\r\n  }\r\n\r\n  onEdit() {\r\n    this.isEditing = true;\r\n    this.isFetching = false;\r\n  }\r\n\r\n  onCancel() {\r\n    this.userInit();\r\n    this.isEditing = false;\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.userForm.valid) {\r\n      this.isFetching = true;\r\n      this.isEditing = false;\r\n      const submitData = {\r\n        addressDto: {\r\n          ...this.userForm.value.address,\r\n          id: this.userProfile.addressDto.id,\r\n          actual: this.userProfile.addressDto.actual,\r\n          coordinates: this.userProfile.addressDto.coordinates\r\n        },\r\n        recipientEmail: this.userForm.value.recipientEmail,\r\n        recipientName: this.userForm.value.recipientName,\r\n        recipientPhone: this.userForm.value.recipientPhone,\r\n        recipientSurname: this.userForm.value.recipientSurname\r\n      };\r\n      this.clientProfileService.postDataClientProfile(submitData).subscribe(\r\n        (res: UserProfile) => {\r\n          this.isFetching = false;\r\n          this.userProfile = this.composeFormData(res);\r\n        },\r\n        (err: Error) => {\r\n          this.isFetching = false;\r\n          this.snackBar.openSnackBar('ubs-client-profile.error-message');\r\n        }\r\n      );\r\n    } else {\r\n      this.isEditing = true;\r\n    }\r\n  }\r\n\r\n  openDeleteProfileDialog() {\r\n    this.dialog.open(UbsProfileDeletePopUpComponent, {\r\n      hasBackdrop: true\r\n    });\r\n  }\r\n\r\n  openChangePasswordDialog() {\r\n    this.dialog.open(UbsProfileChangePasswordPopUpComponent, {\r\n      hasBackdrop: true\r\n    });\r\n  }\r\n}\r\n","<!-- UNCOMMENT code below when back-end with functionality will be ready . -->\r\n<div class=\"ubs_profile-container mx-auto\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"ubs_profile-header\">\r\n        <div class=\"header-text\">\r\n          <h3>{{ 'ubs-client-profile.data' | translate }}</h3>\r\n        </div>\r\n        <!-- <button class=\"btn btn-ubs-outline-success edit\" (click)=\"onEdit()\" [disabled]=\"isEditing || isFetching\">\r\n          {{ 'ubs-client-profile.btn.edit' | translate }}\r\n        </button> -->\r\n      </div>\r\n      <div class=\"container-fluid\">\r\n        <p *ngIf=\"isEditing\" class=\"message-text\">\r\n          {{ 'ubs-client-profile.message-if-edit' | translate }}\r\n        </p>\r\n      </div>\r\n      <div class=\"input-group input-group-sm\">\r\n        <form *ngIf=\"!isFetching; else spinner\" [formGroup]=\"userForm\">\r\n          <h5>{{ 'ubs-client-profile.personal' | translate }}</h5>\r\n          <div class=\"form-group col-sm-5\">\r\n            <label for=\"recipientName\">{{ 'ubs-client-profile.name' | translate }}</label>\r\n            <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"recipientName\" formControlName=\"recipientName\" />\r\n            <p *ngIf=\"!isEditing\">{{ userProfile?.recipientName }}</p>\r\n          </div>\r\n          <div class=\"form-group col-sm-5\">\r\n            <label for=\"recipientSurname\">{{ 'ubs-client-profile.surname' | translate }}</label>\r\n            <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"recipientSurname\" formControlName=\"recipientSurname\" />\r\n            <p *ngIf=\"!isEditing\">{{ userProfile?.recipientSurname }}</p>\r\n          </div>\r\n          <h5>{{ 'ubs-client-profile.contacts' | translate }}</h5>\r\n          <div class=\"form-group col-sm-5\">\r\n            <label for=\"recipientEmail\" class=\"form-label\">{{ 'ubs-client-profile.email' | translate }}</label>\r\n            <input\r\n              *ngIf=\"isEditing\"\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              id=\"recipientEmail\"\r\n              [readonly]=\"true\"\r\n              formControlName=\"recipientEmail\"\r\n              aria-describedby=\"emailHelp\"\r\n            />\r\n            <p *ngIf=\"!isEditing\">{{ userProfile?.recipientEmail }}</p>\r\n          </div>\r\n          <div class=\"form-group col-sm-4\">\r\n            <label for=\"recipientPhone\" class=\"form-label\">{{ 'ubs-client-profile.phone' | translate }}</label>\r\n            <input\r\n              *ngIf=\"isEditing\"\r\n              type=\"tel\"\r\n              class=\"form-control\"\r\n              id=\"recipientPhone\"\r\n              [formControl]=\"userForm.controls['recipientPhone']\"\r\n              placeholder=\"+38___ ___ __ __\"\r\n              [unmask]=\"true\"\r\n              [imask]=\"{ mask: phoneMask }\"\r\n            />\r\n            <p *ngIf=\"!isEditing\">+380{{ userProfile?.recipientPhone }}</p>\r\n          </div>\r\n          <div class=\"address\" formGroupName=\"address\">\r\n            <h5>{{ 'ubs-client-profile.address' | translate }}</h5>\r\n            <div class=\"form-group col-sm-3\">\r\n              <label for=\"city\" class=\"form-label\">{{ 'ubs-client-profile.city' | translate }}</label>\r\n              <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"city\" formControlName=\"city\" />\r\n              <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.city }}</p>\r\n            </div>\r\n            <div class=\"house\">\r\n              <div class=\"form-group col-sm-3\">\r\n                <label for=\"street\" class=\"form-label\">{{ 'ubs-client-profile.street' | translate }}</label>\r\n                <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"street\" formControlName=\"street\" />\r\n                <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.street }}</p>\r\n              </div>\r\n              <div class=\"form-group col-sm-2\">\r\n                <label for=\"houseNumber\" class=\"form-label\">{{ 'ubs-client-profile.house' | translate }}</label>\r\n                <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"houseNumber\" formControlName=\"houseNumber\" />\r\n                <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.houseNumber }}</p>\r\n              </div>\r\n              <div class=\"form-group col-sm-2\">\r\n                <label for=\"houseCorpus\" class=\"form-label\">{{ 'ubs-client-profile.corpus' | translate }}</label>\r\n                <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"houseCorpus\" formControlName=\"houseCorpus\" />\r\n                <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.houseCorpus }}</p>\r\n              </div>\r\n              <div class=\"form-group col-sm-2\">\r\n                <label for=\"entranceNumber\" class=\"form-label\">{{ 'ubs-client-profile.entrance' | translate }}</label>\r\n                <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"entranceNumber\" formControlName=\"entranceNumber\" />\r\n                <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.entranceNumber }}</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group col-sm-3\">\r\n              <label for=\"district\" class=\"form-label\">{{ 'ubs-client-profile.district' | translate }}</label>\r\n              <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"district\" formControlName=\"district\" />\r\n              <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.district }}</p>\r\n            </div>\r\n          </div>\r\n          <!-- <h5>{{ 'ubs-client-profile.account' | translate }}</h5> -->\r\n          <!-- <div class=\"account\">\r\n            <span>\r\n              <img [src]=\"googleIcon\" alt=\"google bind\" />\r\n            </span>\r\n            <p>{{ 'ubs-client-profile.account-message' | translate }}</p>\r\n          </div> -->\r\n        </form>\r\n      </div>\r\n      <div class=\"submit-btns\" *ngIf=\"isEditing\">\r\n        <button class=\"btn btn-ubs-outline-success cancel\" type=\"submit\" (click)=\"onCancel()\">\r\n          {{ 'ubs-client-profile.btn.cancel' | translate }}\r\n        </button>\r\n        <button class=\"btn btn-success\" type=\"submit\" (click)=\"onSubmit()\" [disabled]=\"!userForm.valid\">\r\n          {{ 'ubs-client-profile.btn.save' | translate }}\r\n        </button>\r\n      </div>\r\n      <div class=\"ubs_profile-footer\" *ngIf=\"!isEditing\">\r\n        <div class=\"footer-text\">\r\n          <h3>{{ 'ubs-client-profile.additional' | translate }}</h3>\r\n        </div>\r\n        <div class=\"footer-btns\">\r\n          <button class=\"btn btn-ubs-outline-success open\" (click)=\"openChangePasswordDialog()\">\r\n            {{ 'ubs-client-profile.btn.change-password' | translate }}\r\n          </button>\r\n          <button class=\"btn btn-ubs-outline-success delete\" (click)=\"openDeleteProfileDialog()\">\r\n            {{ 'ubs-client-profile.btn.delete-profile' | translate }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <ng-template #spinner>\r\n      <app-ubs-spinner class=\"mx-auto\"></app-ubs-spinner>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UbsUserGuardGuard } from './ubs-user-guard.guard';\r\nimport { UbsUserComponent } from './ubs-user.component';\r\nimport { UbsUserOrdersComponent } from './ubs-user-orders/ubs-user-orders.component';\r\nimport { UbsUserMessagesComponent } from './ubs-user-messages/ubs-user-messages.component';\r\nimport { UbsUserBonusesComponent } from './ubs-user-bonuses/ubs-user-bonuses.component';\r\nimport { UbsUserProfilePageComponent } from './ubs-user-profile-page/ubs-user-profile-page.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UbsUserComponent,\r\n    canActivate: [UbsUserGuardGuard],\r\n    children: [\r\n      { path: 'profile', component: UbsUserProfilePageComponent },\r\n      { path: 'orders', component: UbsUserOrdersComponent },\r\n      { path: 'bonuses', component: UbsUserBonusesComponent },\r\n      { path: `messages/:pageId`, component: UbsUserMessagesComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UbsUserRoutingModule {}\r\n","import { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { Component } from '@angular/core';\r\nimport { UbsBaseSidebarComponent } from 'src/app/shared/ubs-base-sidebar/ubs-base-sidebar.component';\r\nimport { UserMessagesService } from '../services/user-messages.service';\r\nimport { JwtService } from '@global-service/jwt/jwt.service';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-sidebar',\r\n  templateUrl: './ubs-user-sidebar.component.html'\r\n})\r\nexport class UbsUserSidebarComponent extends UbsBaseSidebarComponent {\r\n  public listElementsUser: any[] = [\r\n    {\r\n      link: 'assets/img/sidebarIcons/workers_icon.svg',\r\n      name: 'ubs-user.user_data',\r\n      routerLink: 'profile'\r\n    },\r\n    {\r\n      link: 'assets/img/sidebarIcons/shopping-cart_icon.svg',\r\n      name: 'ubs-user.orders',\r\n      routerLink: 'orders'\r\n    },\r\n    {\r\n      link: './assets/img/sidebarIcons/achievement_icon.svg',\r\n      name: 'ubs-user.invoice',\r\n      routerLink: 'bonuses'\r\n    },\r\n    {\r\n      link: 'assets/img/sidebarIcons/none_notification_Bell.svg',\r\n      name: 'ubs-user.messages',\r\n      routerLink: 'messages/1'\r\n    }\r\n  ];\r\n\r\n  constructor(public service: UserMessagesService, public breakpointObserver: BreakpointObserver, public jwtService: JwtService) {\r\n    super(service, breakpointObserver, jwtService);\r\n  }\r\n}\r\n","<app-ubs-base-sidebar [listElements]=\"listElementsUser\">\r\n  <router-outlet></router-outlet>\r\n</app-ubs-base-sidebar>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { LocalStorageService } from '@global-service/localstorage/local-storage.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user',\r\n  templateUrl: './ubs-user.component.html',\r\n  styleUrls: ['./ubs-user.component.scss']\r\n})\r\nexport class UbsUserComponent implements OnInit, OnDestroy {\r\n  private destroy: Subject<boolean> = new Subject<boolean>();\r\n  constructor(private translate: TranslateService, private localStorageService: LocalStorageService) {}\r\n\r\n  ngOnInit() {\r\n    this.localStorageService.languageBehaviourSubject.pipe(takeUntil(this.destroy)).subscribe((lang) => {\r\n      this.translate.setDefaultLang(lang !== 'en' && lang !== 'ua' ? 'ua' : lang);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy.next(true);\r\n    this.destroy.complete();\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<app-search-popup></app-search-popup>\r\n<app-ubs-user-sidebar></app-ubs-user-sidebar>\r\n<app-ubs-footer></app-ubs-footer>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { UbsUserOrdersListComponent } from './ubs-user-orders-list/ubs-user-orders-list.component';\r\nimport { UbsUserOrderDetailsComponent } from './ubs-user-order-details/ubs-user-order-details.component';\r\nimport { UbsUserOrdersComponent } from './ubs-user-orders/ubs-user-orders.component';\r\nimport { UbsUserRoutingModule } from './ubs-user-routing.module';\r\nimport { UbsUserComponent } from './ubs-user.component';\r\nimport { UbsUserSidebarComponent } from './ubs-user-sidebar/ubs-user-sidebar.component';\r\nimport { IMaskModule } from 'angular-imask';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { UbsUserMessagesComponent } from './ubs-user-messages/ubs-user-messages.component';\r\nimport { NotificationBodyComponent } from './ubs-user-messages/notification-body/notification-body.component';\r\nimport { UbsUserBonusesComponent } from './ubs-user-bonuses/ubs-user-bonuses.component';\r\nimport { MaterialModule } from '../material.module';\r\nimport { UbsUserProfilePageComponent } from './ubs-user-profile-page/ubs-user-profile-page.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UbsProfileChangePasswordPopUpComponent } from './ubs-user-profile-page/ubs-profile-change-password-pop-up/ubs-profile-change-password-pop-up.component';\r\nimport { UbsProfileDeletePopUpComponent } from './ubs-user-profile-page/ubs-profile-delete-pop-up/ubs-profile-delete-pop-up.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UbsUserSidebarComponent,\r\n    UbsUserBonusesComponent,\r\n    UbsUserComponent,\r\n    UbsUserOrderDetailsComponent,\r\n    UbsUserOrdersComponent,\r\n    UbsUserOrdersListComponent,\r\n    UbsUserMessagesComponent,\r\n    NotificationBodyComponent,\r\n    UbsUserProfilePageComponent,\r\n    UbsProfileChangePasswordPopUpComponent,\r\n    UbsProfileDeletePopUpComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    UbsUserRoutingModule,\r\n    SharedModule,\r\n    IMaskModule,\r\n    MatTabsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule.forChild({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: createTranslateLoaderUbsUser,\r\n        deps: [HttpClient]\r\n      },\r\n      isolate: true\r\n    }),\r\n    MatExpansionModule,\r\n    NgxPaginationModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule\r\n  ],\r\n  entryComponents: [UbsProfileChangePasswordPopUpComponent, UbsProfileDeletePopUpComponent]\r\n})\r\nexport class UbsUserModule {}\r\n\r\nexport function createTranslateLoaderUbsUser(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/ubs-admin/', '.json');\r\n}\r\n"],"sourceRoot":"webpack:///"}