{"version":3,"sources":["./src/app/main/component/eco-news/services/eco-news.service.ts","./src/app/main/image-pathes/single-news-images.ts","./src/app/main/service/word-declension/word-declension.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, Observer, ReplaySubject } from 'rxjs';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { EcoNewsModel, NewsTagInterface } from '../models/eco-news-model';\r\nimport { environment } from '@environment/environment';\r\nimport { EcoNewsDto } from '../models/eco-news-dto';\r\nimport { LocalStorageService } from '@global-service/localstorage/local-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EcoNewsService implements OnDestroy {\r\n  private backEnd = environment.backendLink;\r\n  private language: string;\r\n  private destroyed$: ReplaySubject<any> = new ReplaySubject<any>(1);\r\n\r\n  constructor(private http: HttpClient, private localStorageService: LocalStorageService) {\r\n    this.localStorageService.languageBehaviourSubject.pipe(takeUntil(this.destroyed$)).subscribe((language) => (this.language = language));\r\n  }\r\n\r\n  public getAllPresentTags(): Observable<Array<NewsTagInterface>> {\r\n    return this.http.get<Array<NewsTagInterface>>(`${this.backEnd}econews/tags/all?lang=${this.language}`);\r\n  }\r\n\r\n  public getEcoNewsListByPage(page: number, quantity: number) {\r\n    return this.http.get(`${this.backEnd}econews?page=${page}&size=${quantity}`);\r\n  }\r\n\r\n  public getNewsListByTags(page: number, quantity: number, tags: Array<string>) {\r\n    return this.http.get(`${this.backEnd}econews/tags?page=${page}&size=${quantity}&tags=${tags}`);\r\n  }\r\n\r\n  public getNewsList(): Observable<any> {\r\n    const headers = new HttpHeaders();\r\n    headers.set('Content-type', 'application/json');\r\n    return new Observable((observer: Observer<any>) => {\r\n      this.http\r\n        .get<EcoNewsDto>(`${this.backEnd}econews`)\r\n        .pipe(take(1))\r\n        .subscribe((newsDto: EcoNewsDto) => {\r\n          observer.next(newsDto);\r\n        });\r\n    });\r\n  }\r\n\r\n  public getEcoNewsById(id: string): Observable<EcoNewsModel> {\r\n    return this.http.get<EcoNewsModel>(`${this.backEnd}econews/${id}?lang=${this.language}`);\r\n  }\r\n\r\n  public getRecommendedNews(id: number): Observable<EcoNewsModel> {\r\n    return this.http.get<EcoNewsModel>(`${this.backEnd}econews/recommended?openedEcoNewsId=${id}`);\r\n  }\r\n\r\n  public getIsLikedByUser(econewsId) {\r\n    return this.http.get(`${this.backEnd}econews/isLikedByUser`, {\r\n      params: {\r\n        econewsId\r\n      }\r\n    });\r\n  }\r\n\r\n  public postToggleLike(id: number) {\r\n    return this.http.post(`${this.backEnd}econews/like?id=${id}`, {});\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next(true);\r\n    this.destroyed$.complete();\r\n  }\r\n}\r\n","export const singleNewsImages = {\r\n  arrowLeft: 'assets/img/icon/econews/arrow_left.svg',\r\n  ellipse: 'assets/img/icon/econews/ellipse.svg',\r\n  largeImage: 'assets/img/icon/econews/news-default-large.png',\r\n  twitter: 'assets/img/icon/econews/twitter.svg',\r\n  facebook: 'assets/img/icon/econews/facebook.svg',\r\n  linkedIn: 'assets/img/icon/econews/linkedin.svg',\r\n};\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WordDeclensionService {\r\n  setWordDeclension(count: string): string {\r\n    const lastOne = -1;\r\n    const lastTwo = -2;\r\n    const suitableLastNumber = '1';\r\n    const unsuitableLastNumber = '11';\r\n    const suitableLastNumbers = '234';\r\n    const unsuitableLastNumbers = ['12', '13', '14'];\r\n    if (count.slice(lastOne) === suitableLastNumber && count.slice(lastTwo) !== unsuitableLastNumber) {\r\n      return 'a';\r\n    }\r\n    if (suitableLastNumbers.includes(count.slice(lastOne)) && !unsuitableLastNumbers.includes(count.slice(lastTwo))) {\r\n      return 'b';\r\n    }\r\n    return '';\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}