{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js","webpack:///src/app/ubs-user/services/client-profile.service.ts","webpack:///src/app/ubs-user/services/user-orders.service.ts","webpack:///src/app/ubs-user/ubs-user-bonuses/services/bonuses.service.ts","webpack:///src/app/ubs-user/ubs-user-bonuses/ubs-user-bonuses.component.ts","webpack:///src/app/ubs-user/ubs-user-bonuses/ubs-user-bonuses.component.html","webpack:///src/app/ubs-user/ubs-user-messages/notification-body/notification-body.component.ts","webpack:///src/app/ubs-user/ubs-user-messages/notification-body/notification-body.component.html","webpack:///src/app/ubs-user/ubs-user-messages/ubs-user-messages.component.ts","webpack:///src/app/ubs-user/ubs-user-messages/ubs-user-messages.component.html","webpack:///src/app/ubs-user/ubs-user-order-details/ubs-user-order-details.component.ts","webpack:///src/app/ubs-user/ubs-user-order-details/ubs-user-order-details.component.html","webpack:///src/app/ubs-user/ubs-user-orders-list/ubs-user-orders-list.component.ts","webpack:///src/app/ubs-user/ubs-user-orders-list/ubs-user-orders-list.component.html","webpack:///src/app/ubs-user/ubs-user-orders/ubs-user-orders.component.ts","webpack:///src/app/ubs-user/ubs-user-orders/ubs-user-orders.component.html","webpack:///src/app/ubs-user/ubs-user-profile-page/ubs-profile-change-password-pop-up/ubs-profile-change-password-pop-up.component.ts","webpack:///src/app/ubs-user/ubs-user-profile-page/ubs-profile-change-password-pop-up/ubs-profile-change-password-pop-up.component.html","webpack:///src/app/ubs-user/ubs-user-profile-page/ubs-profile-delete-pop-up/ubs-profile-delete-pop-up.component.ts","webpack:///src/app/ubs-user/ubs-user-profile-page/ubs-profile-delete-pop-up/ubs-profile-delete-pop-up.component.html","webpack:///src/app/ubs-user/ubs-user-profile-page/ubs-user-profile-page.component.ts","webpack:///src/app/ubs-user/ubs-user-profile-page/ubs-user-profile-page.component.html","webpack:///src/app/ubs-user/ubs-user-routing.module.ts","webpack:///src/app/ubs-user/ubs-user-sidebar/ubs-user-sidebar.component.ts","webpack:///src/app/ubs-user/ubs-user-sidebar/ubs-user-sidebar.component.html","webpack:///src/app/ubs-user/ubs-user.component.ts","webpack:///src/app/ubs-user/ubs-user.component.html","webpack:///src/app/ubs-user/ubs-user.module.ts"],"names":["nextId","CdkAccordion","_stateChanges","_openCloseAllActions","id","_multi","multi","_openCloseAll","changes","next","complete","expanded","ɵfac","CdkAccordion_Factory","t","ɵdir","type","selectors","inputs","exportAs","features","propDecorators","args","selector","nextId$1","ɵ0","undefined","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","_subscribeToOpenCloseAllActions","emit","notify","markForCheck","disabled","unsubscribe","subscribe","CdkAccordionItem_Factory","outputs","provide","useValue","ctorParameters","decorators","providers","CdkAccordionModule","ɵmod","ɵinj","factory","CdkAccordionModule_Factory","ngJitMode","declarations","exports","_c0","MatExpansionPanel_ng_template_5_Template","rf","ctx","_c1","_c2","_c3","a0","a1","collapsedHeight","expandedHeight","_c4","value","params","MatExpansionPanelHeader_span_4_Template","ctx_r0","_getExpandedState","_c5","_c6","MatAccordionBase","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","transform","expansionHeaderHeight","height","optional","bodyExpansion","visibility","MatExpansionPanelContent","_template","MatExpansionPanelContent_Factory","uniqueId","MatExpansionPanelDefaultOptions","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","defaultOptions","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","pipe","x","y","fromState","toState","event","hideToggle","_togglePosition","togglePosition","displayMode","_lazyContent","_portal","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","MatExpansionPanel_Factory","ɵcmp","contentQueries","MatExpansionPanel_ContentQueries","dirIndex","_t","first","viewQuery","MatExpansionPanel_Query","hostAttrs","hostVars","hostBindings","MatExpansionPanel_HostBindings","_hasSpacing","ngContentSelectors","decls","vars","consts","template","MatExpansionPanel_Template","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","$event","directives","styles","encapsulation","data","animation","changeDetection","String","None","OnPush","animations","host","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","MatExpansionPanelHeader","panel","_element","_focusMonitor","_parentChangeSubscription","_animationsDisabled","accordionHideToggleChange","_containsFocus","focusVia","monitor","origin","_handleHeaderFocus","toggle","keyCode","preventDefault","_toggle","_handleHeaderKeydown","options","stopMonitoring","MatExpansionPanelHeader_Factory","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_animation_expansionHeight_start_HostBindingHandler","_animationStarted","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","_keydown","_getPanelId","_isExpanded","_getTogglePosition","MatExpansionPanelHeader_Template","_showToggle","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","arguments","_ownHeaders","show","_headers","headers","reset","filter","header","notifyOnChanges","_keyManager","withWrap","manager","setFirstItemActive","setLastItemActive","onKeydown","updateActiveItem","MatAccordion_Factory","ɵMatAccordion_BaseFactory","MatAccordion_ContentQueries","MatAccordion_HostBindings","useExisting","descendants","MatExpansionModule","MatExpansionModule_Factory","imports","ClientProfileService","http","get","user","post","providedIn","UserOrdersService","url","lang","localStorage","getItem","BonusesService","backendUbsLink","UbsUserBonusesComponent","snackBar","bonusesService","displayedColumns","dataSource","isLoading","destroy","getBonusesData","sort","getUserBonuses","res","bonusesList","ubsUserBonuses","totalBonuses","userBonuses","error","openSnackBar","slice","active","direction","a","b","isAsc","compare","Date","dateOfEnrollment","getDate","templateUrl","styleUrls","NotificationBodyComponent","userMessagesService","router","elementRef","navigate","orderId","querySelector","addEventListener","redirectToPayment","bind","UbsUserMessagesComponent","localStorageService","route","isAnyMessages","panelOpenState","page","count","pageSize","destroyed$","localization","title","themeMessages","time","val","snapshot","paramMap","subscribeToLangChange","languageBehaviourSubject","fetchNotification","isLoadBar","getNotification","response","notifications","totalElements","length","isLoadSpinner","console","log","notificationId","isRead","isGetNotificationBody","notificationItem","find","item","body","read","countOfNoReadeMessages","forEach","isLoadSmallSpinner","setReadNotification","findNotification","isOpen","UbsUserOrderDetailsComponent","UbsUserOrdersListComponent","order","orderStatus","orders","extend","UbsUserOrdersComponent","userOrdersService","loading","getAllUserOrders","err","currentOrders","orderHistory","UbsProfileChangePasswordPopUpComponent","fb","passRegexp","initForm","formConfig","group","password","required","pattern","currentPassword","confirmPassword","validators","checkConfirmPassword","checkNewPassword","notSame","same","UbsProfileDeletePopUpComponent","UbsUserProfilePageComponent","dialog","clientProfileService","defaultAddress","actual","city","coordinates","latitude","longitude","district","entranceNumber","houseCorpus","houseNumber","street","googleIcon","picGoogle","isEditing","isFetching","phoneMask","regexp","regexpEmail","regexpWithDigits","getUserData","recipientPhone","getDataClientProfile","userProfile","composeFormData","addressDto","userInit","userForm","address","maxLength","recipientName","recipientSurname","recipientEmail","minLength","valid","submitData","postDataClientProfile","open","hasBackdrop","routes","path","component","canActivate","children","UbsUserRoutingModule","forChild","UbsUserSidebarComponent","service","breakpointObserver","jwtService","listElementsUser","link","name","routerLink","UbsUserComponent","translate","setDefaultLang","UbsUserModule","loader","useFactory","createTranslateLoaderUbsUser","deps","isolate","entryComponents"],"mappings":"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","file":"ubs-user-ubs-user-module-es5.js","sourcesContent":["import { Directive, Input, EventEmitter, Optional, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /**\n         * Emits when the state of the accordion changes\n         */\n        this._stateChanges = new Subject();\n        /**\n         * Stream that emits true/false when openAll/closeAll is triggered.\n         */\n        this._openCloseAllActions = new Subject();\n        /**\n         * A readonly id value to use for unique selection coordination.\n         */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /**\n     * Whether the accordion should allow multiple expanded accordion items simultaneously.\n     * @return {?}\n     */\n    get multi() { return this._multi; }\n    /**\n     * @param {?} multi\n     * @return {?}\n     */\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /**\n     * Opens all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /**\n     * Closes all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @private\n     * @param {?} expanded\n     * @return {?}\n     */\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion'\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordion.ngAcceptInputType_multi;\n    /**\n     * Emits when the state of the accordion changes\n     * @type {?}\n     */\n    CdkAccordion.prototype._stateChanges;\n    /**\n     * Stream that emits true/false when openAll/closeAll is triggered.\n     * @type {?}\n     */\n    CdkAccordion.prototype._openCloseAllActions;\n    /**\n     * A readonly id value to use for unique selection coordination.\n     * @type {?}\n     */\n    CdkAccordion.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordion.prototype._multi;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-item.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion item.\n * @type {?}\n */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _expansionDispatcher\n     */\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /**\n         * Subscription to openAll/closeAll events.\n         */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /**\n         * Event emitted every time the AccordionItem is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted every time the AccordionItem is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event emitted when the AccordionItem is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * \\@docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /**\n         * The unique AccordionItem id.\n         */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /**\n         * Unregister function for _expansionDispatcher.\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} accordionId\n             * @return {?}\n             */\n            (id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            }));\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /**\n     * Whether the AccordionItem is expanded.\n     * @return {?}\n     */\n    get expanded() { return this._expanded; }\n    /**\n     * @param {?} expanded\n     * @return {?}\n     */\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 * @type {?}\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the AccordionItem is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /**\n     * Emits an event for the accordion item being destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /**\n     * Toggles the expanded state of the accordion item.\n     * @return {?}\n     */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to false.\n     * @return {?}\n     */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to true.\n     * @return {?}\n     */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe((/**\n         * @param {?} expanded\n         * @return {?}\n         */\n        expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        }));\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CdkAccordion, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n            // to the same accordion.\n            { provide: CdkAccordion, useValue: ɵ0 },\n        ])] });\n/** @nocollapse */\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n                    // to the same accordion.\n                    { provide: CdkAccordion, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_expanded;\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_disabled;\n    /**\n     * Subscription to openAll/closeAll events.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._openCloseAllSubscription;\n    /**\n     * Event emitted every time the AccordionItem is closed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.closed;\n    /**\n     * Event emitted every time the AccordionItem is opened.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.opened;\n    /**\n     * Event emitted when the AccordionItem is destroyed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.destroyed;\n    /**\n     * Emits whenever the expanded state of the accordion changes.\n     * Primarily used to facilitate two-way binding.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.expandedChange;\n    /**\n     * The unique AccordionItem id.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._disabled;\n    /**\n     * Unregister function for _expansionDispatcher.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._removeUniqueSelectionListener;\n    /** @type {?} */\n    CdkAccordionItem.prototype.accordion;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkAccordionItem.prototype._expansionDispatcher;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion,\n        CdkAccordionItem], exports: [CdkAccordion,\n        CdkAccordionItem] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n\n//# sourceMappingURL=accordion.js.map","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, hasModifierKey, SPACE, HOME, END } from '@angular/cdk/keycodes';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, group, query, animateChild } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a `MatAccordion`.\n * \\@docs-private\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nconst _c3 = function (a0, a1) { return { collapsedHeight: a0, expandedHeight: a1 }; };\nconst _c4 = function (a0, a1) { return { value: a0, params: a1 }; };\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nfunction MatAccordionBase() { }\nif (false) {\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.togglePosition;\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderKeydown;\n    /**\n     * Handles focus events on the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderFocus;\n}\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n * @type {?}\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time and timing curve for expansion panel animations.\n * @type {?}\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n * @type {?}\n */\nconst matExpansionAnimations = {\n    /**\n     * Animation that rotates the indicator arrow.\n     */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /**\n     * Animation that expands and collapses the panel header height.\n     */\n    expansionHeaderHeight: trigger('expansionHeight', [\n        state('collapsed, void', style({\n            height: '{{collapsedHeight}}',\n        }), {\n            params: { collapsedHeight: '48px' },\n        }),\n        state('expanded', style({\n            height: '{{expandedHeight}}'\n        }), {\n            params: { expandedHeight: '64px' }\n        }),\n        transition('expanded <=> collapsed, void => collapsed', group([\n            query('@indicatorRotate', animateChild(), { optional: true }),\n            animate(EXPANSION_PANEL_ANIMATION_TIMING),\n        ])),\n    ]),\n    /**\n     * Animation that expands and collapses the panel content.\n     */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\n/** @nocollapse */\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanelContent.prototype._template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter for generating unique element ids.\n * @type {?}\n */\nlet uniqueId = 0;\n/**\n * Object that can be used to override the default options\n * for all of the expansion panels in a module.\n * @record\n */\nfunction MatExpansionPanelDefaultOptions() { }\nif (false) {\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.collapsedHeight;\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.hideToggle;\n}\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n * @type {?}\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?} _animationMode\n     * @param {?=} defaultOptions\n     */\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /**\n         * An event emitted after the body's expansion animation happens.\n         */\n        this.afterExpand = new EventEmitter();\n        /**\n         * An event emitted after the body's collapse animation happens.\n         */\n        this.afterCollapse = new EventEmitter();\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        /**\n         * ID for the associated header element. Used for a11y labelling.\n         */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /**\n         * Stream of body animation done events.\n         */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        }));\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * The position of the expansion indicator.\n     * @return {?}\n     */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * Toggles the expanded state of the expansion panel.\n     * @return {?}\n     */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to false.\n     * @return {?}\n     */\n    close() {\n        this.expanded = false;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to true.\n     * @return {?}\n     */\n    open() {\n        this.expanded = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith((/** @type {?} */ (null))), filter((/**\n             * @return {?}\n             */\n            () => this.expanded && !this._portal)), take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /**\n     * Checks whether the expansion panel's content contains the currently-focused element.\n     * @return {?}\n     */\n    _containsFocus() {\n        if (this._body) {\n            /** @type {?} */\n            const focusedElement = this._document.activeElement;\n            /** @type {?} */\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_hideToggle;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_expanded;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._togglePosition;\n    /**\n     * An event emitted after the body's expansion animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterExpand;\n    /**\n     * An event emitted after the body's collapse animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterCollapse;\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._inputChanges;\n    /**\n     * Optionally defined accordion the expansion panel belongs to.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.accordion;\n    /**\n     * Content that will be rendered lazily.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._lazyContent;\n    /**\n     * Element containing the panel's user-provided content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._body;\n    /**\n     * Portal holding the user's content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._portal;\n    /**\n     * ID for the associated header element. Used for a11y labelling.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._headerId;\n    /**\n     * Stream of body animation done events.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._bodyAnimationDone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._viewContainerRef;\n    /** @type {?} */\n    MatExpansionPanel.prototype._animationMode;\n}\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    /**\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultOptions\n     */\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /**\n         * Whether Angular animations in the panel header should be disabled.\n         */\n        this._animationsDisabled = true;\n        /** @type {?} */\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => !!(changes['hideToggle'] || changes['togglePosition'])))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            }))))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter((/**\n         * @return {?}\n         */\n        () => panel._containsFocus())))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => _focusMonitor.focusVia(_element, 'program')));\n        _focusMonitor.monitor(_element).subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            if (origin && panel.accordion) {\n                panel.accordion._handleHeaderFocus(this);\n            }\n        }));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _animationStarted() {\n        // Currently the `expansionHeight` animation has a `void => collapsed` transition which is\n        // there to work around a bug in Angular (see #13088), however this introduces a different\n        // issue. The new transition will cause the header to animate in on init (see #16067), if the\n        // consumer has set a header height that is different from the default one. We work around it\n        // by disabling animations on the header and re-enabling them after the first animation has run.\n        // Note that Angular dispatches animation events even if animations are disabled. Ideally this\n        // wouldn't be necessary if we remove the `void => collapsed` transition, but we have to wait\n        // for https://github.com/angular/angular/issues/18847 to be resolved.\n        this._animationsDisabled = false;\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Gets the toggle position for the header.\n     * @return {?}\n     */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @param {?=} origin Origin of the action that triggered the focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 19, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@expansionHeight.start\", function MatExpansionPanelHeader_animation_expansionHeight_start_HostBindingHandler() { return ctx._animationStarted(); });\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? 0 - 1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@.disabled\", ctx._animationsDisabled)(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(16, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(13, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c6, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;position:relative}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n            matExpansionAnimations.expansionHeaderHeight\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                    matExpansionAnimations.expansionHeaderHeight\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                    '[@.disabled]': '_animationsDisabled',\n                    '(@expansionHeight.start)': '_animationStarted()',\n                    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;position:relative}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._parentChangeSubscription;\n    /**\n     * Whether Angular animations in the panel header should be disabled.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype._animationsDisabled;\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.collapsedHeight;\n    /** @type {?} */\n    MatExpansionPanelHeader.prototype.panel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._changeDetectorRef;\n}\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /**\n         * Headers belonging to this accordion.\n         */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /**\n         * The position of the expansion indicator.\n         */\n        this.togglePosition = 'after';\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() { return this._hideToggle; }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((/**\n         * @param {?} headers\n         * @return {?}\n         */\n        (headers) => {\n            this._ownHeaders.reset(headers.filter((/**\n             * @param {?} header\n             * @return {?}\n             */\n            header => header.panel.accordion === this)));\n            this._ownHeaders.notifyOnChanges();\n        }));\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap();\n    }\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleHeaderKeydown(event) {\n        const { keyCode } = event;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME) {\n            if (!hasModifierKey(event)) {\n                manager.setFirstItemActive();\n                event.preventDefault();\n            }\n        }\n        else if (keyCode === END) {\n            if (!hasModifierKey(event)) {\n                manager.setLastItemActive();\n                event.preventDefault();\n            }\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = function MatAccordion_Factory(t) { return ɵMatAccordion_BaseFactory(t || MatAccordion); };\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\nconst ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAccordion.ngAcceptInputType_hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._keyManager;\n    /**\n     * Headers belonging to this accordion.\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._ownHeaders;\n    /**\n     * All headers inside the accordion. Includes headers inside nested accordions.\n     * @type {?}\n     */\n    MatAccordion.prototype._headers;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     * @type {?}\n     */\n    MatAccordion.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordion.prototype.togglePosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); }, imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n\n//# sourceMappingURL=expansion.js.map","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { mainUbsLink } from 'src/app/main/links';\r\nimport { UserProfile } from '../../ubs-admin/models/ubs-admin.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientProfileService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getDataClientProfile() {\r\n    return this.http.get(`${mainUbsLink}/ubs/userProfile/user/getUserProfile`);\r\n  }\r\n\r\n  postDataClientProfile(user: UserProfile) {\r\n    return this.http.post(`${mainUbsLink}/ubs/userProfile/user/update`, user);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserOrdersService {\r\n  private url = 'https://greencity-ubs.azurewebsites.net/ubs/client';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllUserOrders(): Observable<any> {\r\n    const lang = localStorage.getItem('language') === 'ua' ? 1 : 2;\r\n    return this.http.get<any[]>(`${this.url}/get-all-orders-data/${lang}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '@environment/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BonusesModel } from '../models/BonusesModel';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BonusesService {\r\n  private url: string = environment.backendUbsLink;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUserBonuses(): Observable<BonusesModel> {\r\n    return this.http.get<BonusesModel>(`${this.url}/ubs/client/users-pointsToUse`);\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BonusesModel } from './models/BonusesModel';\r\nimport { BonuseModel } from './models/BonuseModel';\r\nimport { BonusesService } from './services/bonuses.service';\r\nimport { Subject, throwError } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { MatSnackBarComponent } from '@global-errors/mat-snack-bar/mat-snack-bar.component';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-bonuses',\r\n  templateUrl: './ubs-user-bonuses.component.html',\r\n  styleUrls: ['./ubs-user-bonuses.component.scss']\r\n})\r\nexport class UbsUserBonusesComponent implements OnInit, OnDestroy {\r\n  displayedColumns: string[] = ['dateOfEnrollment', 'amount', 'reason'];\r\n  dataSource = new MatTableDataSource<BonuseModel>();\r\n  totalBonuses: number;\r\n  isLoading = true;\r\n  bonusesList: BonuseModel[];\r\n  destroy: Subject<boolean> = new Subject<boolean>();\r\n\r\n  constructor(private snackBar: MatSnackBarComponent, private bonusesService: BonusesService) {}\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngOnInit() {\r\n    this.getBonusesData();\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getBonusesData() {\r\n    this.isLoading = true;\r\n    this.bonusesService\r\n      .getUserBonuses()\r\n      .pipe(takeUntil(this.destroy))\r\n      .subscribe(\r\n        (res: BonusesModel) => {\r\n          this.bonusesList = res.ubsUserBonuses;\r\n          this.dataSource.data = res.ubsUserBonuses;\r\n          this.totalBonuses = res.userBonuses;\r\n          this.isLoading = false;\r\n        },\r\n        (error) => {\r\n          this.isLoading = false;\r\n          this.snackBar.openSnackBar('Oops, something went wrong. Please reload page or try again later.');\r\n          return throwError(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.bonusesList.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      return;\r\n    }\r\n\r\n    this.dataSource.data = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      return this.compare(new Date(a.dateOfEnrollment).getDate(), new Date(b.dateOfEnrollment).getDate(), isAsc);\r\n    });\r\n  }\r\n\r\n  compare(a: number | string, b: number | string, isAsc: boolean) {\r\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n    this.destroy.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"bonuses-container\">\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <div class=\"no-bonuses-wrapper\" *ngIf=\"!totalBonuses\">\r\n      <span class=\"no-bonuses-text\">{{ 'bonuses.no-bonuses' | translate }}</span>\r\n      <a href=\"#\" class=\"more-about-bonuses-link\">{{ 'bonuses.get-bonuses' | translate }}</a>\r\n    </div>\r\n    <div class=\"bonuses-exist-wrapper\" *ngIf=\"totalBonuses\">\r\n      <div class=\"total-bonuses-number\">\r\n        <p class=\"total-bonuses-number__header\">{{ 'bonuses.title' | translate }}</p>\r\n        <p class=\"total-bonuses-number__amount\">{{ totalBonuses }}</p>\r\n      </div>\r\n      <a href=\"\" class=\"more-about-bonuses-link link-center\">{{ 'bonuses.about-bonuses-system' | translate }}</a>\r\n      <div class=\"bonuses-table-wrapper\">\r\n        <table\r\n          mat-table\r\n          [dataSource]=\"dataSource\"\r\n          class=\"table\"\r\n          matSort\r\n          (matSortChange)=\"sortData($event)\"\r\n          aria-label=\"user's bonuses table\"\r\n        >\r\n          <ng-container matColumnDef=\"dateOfEnrollment\">\r\n            <th mat-header-cell *matHeaderCellDef class=\"table-header\" mat-sort-header scope=\"col\">\r\n              {{ 'bonuses.enrollment-date' | translate }}\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">{{ element.dateOfEnrollment | date: 'd.MM.yyyy' }}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"amount\">\r\n            <th mat-header-cell *matHeaderCellDef scope=\"col\">{{ 'bonuses.amount' | translate }}</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{ element.amount }}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"reason\">\r\n            <th mat-header-cell *matHeaderCellDef scope=\"col\">{{ 'bonuses.reason' | translate }}</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{ 'bonuses.order' | translate }} №{{ element.numberOfOrder }}</td>\r\n          </ng-container>\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <app-ubs-spinner *ngIf=\"isLoading\"></app-ubs-spinner>\r\n</div>\r\n","import { AfterViewInit, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\r\nimport { UserMessagesService } from '../../services/user-messages.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-notification-body',\r\n  templateUrl: './notification-body.component.html',\r\n  styleUrls: ['./notification-body.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NotificationBodyComponent implements AfterViewInit {\r\n  @Input() body: string;\r\n  @Input() orderId: number;\r\n  buttonRedirect: any;\r\n\r\n  constructor(public userMessagesService: UserMessagesService, public router: Router, private elementRef: ElementRef) {}\r\n\r\n  redirectToPayment() {\r\n    this.router.navigate(['ubs/notification/confirm/' + this.orderId]);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.elementRef.nativeElement.querySelector('.button-pay')) {\r\n      this.elementRef.nativeElement.querySelector('.button-pay').addEventListener('click', this.redirectToPayment.bind(this));\r\n    }\r\n  }\r\n}\r\n","<div [innerHTML]=\"this.body | translate\"></div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { UserMessagesService } from '../services/user-messages.service';\r\nimport { LocalStorageService } from '@global-service/localstorage/local-storage.service';\r\nimport { NotificationBody } from '../../ubs-admin/models/ubs-user.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ReplaySubject, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-messages',\r\n  templateUrl: './ubs-user-messages.component.html',\r\n  styleUrls: ['./ubs-user-messages.component.scss']\r\n})\r\nexport class UbsUserMessagesComponent implements OnInit, OnDestroy {\r\n  isAnyMessages = true;\r\n  notifications: NotificationBody[];\r\n  panelOpenState = false;\r\n  page = 1;\r\n  count = 0;\r\n  pageSize = 10;\r\n  isLoadSpinner: boolean;\r\n  isLoadSmallSpinner: boolean;\r\n  isLoadBar: boolean;\r\n  public countOfMessages: number;\r\n  private destroyed$: ReplaySubject<any> = new ReplaySubject<any>(1);\r\n  destroy: Subject<boolean> = new Subject<boolean>();\r\n  localization = {\r\n    title: 'ubs-user-notification.title',\r\n    id: 'ubs-user-notification.title-table.number',\r\n    themeMessages: 'ubs-user-notification.title-table.theme-messages',\r\n    time: 'ubs-user-notification.title-table.time'\r\n  };\r\n\r\n  constructor(\r\n    private userMessagesService: UserMessagesService,\r\n    private localStorageService: LocalStorageService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe((val) => {\r\n      this.page = +this.route.snapshot.paramMap.get('pageId');\r\n      this.subscribeToLangChange();\r\n    });\r\n  }\r\n\r\n  private subscribeToLangChange() {\r\n    this.localStorageService.languageBehaviourSubject.pipe(takeUntil(this.destroyed$)).subscribe(() => this.fetchNotification());\r\n  }\r\n\r\n  fetchNotification(): void {\r\n    this.isLoadBar = true;\r\n    this.userMessagesService\r\n      .getNotification(this.page - 1, this.pageSize)\r\n      .pipe(takeUntil(this.destroy))\r\n      .subscribe(\r\n        (response) => {\r\n          this.notifications = response.page;\r\n          this.count = response.totalElements;\r\n          this.isAnyMessages = this.notifications.length > 0;\r\n          this.isLoadSpinner = this.isLoadBar = false;\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  setRead(notificationId: number, isRead: boolean) {\r\n    let isGetNotificationBody = true;\r\n    let notificationItem: NotificationBody;\r\n    notificationItem = this.notifications.find((item) => item.id === notificationId);\r\n    if (notificationItem.body) {\r\n      isGetNotificationBody = false;\r\n    }\r\n    if (!notificationItem.read) {\r\n      this.userMessagesService.countOfNoReadeMessages--;\r\n    }\r\n    if (isGetNotificationBody) {\r\n      this.notifications.forEach((item) => {\r\n        if (item.id === notificationId) {\r\n          item.read = true;\r\n        }\r\n      });\r\n      this.isLoadSmallSpinner = true;\r\n      this.userMessagesService\r\n        .setReadNotification(notificationId)\r\n        .pipe(takeUntil(this.destroy))\r\n        .subscribe((response) => {\r\n          const findNotification = this.notifications.find((item) => item.id === notificationId);\r\n          findNotification.body = response.body;\r\n          findNotification.isOpen = true;\r\n          this.isLoadSmallSpinner = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  onTableDataChange(event) {\r\n    this.router.navigate(['/ubs-user/messages/' + event]);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n    this.destroy.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <div class=\"content\">\r\n    <div class=\"main_header\">{{ localization.title | translate }}</div>\r\n    <div class=\"header-list\">\r\n      <div class=\"col-2 id\">{{ localization.id | translate }}</div>\r\n      <div class=\"col-5\">{{ localization.themeMessages | translate }}</div>\r\n      <div class=\"col-5 time\">{{ localization.time | translate }}</div>\r\n    </div>\r\n    <div class=\"under-line\"></div>\r\n    <div class=\"load-spinner\" *ngIf=\"isLoadSpinner\">\r\n      <mat-spinner class=\"custom-spinner\"></mat-spinner>\r\n    </div>\r\n    <div class=\"load-bar\" *ngIf=\"isLoadBar\">\r\n      <mat-progress-bar class=\"custom-bar\" mode=\"indeterminate\"></mat-progress-bar>\r\n    </div>\r\n    <div *ngIf=\"!isAnyMessages\" class=\"if-empty\">У вас ще немає повідомлень</div>\r\n    <div *ngIf=\"isAnyMessages\">\r\n      <div\r\n        *ngFor=\"\r\n          let notification of notifications\r\n            | paginate\r\n              : {\r\n                  id: 'pag',\r\n                  itemsPerPage: pageSize,\r\n                  currentPage: page,\r\n                  totalItems: count\r\n                }\r\n        \"\r\n      >\r\n        <mat-accordion>\r\n          <mat-expansion-panel\r\n            (click)=\"setRead(notification.id, notification.read)\"\r\n            (opened)=\"panelOpenState = true\"\r\n            (closed)=\"panelOpenState = false\"\r\n          >\r\n            <mat-expansion-panel-header>\r\n              <mat-panel-title [ngClass]=\"{ textColorTitle: !notification.read }\">\r\n                <div class=\"col-2\">{{ notification.id }}</div>\r\n              </mat-panel-title>\r\n              <mat-panel-description [ngClass]=\"{ textColorTitle: !notification.read }\" class=\"title\">\r\n                {{ notification.title }}\r\n              </mat-panel-description>\r\n              <mat-panel-description class=\"date\" [ngClass]=\"{ textColorTitle: !notification.read }\">\r\n                {{ notification.notificationTime | date: 'HH:mm dd.MM.yyyy' }}\r\n              </mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n            <div class=\"load-spinner small\" *ngIf=\"isLoadSmallSpinner && !notification.isOpen\">\r\n              <mat-spinner class=\"custom-spinner\" diameter=\"60\"></mat-spinner>\r\n            </div>\r\n            <div class=\"description\" *ngIf=\"!isLoadSmallSpinner\">\r\n              <app-notification-body [body]=\"notification.body\" [orderId]=\"notification.orderId\"></app-notification-body>\r\n            </div>\r\n            <div *ngIf=\"notification.img\" class=\"description title-img\">Фотографії порушення</div>\r\n            <div *ngIf=\"notification.img\" class=\"description img\"><img src=\"{{ notification.img }}\" alt=\"\" /></div>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n      </div>\r\n      <div class=\"d-flex justify-content-center\">\r\n        <pagination-controls\r\n          autoHide=\"true\"\r\n          id=\"pag\"\r\n          class=\"my-pagination\"\r\n          previousLabel=\"\"\r\n          nextLabel=\"\"\r\n          directionLinks=\"true\"\r\n          maxSize=\"5\"\r\n          (pageChange)=\"onTableDataChange($event)\"\r\n        >\r\n        </pagination-controls>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-order-details',\r\n  templateUrl: './ubs-user-order-details.component.html',\r\n  styleUrls: ['./ubs-user-order-details.component.scss']\r\n})\r\nexport class UbsUserOrderDetailsComponent {\r\n  @Input()\r\n  order: any;\r\n}\r\n","<div class=\"full_card\">\r\n  <div class=\"header_details\">{{ 'user-orders.details.title' | translate }}</div>\r\n  <table class=\"table_of_details\" aria-label=\"orderDetailsTable\">\r\n    <tr class=\"header_table\">\r\n      <th scope=\"row\">{{ 'user-orders.details.services' | translate }}</th>\r\n      <th scope=\"row\">{{ 'user-orders.details.volume' | translate }}</th>\r\n      <th scope=\"row\">{{ 'user-orders.details.cost' | translate }}</th>\r\n      <th scope=\"row\">{{ 'user-orders.details.bags-amount' | translate }}</th>\r\n      <th scope=\"row\">{{ 'user-orders.details.sum' | translate }}</th>\r\n    </tr>\r\n    <tr *ngFor=\"let bag of order.bags\" class=\"data_table\">\r\n      <td>{{ bag.name }}Вторсировина</td>\r\n      <td>{{ bag.capacity }} {{ 'user-orders.details.litr' | translate }}</td>\r\n      <td>{{ bag.price }} {{ 'user-orders.details.currency' | translate }}</td>\r\n      <td>{{ order.amountOfBagsOrdered[bag.id] }} {{ 'user-orders.details.pieces' | translate }}</td>\r\n      <td>{{ order.amountOfBagsOrdered[bag.id] * bag.price }} {{ 'user-orders.details.currency' | translate }}</td>\r\n    </tr>\r\n    <tr>\r\n      <td></td>\r\n    </tr>\r\n    <tr class=\"sum_of_order\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.order-sum' | translate }}</td>\r\n      <td>{{ order.orderFullPrice }} {{ 'user-orders.details.currency' | translate }}</td>\r\n    </tr>\r\n    <tr *ngIf=\"order.orderCertificateTotalDiscount !== 0\" class=\"optional_row\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.certificate' | translate }}</td>\r\n      <td>-{{ order.orderCertificateTotalDiscount }} {{ 'user-orders.details.currency' | translate }}</td>\r\n    </tr>\r\n    <tr *ngIf=\"order.orderBonusDiscount !== 0\" class=\"optional_row\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.bonuses' | translate }}</td>\r\n      <td>-{{ order.orderBonusDiscount }} {{ 'user-orders.details.currency' | translate }}</td>\r\n    </tr>\r\n    <tr *ngIf=\"order.orderStatus === 'DONE_UNPAID'\" class=\"optional_row\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.services-amount' | translate }}</td>\r\n      <td>{{ order.orderExportedPrice }} {{ 'user-orders.details.currency' | translate }}</td>\r\n    </tr>\r\n    <tr class=\"sum_to_pay\">\r\n      <td colspan=\"4\">{{ 'user-orders.details.amount-due' | translate }}</td>\r\n      <td>{{ order.orderDiscountedPrice }} {{ 'user-orders.details.currency' | translate }}</td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n<div class=\"order_details\">\r\n  <ol *ngIf=\"order.additionalOrders[0] !== ''\">\r\n    <li class=\"bold_text\">{{ 'user-orders.details.delivery' | translate }}</li>\r\n    <li>\r\n      {{ 'user-orders.details.order-number' | translate }}\r\n      <span class=\"bold_text\"> {{ order.additionalOrders.join(', ') }}</span>\r\n    </li>\r\n  </ol>\r\n  <ol class=\"recipient\">\r\n    <li class=\"bold_text\">{{ 'user-orders.details.recipient' | translate }}</li>\r\n    <li>\r\n      <span>{{ order.recipientName }} </span><span>{{ order.recipientSurname }}</span>\r\n    </li>\r\n    <li>{{ order.recipientPhone }}</li>\r\n    <li>{{ order.recipientEmail }}</li>\r\n  </ol>\r\n  <ol>\r\n    <li class=\"bold_text\">{{ 'user-orders.details.export-address' | translate }}</li>\r\n    <li>{{ order.addressCity }}</li>\r\n    <li>{{ order.addressStreet }}</li>\r\n    <li>{{ order.addressDistrict }}</li>\r\n    <li *ngIf=\"order.addressComment !== null\">{{ 'user-orders.details.comment' | translate }} {{ order.addressComment }}</li>\r\n  </ol>\r\n</div>\r\n<div class=\"download\">\r\n  <div class=\"arrow\"><mat-icon [ngStyle]=\"{ fontSize: '16px' }\">arrow_downward</mat-icon></div>\r\n  <div class=\"maximize\"><mat-icon [ngStyle]=\"{ fontSize: '16px' }\">maximize</mat-icon></div>\r\n  <div class=\"text\">{{ 'user-orders.details.receipt' | translate }}</div>\r\n</div>\r\n<ng-template #spinner>\r\n  <app-ubs-spinner class=\"mx-auto\"></app-ubs-spinner>\r\n</ng-template>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-orders-list',\r\n  templateUrl: './ubs-user-orders-list.component.html',\r\n  styleUrls: ['./ubs-user-orders-list.component.scss']\r\n})\r\nexport class UbsUserOrdersListComponent {\r\n  @Input()\r\n  orders: any[];\r\n\r\n  isOrderFormed(order: any) {\r\n    return order.orderStatus === 'FORMED';\r\n  }\r\n\r\n  isOrderUnpaid(order: any) {\r\n    return order.orderStatus === 'DONE_UNPAID' || order.orderStatus === 'FORMED';\r\n  }\r\n\r\n  isOrderDone(order: any) {\r\n    return order.orderStatus === 'ON_THE_ROUTE' || order.orderStatus === 'CONFIRMED' || order.orderStatus === 'DONE';\r\n  }\r\n\r\n  changeCard(id: number) {\r\n    this.orders.forEach((order) => {\r\n      if (order.id === id) {\r\n        order.extend = !order.extend;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"orders.length !== 0\" class=\"header_list\">\r\n  <div>{{ 'user-orders.order-number' | translate }}</div>\r\n  <div>{{ 'user-orders.order-status' | translate }}</div>\r\n  <div>{{ 'user-orders.payment-amount' | translate }}</div>\r\n</div>\r\n<div *ngFor=\"let order of orders\" class=\"card\">\r\n  <div class=\"empty_card\">\r\n    <img *ngIf=\"order.extend\" src=\"assets/img/ubs-admin-orders/arrow_down.svg\" alt=\"arrow down\" (click)=\"changeCard(order.id)\" />\r\n    <img *ngIf=\"!order.extend\" src=\"assets/img/ubs-admin-orders/arrow_up.svg\" alt=\"arrow up\" (click)=\"changeCard(order.id)\" />\r\n    <div>{{ order.id }}</div>\r\n    <div>{{ order.orderStatusName }}</div>\r\n    <div class=\"order_sum\">{{ order.orderDiscountedPrice }}</div>\r\n    <div class=\"btns_group\">\r\n      <div *ngIf=\"isOrderFormed(order)\" class=\"btn_grid_cancel\">\r\n        <button class=\"btn_cancel\">{{ 'user-orders.btn.cancel' | translate }}</button>\r\n      </div>\r\n      <div *ngIf=\"isOrderUnpaid(order)\" class=\"btn_grid_pay\">\r\n        <button class=\"btn_pay\">{{ 'user-orders.btn.pay' | translate }}</button>\r\n      </div>\r\n      <div *ngIf=\"isOrderDone(order)\" class=\"btn_grid_order\">\r\n        <button class=\"btn_order\">{{ 'user-orders.btn.order-again' | translate }}</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"order.extend\">\r\n    <app-ubs-user-order-details [order]=\"order\"></app-ubs-user-order-details>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { catchError, takeUntil } from 'rxjs/operators';\r\nimport { Subject, throwError } from 'rxjs';\r\nimport { MatSnackBarComponent } from '@global-errors/mat-snack-bar/mat-snack-bar.component';\r\nimport { UserOrdersService } from '../services/user-orders.service';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-orders',\r\n  templateUrl: './ubs-user-orders.component.html',\r\n  styleUrls: ['./ubs-user-orders.component.scss']\r\n})\r\nexport class UbsUserOrdersComponent implements OnInit, OnDestroy {\r\n  destroy: Subject<boolean> = new Subject<boolean>();\r\n  orders: any[];\r\n  currentOrders: any[];\r\n  orderHistory: any[];\r\n  loading = false;\r\n  constructor(private snackBar: MatSnackBarComponent, private userOrdersService: UserOrdersService) {}\r\n\r\n  ngOnInit() {\r\n    this.userOrdersService\r\n      .getAllUserOrders()\r\n      .pipe(\r\n        takeUntil(this.destroy),\r\n        catchError((err) => {\r\n          this.snackBar.openSnackBar('Oops, something went wrong. Please reload page or try again later.');\r\n          return throwError(err);\r\n        })\r\n      )\r\n      .subscribe((item) => {\r\n        this.orders = item;\r\n        this.loading = true;\r\n        this.currentOrders = this.orders.filter((order) => order.orderStatus !== 'DONE' && order.orderStatus !== 'CANCELLED');\r\n        this.orderHistory = this.orders.filter((order) => order.orderStatus === 'DONE' || order.orderStatus === 'CANCELLED');\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n    this.destroy.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <div class=\"main_header\">{{ 'user-orders.order-title' | translate }}</div>\r\n  <div *ngIf=\"loading; else spinner\">\r\n    <div *ngIf=\"!orders || orders.length === 0\" class=\"if_empty\">\r\n      <span>{{ 'user-orders.no-orders' | translate }}</span\r\n      ><a href=\"#\">{{ 'user-orders.make-order' | translate }}</a>\r\n    </div>\r\n    <div *ngIf=\"orders && orders.length !== 0\" class=\"cards\">\r\n      <mat-tab-group animationDuration=\"0ms\">\r\n        <mat-tab label=\"{{ 'user-orders.current-orders' | translate }}\">\r\n          <app-ubs-user-orders-list [orders]=\"currentOrders\"></app-ubs-user-orders-list>\r\n        </mat-tab>\r\n        <mat-tab label=\"{{ 'user-orders.order-history' | translate }}\">\r\n          <app-ubs-user-orders-list [orders]=\"orderHistory\"></app-ubs-user-orders-list>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n      <div class=\"empty\"></div>\r\n    </div>\r\n  </div>\r\n  <ng-template #spinner>\r\n    <app-ubs-spinner class=\"mx-auto\"></app-ubs-spinner>\r\n  </ng-template>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-ubs-profile-change-password-pop-up',\r\n  templateUrl: './ubs-profile-change-password-pop-up.component.html',\r\n  styleUrls: ['./ubs-profile-change-password-pop-up.component.scss']\r\n})\r\nexport class UbsProfileChangePasswordPopUpComponent implements OnInit {\r\n  public formConfig: FormGroup;\r\n  private readonly passRegexp = /^(?=.*[A-Za-z]+)(?=.*\\d+)(?=.*[~`!@#$%^&*()+=_\\-{}|:;”’?\\/<>,.\\]\\[]+).{8,}$/;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  private initForm(): void {\r\n    this.formConfig = this.fb.group(\r\n      {\r\n        password: ['', [Validators.required, Validators.pattern(this.passRegexp)]],\r\n        currentPassword: ['', [Validators.required]],\r\n        confirmPassword: ['', [Validators.required]]\r\n      },\r\n      { validators: [this.checkConfirmPassword, this.checkNewPassword] }\r\n    );\r\n  }\r\n\r\n  checkConfirmPassword(group: FormGroup) {\r\n    const password = group.get('password').value;\r\n    const confirmPassword = group.get('confirmPassword').value;\r\n    return password === confirmPassword ? null : { notSame: true };\r\n  }\r\n\r\n  checkNewPassword(group: FormGroup) {\r\n    const password = group.get('password').value;\r\n    const currentPassword = group.get('currentPassword').value;\r\n    return password !== currentPassword ? null : { same: true };\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <h2 mat-dialog-title>{{ 'ubs-client-profile.change-password' | translate }}</h2>\r\n  <form [formGroup]=\"formConfig\">\r\n    <div class=\"input\">\r\n      <mat-form-field class=\"forms-inputs\">\r\n        <mat-label>{{ 'ubs-client-profile.old-password' | translate }}</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"currentPassword\" />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"input\">\r\n      <mat-form-field class=\"forms-inputs\">\r\n        <mat-label>{{ 'ubs-client-profile.new-password' | translate }}</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"password\" />\r\n      </mat-form-field>\r\n      <mat-error *ngIf=\"formConfig.errors?.same && formConfig.value.password\">\r\n        {{ 'ubs-client-profile.password-error-new' | translate }}\r\n      </mat-error>\r\n    </div>\r\n\r\n    <div class=\"input\">\r\n      <mat-form-field class=\"forms-inputs\">\r\n        <mat-label>{{ 'ubs-client-profile.repeat-password' | translate }}</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"confirmPassword\" />\r\n      </mat-form-field>\r\n      <mat-error *ngIf=\"formConfig.errors?.notSame\">\r\n        {{ 'ubs-client-profile.password-error-confirm' | translate }}\r\n      </mat-error>\r\n    </div>\r\n  </form>\r\n  <div class=\"action-btns\">\r\n    <mat-dialog-actions align=\"end\">\r\n      <button class=\"btn btn-ubs-outline-success\" mat-dialog-close>\r\n        {{ 'ubs-client-profile.btn.change-password-cancel' | translate }}\r\n      </button>\r\n      <button class=\"btn btn-ubs\" mat-dialog-close [disabled]=\"formConfig.invalid\" cdkFocusInitial>\r\n        {{ 'ubs-client-profile.btn.change-password' | translate }}\r\n      </button>\r\n    </mat-dialog-actions>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ubs-profile-delete-pop-up',\r\n  templateUrl: './ubs-profile-delete-pop-up.component.html',\r\n  styleUrls: ['./ubs-profile-delete-pop-up.component.scss']\r\n})\r\nexport class UbsProfileDeletePopUpComponent {}\r\n","<div class=\"dialog-container\">\r\n  <h3 mat-dialog-title>{{ 'ubs-client-profile.delete-title' | translate }}</h3>\r\n  <mat-dialog-content>\r\n    <p>{{ 'ubs-client-profile.delete-message' | translate }}</p>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button class=\"btn btn-ubs-outline-success\" mat-dialog-close>{{ 'ubs-client-profile.btn.delete-profile-cancel' | translate }}</button>\r\n    <button class=\"btn btn-success btn-ubs\" [mat-dialog-close]=\"true\" cdkFocusInitial>\r\n      {{ 'ubs-client-profile.btn.delete-profile-save' | translate }}\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SignInIcons } from 'src/app/main/image-pathes/sign-in-icons';\r\nimport { MatSnackBarComponent } from '@global-errors/mat-snack-bar/mat-snack-bar.component';\r\nimport { Address, UserProfile } from 'src/app/ubs-admin/models/ubs-admin.interface';\r\nimport { ClientProfileService } from 'src/app/ubs-user/services/client-profile.service';\r\nimport { UbsProfileDeletePopUpComponent } from './ubs-profile-delete-pop-up/ubs-profile-delete-pop-up.component';\r\nimport { UbsProfileChangePasswordPopUpComponent } from './ubs-profile-change-password-pop-up/ubs-profile-change-password-pop-up.component';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-profile-page',\r\n  templateUrl: './ubs-user-profile-page.component.html',\r\n  styleUrls: ['./ubs-user-profile-page.component.scss']\r\n})\r\nexport class UbsUserProfilePageComponent implements OnInit {\r\n  userForm: FormGroup;\r\n  userProfile: UserProfile;\r\n  defaultAddress: Address = {\r\n    actual: true,\r\n    city: '',\r\n    coordinates: {\r\n      latitude: 1,\r\n      longitude: 1\r\n    },\r\n    district: '',\r\n    entranceNumber: '',\r\n    houseCorpus: '',\r\n    houseNumber: '',\r\n    id: null,\r\n    street: ''\r\n  };\r\n\r\n  googleIcon = SignInIcons.picGoogle;\r\n  isEditing = false;\r\n  isFetching = false;\r\n  phoneMask = '+{38} 000 000 00 00';\r\n  private readonly regexp = /^([a-zа-яїєґ '-])+$/iu;\r\n  private readonly regexpEmail = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n  private readonly regexpWithDigits = /^([a-zа-яїєґ0-9 '-])+$/iu;\r\n\r\n  constructor(public dialog: MatDialog, private clientProfileService: ClientProfileService, private snackBar: MatSnackBarComponent) {}\r\n\r\n  ngOnInit() {\r\n    this.getUserData();\r\n  }\r\n\r\n  composeFormData(data: UserProfile) {\r\n    return {\r\n      ...data,\r\n      recipientPhone: data.recipientPhone?.slice(-9)\r\n    };\r\n  }\r\n\r\n  getUserData() {\r\n    this.isFetching = true;\r\n    this.clientProfileService.getDataClientProfile().subscribe(\r\n      (res: UserProfile) => {\r\n        this.userProfile = this.composeFormData(res);\r\n        this.userProfile.addressDto = this.userProfile.addressDto ?? this.defaultAddress;\r\n        this.userInit();\r\n        this.isFetching = false;\r\n      },\r\n      (err: Error) => {\r\n        this.isFetching = false;\r\n        this.snackBar.openSnackBar('ubs-client-profile.error-message');\r\n      }\r\n    );\r\n  }\r\n\r\n  userInit() {\r\n    this.userForm = new FormGroup({\r\n      address: new FormGroup({\r\n        city: new FormControl(this.userProfile?.addressDto.city, [Validators.pattern(this.regexp), Validators.maxLength(20)]),\r\n        street: new FormControl(this.userProfile?.addressDto.street, [Validators.pattern(this.regexpWithDigits), Validators.maxLength(20)]),\r\n        houseNumber: new FormControl(this.userProfile?.addressDto.houseNumber, [\r\n          Validators.pattern(this.regexpWithDigits),\r\n          Validators.maxLength(4)\r\n        ]),\r\n        houseCorpus: new FormControl(this.userProfile?.addressDto.houseCorpus, [\r\n          Validators.pattern(this.regexpWithDigits),\r\n          Validators.maxLength(4)\r\n        ]),\r\n        entranceNumber: new FormControl(this.userProfile?.addressDto.entranceNumber, [\r\n          Validators.pattern(this.regexpWithDigits),\r\n          Validators.maxLength(4)\r\n        ]),\r\n        district: new FormControl(this.userProfile?.addressDto.district, [\r\n          Validators.pattern(this.regexpWithDigits),\r\n          Validators.maxLength(20)\r\n        ])\r\n      }),\r\n      recipientName: new FormControl(this.userProfile?.recipientName, [Validators.required, Validators.pattern(this.regexp)]),\r\n      recipientSurname: new FormControl(this.userProfile?.recipientSurname, [Validators.required, Validators.pattern(this.regexp)]),\r\n      recipientEmail: new FormControl(this.userProfile?.recipientEmail, [Validators.required, Validators.pattern(this.regexpEmail)]),\r\n      recipientPhone: new FormControl(`+38 0${this.userProfile?.recipientPhone}`, [Validators.required, Validators.minLength(12)])\r\n    });\r\n    this.isFetching = false;\r\n  }\r\n\r\n  onEdit() {\r\n    this.isEditing = true;\r\n    this.isFetching = false;\r\n  }\r\n\r\n  onCancel() {\r\n    this.userInit();\r\n    this.isEditing = false;\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.userForm.valid) {\r\n      this.isFetching = true;\r\n      this.isEditing = false;\r\n      const submitData = {\r\n        addressDto: {\r\n          ...this.userForm.value.address,\r\n          id: this.userProfile.addressDto.id,\r\n          actual: this.userProfile.addressDto.actual,\r\n          coordinates: this.userProfile.addressDto.coordinates\r\n        },\r\n        recipientEmail: this.userForm.value.recipientEmail,\r\n        recipientName: this.userForm.value.recipientName,\r\n        recipientPhone: this.userForm.value.recipientPhone,\r\n        recipientSurname: this.userForm.value.recipientSurname\r\n      };\r\n      this.clientProfileService.postDataClientProfile(submitData).subscribe(\r\n        (res: UserProfile) => {\r\n          this.isFetching = false;\r\n          this.userProfile = this.composeFormData(res);\r\n        },\r\n        (err: Error) => {\r\n          this.isFetching = false;\r\n          this.snackBar.openSnackBar('ubs-client-profile.error-message');\r\n        }\r\n      );\r\n    } else {\r\n      this.isEditing = true;\r\n    }\r\n  }\r\n\r\n  openDeleteProfileDialog() {\r\n    this.dialog.open(UbsProfileDeletePopUpComponent, {\r\n      hasBackdrop: true\r\n    });\r\n  }\r\n\r\n  openChangePasswordDialog() {\r\n    this.dialog.open(UbsProfileChangePasswordPopUpComponent, {\r\n      hasBackdrop: true\r\n    });\r\n  }\r\n}\r\n","<!-- UNCOMMENT code below when back-end with functionality will be ready . -->\r\n<div class=\"ubs_profile-container mx-auto\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"ubs_profile-header\">\r\n        <div class=\"header-text\">\r\n          <h3>{{ 'ubs-client-profile.data' | translate }}</h3>\r\n        </div>\r\n        <!-- <button class=\"btn btn-ubs-outline-success edit\" (click)=\"onEdit()\" [disabled]=\"isEditing || isFetching\">\r\n          {{ 'ubs-client-profile.btn.edit' | translate }}\r\n        </button> -->\r\n      </div>\r\n      <div class=\"container-fluid\">\r\n        <p *ngIf=\"isEditing\" class=\"message-text\">\r\n          {{ 'ubs-client-profile.message-if-edit' | translate }}\r\n        </p>\r\n      </div>\r\n      <div class=\"input-group input-group-sm\">\r\n        <form *ngIf=\"!isFetching; else spinner\" [formGroup]=\"userForm\">\r\n          <h5>{{ 'ubs-client-profile.personal' | translate }}</h5>\r\n          <div class=\"form-group col-sm-5\">\r\n            <label for=\"recipientName\">{{ 'ubs-client-profile.name' | translate }}</label>\r\n            <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"recipientName\" formControlName=\"recipientName\" />\r\n            <p *ngIf=\"!isEditing\">{{ userProfile?.recipientName }}</p>\r\n          </div>\r\n          <div class=\"form-group col-sm-5\">\r\n            <label for=\"recipientSurname\">{{ 'ubs-client-profile.surname' | translate }}</label>\r\n            <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"recipientSurname\" formControlName=\"recipientSurname\" />\r\n            <p *ngIf=\"!isEditing\">{{ userProfile?.recipientSurname }}</p>\r\n          </div>\r\n          <h5>{{ 'ubs-client-profile.contacts' | translate }}</h5>\r\n          <div class=\"form-group col-sm-5\">\r\n            <label for=\"recipientEmail\" class=\"form-label\">{{ 'ubs-client-profile.email' | translate }}</label>\r\n            <input\r\n              *ngIf=\"isEditing\"\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              id=\"recipientEmail\"\r\n              [readonly]=\"true\"\r\n              formControlName=\"recipientEmail\"\r\n              aria-describedby=\"emailHelp\"\r\n            />\r\n            <p *ngIf=\"!isEditing\">{{ userProfile?.recipientEmail }}</p>\r\n          </div>\r\n          <div class=\"form-group col-sm-4\">\r\n            <label for=\"recipientPhone\" class=\"form-label\">{{ 'ubs-client-profile.phone' | translate }}</label>\r\n            <input\r\n              *ngIf=\"isEditing\"\r\n              type=\"tel\"\r\n              class=\"form-control\"\r\n              id=\"recipientPhone\"\r\n              [formControl]=\"userForm.controls['recipientPhone']\"\r\n              placeholder=\"+38___ ___ __ __\"\r\n              [unmask]=\"true\"\r\n              [imask]=\"{ mask: phoneMask }\"\r\n            />\r\n            <p *ngIf=\"!isEditing\">+380{{ userProfile?.recipientPhone }}</p>\r\n          </div>\r\n          <div class=\"address\" formGroupName=\"address\">\r\n            <h5>{{ 'ubs-client-profile.address' | translate }}</h5>\r\n            <div class=\"form-group col-sm-3\">\r\n              <label for=\"city\" class=\"form-label\">{{ 'ubs-client-profile.city' | translate }}</label>\r\n              <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"city\" formControlName=\"city\" />\r\n              <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.city }}</p>\r\n            </div>\r\n            <div class=\"house\">\r\n              <div class=\"form-group col-sm-3\">\r\n                <label for=\"street\" class=\"form-label\">{{ 'ubs-client-profile.street' | translate }}</label>\r\n                <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"street\" formControlName=\"street\" />\r\n                <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.street }}</p>\r\n              </div>\r\n              <div class=\"form-group col-sm-2\">\r\n                <label for=\"houseNumber\" class=\"form-label\">{{ 'ubs-client-profile.house' | translate }}</label>\r\n                <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"houseNumber\" formControlName=\"houseNumber\" />\r\n                <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.houseNumber }}</p>\r\n              </div>\r\n              <div class=\"form-group col-sm-2\">\r\n                <label for=\"houseCorpus\" class=\"form-label\">{{ 'ubs-client-profile.corpus' | translate }}</label>\r\n                <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"houseCorpus\" formControlName=\"houseCorpus\" />\r\n                <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.houseCorpus }}</p>\r\n              </div>\r\n              <div class=\"form-group col-sm-2\">\r\n                <label for=\"entranceNumber\" class=\"form-label\">{{ 'ubs-client-profile.entrance' | translate }}</label>\r\n                <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"entranceNumber\" formControlName=\"entranceNumber\" />\r\n                <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.entranceNumber }}</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group col-sm-3\">\r\n              <label for=\"district\" class=\"form-label\">{{ 'ubs-client-profile.district' | translate }}</label>\r\n              <input *ngIf=\"isEditing\" type=\"text\" class=\"form-control\" id=\"district\" formControlName=\"district\" />\r\n              <p *ngIf=\"!isEditing\">{{ userProfile?.addressDto.district }}</p>\r\n            </div>\r\n          </div>\r\n          <!-- <h5>{{ 'ubs-client-profile.account' | translate }}</h5> -->\r\n          <!-- <div class=\"account\">\r\n            <span>\r\n              <img [src]=\"googleIcon\" alt=\"google bind\" />\r\n            </span>\r\n            <p>{{ 'ubs-client-profile.account-message' | translate }}</p>\r\n          </div> -->\r\n        </form>\r\n      </div>\r\n      <div class=\"submit-btns\" *ngIf=\"isEditing\">\r\n        <button class=\"btn btn-ubs-outline-success cancel\" type=\"submit\" (click)=\"onCancel()\">\r\n          {{ 'ubs-client-profile.btn.cancel' | translate }}\r\n        </button>\r\n        <button class=\"btn btn-success\" type=\"submit\" (click)=\"onSubmit()\" [disabled]=\"!userForm.valid\">\r\n          {{ 'ubs-client-profile.btn.save' | translate }}\r\n        </button>\r\n      </div>\r\n      <div class=\"ubs_profile-footer\" *ngIf=\"!isEditing\">\r\n        <div class=\"footer-text\">\r\n          <h3>{{ 'ubs-client-profile.additional' | translate }}</h3>\r\n        </div>\r\n        <div class=\"footer-btns\">\r\n          <button class=\"btn btn-ubs-outline-success open\" (click)=\"openChangePasswordDialog()\">\r\n            {{ 'ubs-client-profile.btn.change-password' | translate }}\r\n          </button>\r\n          <button class=\"btn btn-ubs-outline-success delete\" (click)=\"openDeleteProfileDialog()\">\r\n            {{ 'ubs-client-profile.btn.delete-profile' | translate }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <ng-template #spinner>\r\n      <app-ubs-spinner class=\"mx-auto\"></app-ubs-spinner>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UbsUserGuardGuard } from './ubs-user-guard.guard';\r\nimport { UbsUserComponent } from './ubs-user.component';\r\nimport { UbsUserOrdersComponent } from './ubs-user-orders/ubs-user-orders.component';\r\nimport { UbsUserMessagesComponent } from './ubs-user-messages/ubs-user-messages.component';\r\nimport { UbsUserBonusesComponent } from './ubs-user-bonuses/ubs-user-bonuses.component';\r\nimport { UbsUserProfilePageComponent } from './ubs-user-profile-page/ubs-user-profile-page.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UbsUserComponent,\r\n    canActivate: [UbsUserGuardGuard],\r\n    children: [\r\n      { path: 'profile', component: UbsUserProfilePageComponent },\r\n      { path: 'orders', component: UbsUserOrdersComponent },\r\n      { path: 'bonuses', component: UbsUserBonusesComponent },\r\n      { path: `messages/:pageId`, component: UbsUserMessagesComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UbsUserRoutingModule {}\r\n","import { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { Component } from '@angular/core';\r\nimport { UbsBaseSidebarComponent } from 'src/app/shared/ubs-base-sidebar/ubs-base-sidebar.component';\r\nimport { UserMessagesService } from '../services/user-messages.service';\r\nimport { JwtService } from '@global-service/jwt/jwt.service';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user-sidebar',\r\n  templateUrl: './ubs-user-sidebar.component.html'\r\n})\r\nexport class UbsUserSidebarComponent extends UbsBaseSidebarComponent {\r\n  public listElementsUser: any[] = [\r\n    {\r\n      link: 'assets/img/sidebarIcons/workers_icon.svg',\r\n      name: 'ubs-user.user_data',\r\n      routerLink: 'profile'\r\n    },\r\n    {\r\n      link: 'assets/img/sidebarIcons/shopping-cart_icon.svg',\r\n      name: 'ubs-user.orders',\r\n      routerLink: 'orders'\r\n    },\r\n    {\r\n      link: './assets/img/sidebarIcons/achievement_icon.svg',\r\n      name: 'ubs-user.invoice',\r\n      routerLink: 'bonuses'\r\n    },\r\n    {\r\n      link: 'assets/img/sidebarIcons/none_notification_Bell.svg',\r\n      name: 'ubs-user.messages',\r\n      routerLink: 'messages/1'\r\n    }\r\n  ];\r\n\r\n  constructor(public service: UserMessagesService, public breakpointObserver: BreakpointObserver, public jwtService: JwtService) {\r\n    super(service, breakpointObserver, jwtService);\r\n  }\r\n}\r\n","<app-ubs-base-sidebar [listElements]=\"listElementsUser\">\r\n  <router-outlet></router-outlet>\r\n</app-ubs-base-sidebar>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { LocalStorageService } from '@global-service/localstorage/local-storage.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-ubs-user',\r\n  templateUrl: './ubs-user.component.html',\r\n  styleUrls: ['./ubs-user.component.scss']\r\n})\r\nexport class UbsUserComponent implements OnInit, OnDestroy {\r\n  private destroy: Subject<boolean> = new Subject<boolean>();\r\n  constructor(private translate: TranslateService, private localStorageService: LocalStorageService) {}\r\n\r\n  ngOnInit() {\r\n    this.localStorageService.languageBehaviourSubject.pipe(takeUntil(this.destroy)).subscribe((lang) => {\r\n      this.translate.setDefaultLang(lang !== 'en' && lang !== 'ua' ? 'ua' : lang);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy.next(true);\r\n    this.destroy.complete();\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<app-search-popup></app-search-popup>\r\n<app-ubs-user-sidebar></app-ubs-user-sidebar>\r\n<app-ubs-footer></app-ubs-footer>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { UbsUserOrdersListComponent } from './ubs-user-orders-list/ubs-user-orders-list.component';\r\nimport { UbsUserOrderDetailsComponent } from './ubs-user-order-details/ubs-user-order-details.component';\r\nimport { UbsUserOrdersComponent } from './ubs-user-orders/ubs-user-orders.component';\r\nimport { UbsUserRoutingModule } from './ubs-user-routing.module';\r\nimport { UbsUserComponent } from './ubs-user.component';\r\nimport { UbsUserSidebarComponent } from './ubs-user-sidebar/ubs-user-sidebar.component';\r\nimport { IMaskModule } from 'angular-imask';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { UbsUserMessagesComponent } from './ubs-user-messages/ubs-user-messages.component';\r\nimport { NotificationBodyComponent } from './ubs-user-messages/notification-body/notification-body.component';\r\nimport { UbsUserBonusesComponent } from './ubs-user-bonuses/ubs-user-bonuses.component';\r\nimport { MaterialModule } from '../material.module';\r\nimport { UbsUserProfilePageComponent } from './ubs-user-profile-page/ubs-user-profile-page.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UbsProfileChangePasswordPopUpComponent } from './ubs-user-profile-page/ubs-profile-change-password-pop-up/ubs-profile-change-password-pop-up.component';\r\nimport { UbsProfileDeletePopUpComponent } from './ubs-user-profile-page/ubs-profile-delete-pop-up/ubs-profile-delete-pop-up.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UbsUserSidebarComponent,\r\n    UbsUserBonusesComponent,\r\n    UbsUserComponent,\r\n    UbsUserOrderDetailsComponent,\r\n    UbsUserOrdersComponent,\r\n    UbsUserOrdersListComponent,\r\n    UbsUserMessagesComponent,\r\n    NotificationBodyComponent,\r\n    UbsUserProfilePageComponent,\r\n    UbsProfileChangePasswordPopUpComponent,\r\n    UbsProfileDeletePopUpComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    UbsUserRoutingModule,\r\n    SharedModule,\r\n    IMaskModule,\r\n    MatTabsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule.forChild({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: createTranslateLoaderUbsUser,\r\n        deps: [HttpClient]\r\n      },\r\n      isolate: true\r\n    }),\r\n    MatExpansionModule,\r\n    NgxPaginationModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule\r\n  ],\r\n  entryComponents: [UbsProfileChangePasswordPopUpComponent, UbsProfileDeletePopUpComponent]\r\n})\r\nexport class UbsUserModule {}\r\n\r\nexport function createTranslateLoaderUbsUser(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/ubs-admin/', '.json');\r\n}\r\n"]}